language: lua
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local n = 0\n\
    \  local i = 0\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.match('[A-Z]',c)\
    \ then\n      n = n + string.byte(c)\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppdgtsjbe.lua:33:\
    \ expected: 131, actual: 65\nstack traceback:\n\t/tmp/tmppdgtsjbe.lua:33: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + string.sub(s,i,i)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkg352n_s.lua:20:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpkg352n_s.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpkg352n_s.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for c in s:gmatch(\"%a\") do\n        sum = sum + string.char(c) --\
    \ ASCII\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq57r16eu.lua:20:\
    \ bad argument #1 to 'char' (number expected, got string)\nstack traceback:\n\t\
    /tmp/tmpq57r16eu.lua:20: in local 'candidate'\n\t/tmp/tmpq57r16eu.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local n =\
    \ 0\n    for i = 1, #s do\n        n = n + string.byte(s,i)\n    end\n    return\
    \ n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiz0o70tc.lua:29:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpiz0o70tc.lua:29: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\t-- Write your\
    \ solution here\n\tlocal sum = 0\n\tfor i = 1, #s do\n\t\tif tonumber(string.sub(s,\
    \ i, i)) > 127 then\n\t\t\tsum = sum + tonumber(string.sub(s,i,i))\n\t\tend\n\t\
    end\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt_qmigvv.lua:21:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpt_qmigvv.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpt_qmigvv.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i=1,#s do\n    sum = (sum + string.sub(s,i,i)) or 0\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphl6mw5ro.lua:20:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmphl6mw5ro.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmphl6mw5ro.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    sum = sum + tonumber(string.byte(c,1))\
    \ or 0\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0jvdt9qx.lua:30:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmp0jvdt9qx.lua:30: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + string.char(string.byte(s,i))\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv08pb1q9.lua:20:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpv08pb1q9.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpv08pb1q9.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.upper(c)\
    \ then\n      sum = sum + string.upper(c)\n    end\n  end\n  return sum\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdwdiyzv0.lua:22:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpdwdiyzv0.lua:22:\
    \ in local 'candidate'\n\t/tmp/tmpdwdiyzv0.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal sum =\
    \ 0\n\tfor index, letter in string.gmatch(s, '([%a]+)') do\n\t\tsum = sum + string.char(string.byte(letter)\
    \ - 64)\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpolecxr9c.lua:20:\
    \ bad argument #1 to 'byte' (string expected, got nil)\nstack traceback:\n\t/tmp/tmpolecxr9c.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpolecxr9c.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i=1,#s do\n    if string.sub(s,i,i)>=string.upper(string.sub(s,i,i))\
    \ then sum = sum + string.sub(s,i,i)-string.upper(string.sub(s,i,i)) end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1pkt83gd.lua:20:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmp1pkt83gd.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp1pkt83gd.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  -- TODO: rewrite\
    \ to remove explicit recursion\n  local sum = 0\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ > 'Z' then\n      sum = sum + string.sub(s,i,i)\n    end\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeq60rhs1.lua:22:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpeq60rhs1.lua:22:\
    \ in local 'candidate'\n\t/tmp/tmpeq60rhs1.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        sum = sum + tonumber(string.sub(s,i,i))\n\
    \    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmwu0r9me.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpmwu0r9me.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpmwu0r9me.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s, i, i)) * (#i -\
    \ 1)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpui7e834m.lua:20:\
    \ attempt to get length of a number value (local 'i')\nstack traceback:\n\t/tmp/tmpui7e834m.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpui7e834m.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local n = 0\n\
    \  for i = 1, #s do\n    if string.sub(s, i, i) >= 'A' and string.sub(s, i, i)\
    \ ~= 'Z' then\n      n = n + string.sub(s, i, i)\n    end\n  end\n  return n\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpznojzklz.lua:21:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpznojzklz.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpznojzklz.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = string.sub(s,i,i)\n        if string.byte(c)\
    \ >= 65 and string.byte(c) <= 90 then\n            sum = sum + string.byte(c)\
    \ - 48\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv75qn45e.lua:32:\
    \ expected: 131, actual: 35\nstack traceback:\n\t/tmp/tmpv75qn45e.lua:32: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp28klq047.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp28klq047.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp28klq047.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  return string.gsub(string.gsub(s,\
    \ \"[^0-9]\", \"\"), \"[^A-Z]\", \"\"):gsub(\"%a+\",\"\",\"\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp51szfk7d.lua:18:\
    \ bad argument #3 to 'gsub' (number expected, got string)\nstack traceback:\n\t\
    /tmp/tmp51szfk7d.lua:18: in local 'candidate'\n\t/tmp/tmp51szfk7d.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp28klq047.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp28klq047.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp28klq047.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n   local s = 0\n\
    \   for _,v in string.gmatch(s, '([%aA]+)') do\n      s = s + tonumber(v)\n  \
    \ end\n   return s\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm361jo62.lua:29:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpm361jo62.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n   local sum =\
    \ 0\n   for i = 1, #s do\n      sum = sum + tonumber(string.sub(s,i,i)) -- ascii\
    \ code\n   end\n   return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphjnz10vj.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmphjnz10vj.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmphjnz10vj.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    return s:gsub('.',\
    \ function(c)\n        return string.char(tonumber(c))\n    end)\nend\n</cell>\n\
    <cell>\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2l5n6ic_.lua:22: unexpected symbol near ''<''

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s, 2 do\n    sum = sum + tonumber(string.sub(s, i, i)) + tonumber(string.sub(s,\
    \ i + 1, i + 1))\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptk00k1rg.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmptk00k1rg.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmptk00k1rg.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  if #s == 0 then\
    \ return 0 end\n  return #s * (#s + 1) / 2\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp75uz_hp6.lua:26:\
    \ expected: 131, actual: 10.0\nstack traceback:\n\t/tmp/tmp75uz_hp6.lua:26: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal sum =\
    \ 0\n\tfor i = 1, #s do\n\t\tlocal c\n\t\tif string.sub(s,i,i) == 'A' or string.sub(s,i,i)\
    \ == 'a' then\n\t\t\tc = string.char(string.sub(s,i,i) + string.sub(s,i,i))\n\t\
    \telse\n\t\t\tc = string.sub(s,i,i)\n\t\tend\n\t\tsum = sum + string.byte(c)\n\
    \tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdffmjlwh.lua:22:\
    \ attempt to add a 'string' with a 'string'\nstack traceback:\n\t/tmp/tmpdffmjlwh.lua:22:\
    \ in local 'candidate'\n\t/tmp/tmpdffmjlwh.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s, 1 do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphmps8vot.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmphmps8vot.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmphmps8vot.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  -- Write your\
    \ solution here\n  return 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpui_y2r10.lua:26:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpui_y2r10.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal result\
    \ = 0\n\tlocal digits = {}\n\t-- Iterate through the string and sum all non-digits\n\
    \tfor i = 1, #s, 1 do\n\t\tlocal c = string.sub(s,i,i)\n\t\tif c ~= tonumber(c)\
    \ then\n\t\t\tresult = result + (tonumber(c) or 0)\n\t\telse\n\t\t\tdigits[#digits\
    \ + 1] = string.byte(c)\n\t\tend\n\tend\n\t-- Calculate the sum of all digits\
    \ in the string\n\tfor i = 1, #digits do\n\t\tresult = result + (tonumber(digits[i])\
    \ or 0)\n\tend\n\t-- Return the sum\n\treturn result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppjx0tdwg.lua:41:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmppjx0tdwg.lua:41: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal sum =\
    \ 0\n\tfor i = 1, #s do\n\t\tsum = sum + tonumber(tostring(string.sub(s,i,i)))\n\
    \tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcwn71p_.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpgcwn71p_.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpgcwn71p_.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local result\
    \ = 0\n  s:gsub('.', function (c) result = result + tostring(c:byte()) end) --\
    \ Convert string to ASCII codes\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2bwsab0g.lua:27:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmp2bwsab0g.lua:27: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i=1,#s do\n    if string.sub(s,i,i)==\"A\" then sum = sum + string.sub(s,i,i)\n\
    \    else sum = sum + string.sub(s,i,i) + 128\n    end\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplptqc5vo.lua:21:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmplptqc5vo.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmplptqc5vo.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    if string.sub(s,i,i) then\n      sum = sum + string.char(string.byte(string.sub(s,i,i))\
    \ - (64 - string.byte('a')))\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo16atx4v.lua:21:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpo16atx4v.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpo16atx4v.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal sum =\
    \ 0\n\tfor i = 1, #s do\n\t\tsum = sum + tonumber(string.sub(s,i,i)) \n\tend\n\
    \treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphef0i5dr.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmphef0i5dr.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmphef0i5dr.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i=1,#s do\n    local c = string.sub(s,i,i)\n    if string.byte(c) <\
    \ 128 then sum = sum + string.byte(c) else sum = sum + string.byte(c) - 32\n \
    \ end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpi0ixv__d.lua:39: ''end'' expected (to close ''function'' at
    line 17) near <eof>

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    if string.sub(s,i,i) > 'a' then\n      sum = sum\
    \ + string.sub(s,i,i)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjcp15tsw.lua:21:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpjcp15tsw.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpjcp15tsw.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i)):byte()\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_lsx3ad_.lua:20:\
    \ attempt to index a nil value\nstack traceback:\n\t/tmp/tmp_lsx3ad_.lua:20: in\
    \ local 'candidate'\n\t/tmp/tmp_lsx3ad_.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  return tonumber(string.gsub(s,\
    \ '([A-Z])', function ()\n    return string.char(string.byte(string.sub(s, 1,\
    \ 1)) ^ string.byte(string.sub(s, 2, 2))\n  end)\n  ):reverse()\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpvhlb97_o.lua:20: '')'' expected (to close ''('' at line 19)
    near ''end''

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s, i, i)) - (tonumber(string.sub(s,\
    \ i - 1, i)) or 0)\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5dbx2ynh.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp5dbx2ynh.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp5dbx2ynh.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  s = string.gsub(s,\
    \ '([%zA-Z])', function(s)\n    return string.charcode(string.sub(s,1,1)) + string.charcode(string.sub(s,2,2))\n\
    \  end)\n  return #s\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpay802380.lua:19:\
    \ attempt to call a nil value (field 'charcode')\nstack traceback:\n\t/tmp/tmpay802380.lua:19:\
    \ in function </tmp/tmpay802380.lua:18>\n\t[C]: in function 'string.gsub'\n\t\
    /tmp/tmpay802380.lua:18: in local 'candidate'\n\t/tmp/tmpay802380.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for _,c in ipairs(s) do\n        if string.char(c) >= 48 and string.char(c)\
    \ <= 57 then\n            sum = sum + string.char(c)\n        end\n    end\n \
    \   return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp87xvpx98.lua:31:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmp87xvpx98.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal total\
    \ = 0\n\tfor c in s:gmatch('%a') do\n\t\ttotal = total + c\n\tend\n\treturn total\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2lwmlnck.lua:20:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmp2lwmlnck.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp2lwmlnck.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal sum =\
    \ 0\n\tfor i=1,#s do\n\t\tif string.sub(s,i,i) ~= nil then\n\t\t\tsum = sum +\
    \ string.sub(s,i,i)\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppqbydmvh.lua:21:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmppqbydmvh.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmppqbydmvh.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    return sum(string.gsub(s,\
    \ function()\n        local c, d = string.sub(s, 1, 1), string.sub(s, 2, 1)\n\
    \        return string.char(c) + ((string.byte(c) - 48) + string.byte(d) - 48)\n\
    \    end))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphe_3kb16.lua:18:\
    \ bad argument #2 to 'gsub' (string expected, got function)\nstack traceback:\n\
    \t/tmp/tmphe_3kb16.lua:18: in local 'candidate'\n\t/tmp/tmphe_3kb16.lua:27: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  return s:gsub(\"\
    %l+\", function (c)\n    return string.char(c) .. string.upper(string.sub(c, 1,\
    \ 1)) .. string.sub(c + 1, 1)\n  end)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_fqch2ug.lua:26:\
    \ expected: 0, actual: \"\"\nstack traceback:\n\t/tmp/tmp_fqch2ug.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal total\
    \ = 0\n\tfor i = 1, #s do\n\t\tif string.sub(s,i,i) ~= nil then\n\t\t\ttotal =\
    \ total + tonumber(string.sub(s,i,i))\n\t\tend\n\tend\n\treturn total\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5lb0x80n.lua:21:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp5lb0x80n.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmp5lb0x80n.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        if string.sub(s, i, i) ~= string.sub(s,i,\
    \ i) then\n            sum = sum + string.sub(s,i, i)\n        end\n    end\n\
    \    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0bhcb_k1.lua:31:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmp0bhcb_k1.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\t-- Write your\
    \ solution here\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvrfui66s.lua:24:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmpvrfui66s.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 0, #s do\n    if string.sub(s,i,i) >= 'A' and string.sub(s,i,i)\
    \ <='Z' then\n      sum = sum + string.sub(s,i,i)\n    end\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbuza5w0i.lua:21:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpbuza5w0i.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpbuza5w0i.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s, 1 do\n    local c = string.sub(s, i, i)\n    sum = sum +\
    \ string.char(tonumber(c))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw9rbnslc.lua:21:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpw9rbnslc.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpw9rbnslc.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\ts = string.gsub(s,\
    \ '[%a]+', '')\n\treturn #s + sum(string.char(string.byte(s[i])) for i = 1, string.len(s))\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpx5k4w_kz.lua:19: '')'' expected near ''for''

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for _, _ in string.gmatch(s, '[%D]+') do\n    sum = sum + tonumber(_)\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9s5rmsyn.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp9s5rmsyn.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp9s5rmsyn.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i,v in pairs(s) do\n        if v >= '0' and v <= '9' then\n   \
    \         sum = sum + tonumber(v)\n        elseif v >= 'a' and v <= 'z' then\n\
    \            sum = sum + 26 + tonumber(v - 'a')\n        elseif v >= 'A' and v\
    \ <= 'Z' then\n            sum = sum + 26 + tonumber(v - 'A')\n        end\n \
    \   end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmntyo85w.lua:19:\
    \ bad argument #1 to 'for iterator' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmpmntyo85w.lua:19: in local 'candidate'\n\t/tmp/tmpmntyo85w.lua:34: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  s = s:lower()\n\
    \  local sum = 0\n  for i = 1, #s do\n    sum = sum + string.char(string.byte(s,i):byte(1))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplo56b7n3.lua:21:\
    \ attempt to index a number value\nstack traceback:\n\t/tmp/tmplo56b7n3.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmplo56b7n3.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n   -- Write your\
    \ solution here\n   if s == \"nil\" then\n      return 0\n   else\n      local\
    \ sum = 0\n      for i = 1, #s do\n         sum = sum + tonumber(tostring(s:sub(i,\
    \ i)):upper())\n      end\n      return sum\n   end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjy4cq7x.lua:24:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpxjy4cq7x.lua:24:\
    \ in local 'candidate'\n\t/tmp/tmpxjy4cq7x.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local total\
    \ = 0\n    for i = 1, #s do\n        total = total + (ord(s) - 48)\n    end\n\
    \    return total\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp46hrqa8n.lua:20:\
    \ attempt to call a nil value (global 'ord')\nstack traceback:\n\t/tmp/tmp46hrqa8n.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp46hrqa8n.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\ts = string.gsub(s,\
    \ {'%a+', function(a)\n\t\treturn tonumber(a, '%a')\n\tend})\n\treturn string.byte(string.sub(s,\
    \ '%a+'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxoipct90.lua:18:\
    \ bad argument #2 to 'gsub' (string expected, got table)\nstack traceback:\n\t\
    /tmp/tmpxoipct90.lua:18: in local 'candidate'\n\t/tmp/tmpxoipct90.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local function\
    \ sum(v)\n    return v + math.abs(v) * (string.len(s) - v)\n  end\n  local result\
    \ = math.nan\n  for i = 1, string.len(s) do\n    local c = string.sub(s,i,i)\n\
    \    local v = string.char(c)\n    local c = string.byte(c)\n    if c >= '0' and\
    \ c <= '9' then\n      result = sum(result) + c\n    else\n      result = math.max(result,\
    \ 0)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcd1do1va.lua:38:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmpcd1do1va.lua:38: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1,#s do\n    if string.sub(s,i,i) <= '9' then\n      sum = sum\
    \ + string.sub(s,i,i)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvlu8vlbe.lua:31:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpvlu8vlbe.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i)) \n  end\n\
    \  return sum\nend\n</cell>\n<cell>\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpy00x6aus.lua:24: unexpected symbol near ''<''

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  local c = string.sub(s, 1, 1)\n  while c ~= nil do\n    sum = sum + math.floor(c)\n\
    \    c = string.sub(s, 2, 2)\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphi91_rmi.lua:21:\
    \ bad argument #1 to 'floor' (number expected, got string)\nstack traceback:\n\
    \t/tmp/tmphi91_rmi.lua:21: in local 'candidate'\n\t/tmp/tmphi91_rmi.lua:30: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local acc =\
    \ 0\n  while true do\n    local char = string.sub(s,1,1)\n    if not char then\
    \ break end\n    acc = acc + string.byte(char)\n    s = string.sub(s,2,string.len(s)-1)\n\
    \  end\n  return acc\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnbpbr6dx.lua:22:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpnbpbr6dx.lua:22:\
    \ in local 'candidate'\n\t/tmp/tmpnbpbr6dx.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  -- Check preconditions\n\
    \  if not s then return 0 end\n  if s:match('^[a-z]+') then -- Check string begins\
    \ with one or more lowercase letters\n    return s:match('^[a-z]+')\n  end\n \
    \ -- Remove empty characters and return sum of the ascii codes\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + tonumber(s[i]:sub(1,1):byte())\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp19d3pwg5.lua:35:\
    \ expected: 131, actual: \"ab\"\nstack traceback:\n\t/tmp/tmp19d3pwg5.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local i, j,\
    \ k, m, n = 0, 0, 0\n    for _,v in pairs(s) do\n        if v:byte() > 32 then\n\
    \            if n == 0:\n                i = v:byte()\n            else\n    \
    \            k = i:byte()\n                j = v:byte()\n                m, n\
    \ = k + j, n\n            end\n        end\n    end\n    return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg71vzlz.lua:21: ''then'' expected near '':''

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\t-- Your code\
    \ here\n\tlocal function sumUpTo(n)\n\t\tif n == 1 then\n\t\t\treturn n\n\t\t\
    end\n\t\treturn sumUpTo(n-1) + n\n\tend\n\treturn sumUpTo(string.len(s)) + string.len(s)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8c56bj2i.lua:23:\
    \ stack overflow\nstack traceback:\n\t/tmp/tmp8c56bj2i.lua:23: in upvalue 'sumUpTo'\n\
    \t/tmp/tmp8c56bj2i.lua:23: in upvalue 'sumUpTo'\n\t/tmp/tmp8c56bj2i.lua:23: in\
    \ upvalue 'sumUpTo'\n\t/tmp/tmp8c56bj2i.lua:23: in upvalue 'sumUpTo'\n\t/tmp/tmp8c56bj2i.lua:23:\
    \ in upvalue 'sumUpTo'\n\t/tmp/tmp8c56bj2i.lua:23: in upvalue 'sumUpTo'\n\t/tmp/tmp8c56bj2i.lua:23:\
    \ in upvalue 'sumUpTo'\n\t/tmp/tmp8c56bj2i.lua:23: in upvalue 'sumUpTo'\n\t/tmp/tmp8c56bj2i.lua:23:\
    \ in upvalue 'sumUpTo'\n\t...\t(skipping 499955 levels)\n\t/tmp/tmp8c56bj2i.lua:25:\
    \ in local 'candidate'\n\t/tmp/tmp8c56bj2i.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.240 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n   local sum =\
    \ 0\n   for i = 1, #s, 1 do\n      local c = string.byte(s,i)\n      if string.byte(s,i)\
    \ >= 128 then\n         sum = sum + c\n      else\n         sum = sum + 0\n  \
    \    end\n   end\n   return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplf51k0rb.lua:34:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmplf51k0rb.lua:34: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp28klq047.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp28klq047.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp28klq047.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local upperChars\
    \ = {}\n  for i = 1, #s do\n    local char = string.sub(s,i,i)\n    if string.find(char,\
    \ '[A-Z]') then\n      table.insert(upperChars, char)\n    end\n  end\n  return\
    \ #upperChars * 10 + #upperChars + 1\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx78wf4cx.lua:31:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpx78wf4cx.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for c in s:gmatch(\"%l\") do\n        sum = sum + string.char(c) --\
    \ + math.floor(c)\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc4jcv3s8.lua:20:\
    \ bad argument #1 to 'char' (number expected, got string)\nstack traceback:\n\t\
    /tmp/tmpc4jcv3s8.lua:20: in local 'candidate'\n\t/tmp/tmpc4jcv3s8.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local s =\
    \ 0\n    for i = 1, #s do\n        local c = s[i]\n        if c > 47 then s =\
    \ s + c - 48\n        else s = s + c\n        end\n    end\n    return s\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaw8_jrbv.lua:19:\
    \ attempt to get length of a number value (local 's')\nstack traceback:\n\t/tmp/tmpaw8_jrbv.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmpaw8_jrbv.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  if s == nil\
    \ then return nil end\n  local result = 1\n  s = string.gsub(s, '[^A-Za-z0-9]+',\
    \ '')\n  for i = 1, #s, 1 do\n    local c = string.sub(s, i, i)\n    local digit\
    \ = string.byte(c)\n    if digit > 32 then\n      result = result + digit - 96\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpumkr5wsz.lua:34:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpumkr5wsz.lua:34: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local n = 0\n\
    \  for c in s:gmatch('.') do\n    n = n*10 + (tonumber(c:byte()) or 0)\n  end\n\
    \  return n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy5l_zbqp.lua:29:\
    \ expected: 131, actual: 107516\nstack traceback:\n\t/tmp/tmpy5l_zbqp.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n   local t = 0\n\
    \   for i=1,#s do\n      t = t + string.sub(s,i,i+1)\n   end\n   return t\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk8gutnn8.lua:20:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpk8gutnn8.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpk8gutnn8.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  return sum(string.gsub(s,\
    \ \"%..\", \"%1\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5t9eei8x.lua:18:\
    \ attempt to call a nil value (global 'sum')\nstack traceback:\n\t/tmp/tmp5t9eei8x.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmp5t9eei8x.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    -- base case\n\
    \    if s == '' then\n        return 0\n    end\n    \n    -- get the first character\
    \ of s\n    local first = s[1]\n    \n    -- get the first index of first character\n\
    \    local index = string.find(s, '^')\n    \n    -- get first index of first\
    \ character + 1\n    local next_index = string.find(s, first, index)\n    \n \
    \   -- if there is a '^', the string starts after the index\n    if next_index\
    \ == nil then\n        next_index = #s\n    end\n    \n    -- get the sum of the\
    \ first character\n    local sum = string.byte(first, index)\n    \n    -- get\
    \ the sum of the next character to sum\n    for i=next_index,#s do\n        sum\
    \ = sum + string.byte(s[i], index)\n    end\n    \n    -- return the sum\n   \
    \ return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5k0yk0bz.lua:30:\
    \ bad argument #2 to 'find' (string expected, got nil)\nstack traceback:\n\t/tmp/tmp5k0yk0bz.lua:30:\
    \ in local 'candidate'\n\t/tmp/tmp5k0yk0bz.lua:53: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local c =\
    \ ''\n    local sum = 0\n    for i = 1, #s do\n        local c = string.byte(s,i)\n\
    \        sum = sum + c\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvvdf7dm4.lua:31:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpvvdf7dm4.lua:31: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  -- TODO: check\
    \ if s is an ascii string\n  s = s:upper()\n  return sum(s)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp637dt3sw.lua:20:\
    \ attempt to call a nil value (global 'sum')\nstack traceback:\n\t/tmp/tmp637dt3sw.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp637dt3sw.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  return string.gsub(s,\
    \ \"[%w]\", function(c)\n    return tonumber(string.sub(tostring(c), 1, 1)) +\
    \ tonumber(string.sub(tostring(c), 2, 2))\n  end, 0)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjeupbmxq.lua:26:\
    \ expected: 0, actual: \"\"\nstack traceback:\n\t/tmp/tmpjeupbmxq.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local total\
    \ = 0\n  for i=1,#s do\n    total = total + tonumber(string.sub(s,i,i))\n  end\n\
    \  return total\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf5oupxq2.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpf5oupxq2.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpf5oupxq2.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    return string.gsub(s,\
    \ '[^a-zA-Z0-9]+', function(x)\n        return string.byte(x) - string.byte('A')\
    \ + 2\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuas0snup.lua:26:\
    \ expected: 0, actual: \"\"\nstack traceback:\n\t/tmp/tmpuas0snup.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local c=0\n\
    \    local r={}\n    for i,v in ipairs(s) do\n        local n=tonumber(v)\n  \
    \      if n then c=c+n end\n        r[c]=v\n    end\n    return #r\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqr2vvkdc.lua:32:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpqr2vvkdc.lua:32: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for _, c in string.gmatch(s, '[%a]') do\n        sum = sum + string.byte(c):byte()\
    \ * (26 - string.byte(c):byte())\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0kwdjn2m.lua:20:\
    \ bad argument #1 to 'byte' (string expected, got nil)\nstack traceback:\n\t/tmp/tmp0kwdjn2m.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp0kwdjn2m.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i=1,#s do\n        sum = sum + string.sub(s,i,i)\n    end\n   \
    \ return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3us3hc3q.lua:20:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmp3us3hc3q.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp3us3hc3q.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal upperCaseLetters\
    \ = 0\n\tlocal upperCaseLetterCount = 0\n\tfor char in s:gmatch(\"%a\") do \n\t\
    \tupperCaseLetters = upperCaseLetters + char:upper()\n\t\tupperCaseLetterCount\
    \ = upperCaseLetterCount + 1\n\tend\n\treturn upperCaseLetters\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1mlabd02.lua:21:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmp1mlabd02.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmp1mlabd02.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local s =\
    \ 0\n    for i = 1, #s do\n        local ch = string.sub(s,i,i)\n        if ch:upper()\
    \ then\n            s = s + ch:byte()\n        end\n    end\n    return s\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz5lzag37.lua:19:\
    \ attempt to get length of a number value (local 's')\nstack traceback:\n\t/tmp/tmpz5lzag37.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmpz5lzag37.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n   local sum =\
    \ 0\n   for i = 1, #s, 2 do\n      sum = (sum * 16 + tonumber(string.sub(s, i,\
    \ i + 1))) -- add digits together\n   end\n   return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8cmakd6w.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp8cmakd6w.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp8cmakd6w.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local result\
    \ = 0\n  for c in s:gmatch'%(%-?%d%d%d)' do\n    local char = string.byte(c)\n\
    \    if char > 48 and char < 65 then\n      result = result + char - 48\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpapn8hinz.lua:32:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpapn8hinz.lua:32: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  return sum(string.gsub(s,\
    \ '[%w]', function(c) return tostring(c):byte() end))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwf25sg89.lua:18:\
    \ attempt to call a nil value (global 'sum')\nstack traceback:\n\t/tmp/tmpwf25sg89.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpwf25sg89.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  s = string.lower(s)\n\
    \  local sum = 0\n  for i = 1, #s do\n    local code = tonumber(string.sub(s,i,i))\n\
    \    sum = sum + code + code ^ 1\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkxuxt79m.lua:22:\
    \ attempt to perform arithmetic on a nil value (local 'code')\nstack traceback:\n\
    \t/tmp/tmpkxuxt79m.lua:22: in local 'candidate'\n\t/tmp/tmpkxuxt79m.lua:31: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local code = string.byte(s[i], i)\n    if code >=\
    \ 65 and code <= 90 or code >= 97 and code <= 122 then\n      sum = sum + code\
    \ - 65\n    else\n      return nil\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2_xp1y61.lua:20:\
    \ bad argument #1 to 'byte' (string expected, got nil)\nstack traceback:\n\t/tmp/tmp2_xp1y61.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp2_xp1y61.lua:34: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local result\
    \ = 0\n    for i = 1, #s, 2 do\n        result = result + tonumber(string.sub(s,\
    \ i, i+2))\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2mca31rv.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2mca31rv.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp2mca31rv.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    local digits = {}\n    local i = 1\n    for c in s:gmatch(\"%S+\")\
    \ do\n        digits[i] = tonumber(c)\n        i = i + 1\n    end\n    -- The\
    \ last number in digits is the sum\n    if #digits == 1 then\n        sum = digits[1]\n\
    \    else\n        local last = digits[1]\n        for i = 1, #digits do\n   \
    \         sum = sum + digits[i]\n        end\n        sum = sum + last\n    end\n\
    \    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkv37rkz1.lua:33:\
    \ attempt to perform arithmetic on a nil value (local 'last')\nstack traceback:\n\
    \t/tmp/tmpkv37rkz1.lua:33: in local 'candidate'\n\t/tmp/tmpkv37rkz1.lua:41: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n   s = string.gsub(s,\
    \ '[%z\\1-\\127\\194-\\244]+', '')\n   return (string.gsub(s, string.char(128),\
    \ '') + string.gsub(s, string.char(254), '') + string.gsub(s, string.char(255),\
    \ ''))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsyw2wvsc.lua:19:\
    \ attempt to add a 'string' with a 'string'\nstack traceback:\n\t/tmp/tmpsyw2wvsc.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmpsyw2wvsc.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        if string.sub(s,i,i) >= 'a' and string.sub(s,i,i)\
    \ <= 'z' then\n            sum = sum + string.sub(s,i,i)-string.sub(s,i,i)+'a'\n\
    \        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyksi9m49.lua:21:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpyksi9m49.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpyksi9m49.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  return sum(s:gsub(\"\
    %..\", \"\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa96wo9j9.lua:18:\
    \ attempt to call a nil value (global 'sum')\nstack traceback:\n\t/tmp/tmpa96wo9j9.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpa96wo9j9.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\t-- assert(type(s)\
    \ == 'string')\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpuv625zsw.lua:33: ''end'' expected (to close ''function'' at
    line 17) near <eof>

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  return #s +\
    \ s\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg2tfafvi.lua:18:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpg2tfafvi.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpg2tfafvi.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n   local total\
    \ = 0\n   for i=1, #s do\n      total = total + tonumber(s[i])\n   end\n   return\
    \ total\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpimjv4od7.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpimjv4od7.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpimjv4od7.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  s = s:upper():gsub('%W',\
    \ function()\n      return string.byte(string.sub(s, 1, 1)) .. string.byte(string.sub(s,\
    \ 2, 1)) .. string.byte(string.sub(s, 3, 1))\n  end)\n  return tonumber(s)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_tv0zgcr.lua:27:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmp_tv0zgcr.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  return string.gsub(s,\
    \ '[%d-%d]', function(x)\n    return string.byte(x)\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr74dq4i8.lua:26:\
    \ expected: 0, actual: \"\"\nstack traceback:\n\t/tmp/tmpr74dq4i8.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i=1, #s do\n    sum = sum + tonumber(string.sub(s, i, i))\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw0ird9cs.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpw0ird9cs.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpw0ird9cs.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        sum = sum + string.char(string.byte(s,i)-65)\n\
    \    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxfwzj25i.lua:20:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpxfwzj25i.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpxfwzj25i.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n   -- Write your\
    \ solution here\n   return 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjinbcepl.lua:26:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpjinbcepl.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for _, c in s:gmatch(\"[%w%.]+\") do\n    sum = sum + tonumber(c)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsxmpx4q3.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpsxmpx4q3.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpsxmpx4q3.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s, i, i)) -- ASCII\
    \ code\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo9p7_dg8.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpo9p7_dg8.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpo9p7_dg8.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal sum =\
    \ 0\n\tfor i=1,#s,1 do\n\t\tif string.sub(s, i, i+1) ~= '' then\n\t\t\tsum = sum\
    \ + tonumber(string.sub(s, i, i+1))\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjcw_jjlv.lua:21:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpjcw_jjlv.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpjcw_jjlv.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  if s == nil\
    \ then\n    return 0\n  end\n  local sum = 0\n  for i = 0, #s do\n    sum = sum\
    \ + tonumber(string.sub(s,i,i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjcnsl9ub.lua:23:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpjcnsl9ub.lua:23:\
    \ in local 'candidate'\n\t/tmp/tmpjcnsl9ub.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\ts = string.gsub(s,\
    \ \"%w+\", \"\") -- Remove all non-alpha chars\n\ts = string.gsub(s, \"%c\", \"\
    \") -- Remove all non-digit chars\n\treturn tonumber(string.gsub(s, \"%a\", \"\
    +\")) -- Add all non-digit chars to all non-alpha chars\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpozzcu0v9.lua:20:\
    \ bad argument #2 to 'tonumber' (base out of range)\nstack traceback:\n\t/tmp/tmpozzcu0v9.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpozzcu0v9.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1,#s do\n    if string.sub(s,i,i) ~= string.sub(s,i,i) then break\
    \ end\n    sum = sum + string.char(string.byte(string.sub(s,i,i)) + 1)\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0pzufwq0.lua:21:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmp0pzufwq0.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmp0pzufwq0.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\t-- Your code\
    \ goes here!\n\treturn #s - (#s % 10) + 1\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_qm2s4yx.lua:25:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp_qm2s4yx.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    -- TODO: Finish\
    \ this function\n    return 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxciiu5i.lua:26:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpoxciiu5i.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n   local sum =\
    \ 0\n   for i = 1, #s do\n      if string.sub(s, i, i) ~= string.upper(string.sub(s,\
    \ i, i)) then break end\n      sum = sum + tonumber(string.sub(s, i, i)) - 48\n\
    \   end\n   return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp59fgix92.lua:30:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmp59fgix92.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  return #s *\
    \ (#s + 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5heuzap5.lua:25:\
    \ expected: 131, actual: 10.0\nstack traceback:\n\t/tmp/tmp5heuzap5.lua:25: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n   local s = string.gsub(s,\
    \ \".\", \"\");\n   return #s + string.gsub(s, \"%w+\", function(c) return #c\
    \ + string.gsub(c, '[%w]', function(c) return tonumber(c:upper()) end) end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpozbjnrz4.lua:19:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpozbjnrz4.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmpozbjnrz4.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        if string.sub(s, i, i) == upper(string.sub(s,\
    \ i, i)) then\n            sum = sum + string.sub(s, i, i)\n        end\n    end\n\
    \    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9j1f5epw.lua:20:\
    \ attempt to call a nil value (global 'upper')\nstack traceback:\n\t/tmp/tmp9j1f5epw.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp9j1f5epw.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal sum =\
    \ 0\n\t\n\tfor i = 1, #s do\n\t\tif string.upper(s[i])==\"A\" or string.upper(s[i])==\"\
    B\" then\n\t\t\tsum = sum + string.byte(s[i],1)\n\t\tend\n\tend\n\treturn sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9tk_n8w7.lua:21:\
    \ bad argument #1 to 'upper' (string expected, got nil)\nstack traceback:\n\t\
    /tmp/tmp9tk_n8w7.lua:21: in local 'candidate'\n\t/tmp/tmp9tk_n8w7.lua:32: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local n = 0\n\
    \  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    local upper = string.upper(c)\n\
    \    if upper then\n      n = n + tonumber(upper)\n    end\n  end\n  return n\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzu24qvod.lua:23:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzu24qvod.lua:23:\
    \ in local 'candidate'\n\t/tmp/tmpzu24qvod.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    -- base case\n\
    \    if s == '' then\n        return 0\n    -- base case\n    end\n    -- compute\
    \ sum of char codes in substring\n    local sum = 0\n    for i = 1, #s do\n  \
    \      local c = string.byte(s,i)\n        sum = sum + c\n    end\n    -- apply\
    \ only to the digit\n    return sum % 10\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9270hbnr.lua:37:\
    \ expected: 131, actual: 6\nstack traceback:\n\t/tmp/tmp9270hbnr.lua:37: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  -- We start\
    \ with the ASCII code of our first character.\n  -- This lets us keep a running\
    \ total without having to start a loop.\n  local result = 0\n  -- The loop will\
    \ continue until we hit a character with a code > 0.\n  -- Any character with\
    \ a code between 0 and 127 will become the sum of the\n  -- first character's\
    \ code times the last character's code.\n  for i = 1, #s do\n    local c = string.byte(s,i)\n\
    \    -- ASCII codes are between 0 and 127, so if we find that code add it to\n\
    \    -- the running total.\n    if c <= 127 then\n      result = result + c\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnyne3jid.lua:39:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpnyne3jid.lua:39: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    if s == ''\
    \ then return 0 end\n    local sum = 0\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ > '9' then sum = sum + string.sub(s,i,i) end\n    end\n    return sum\nend\n\
    </cell>\n<cell>\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp29swmncr.lua:25: unexpected symbol near ''<''

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local n = 0\n\
    \  s:gsub('%w', function ()\n    local c = tonumber(string.sub(string.upper(s),\
    \ n, n))\n    n = n + 1\n    return c:byte()\n  end)\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3_7pjl6m.lua:22:\
    \ attempt to index a nil value (local 'c')\nstack traceback:\n\t/tmp/tmp3_7pjl6m.lua:22:\
    \ in function </tmp/tmp3_7pjl6m.lua:19>\n\t[C]: in function 'string.gsub'\n\t\
    /tmp/tmp3_7pjl6m.lua:19: in local 'candidate'\n\t/tmp/tmp3_7pjl6m.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\t-- The key is\
    \ to iterate over the string with a for loop to iterate over each character.\n\
    \t-- Then, use a condition statement to check whether the character is upper case\
    \ or lower case. If it's\n\t-- upper case, we use \"or\" to do an \"and\" with\
    \ the character code of \"a\" (65) and the character code of\n\t-- the character\
    \ we want to add (67). Otherwise, just add the character code.\n\t-- The return\
    \ statement is necessary to end the for loop.\n\tlocal sum = 0\n\tfor i, v in\
    \ ipairs(s) do\n\t\tif v:upper() ~= \"A\" and v:upper() ~= \"a\" then\n\t\t\t\
    sum = sum + v:byte()\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnniu48h4.lua:36:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpnniu48h4.lua:36: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i=1,#s,1 do\n    if string.sub(s,i,i)==\"A\" then\n      sum = sum\
    \ + string.sub(s,i,i)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc6rw7l_k.lua:21:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpc6rw7l_k.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpc6rw7l_k.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal sum =\
    \ 0\n\t\n\t-- Traverse the string\n\tfor i = 1, #s do\n\t\tsum = sum + tonumber(\
    \ string.sub( s, i, i ) ) * tonumber( string.sub( s, i, i ) )\n\tend\n\t\n\t--\
    \ Return the sum of digits of string\n\treturn sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxa67vjj8.lua:22:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpxa67vjj8.lua:22:\
    \ in local 'candidate'\n\t/tmp/tmpxa67vjj8.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local n = 0\n\
    \  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.upper(c) then\n\
    \      n = n + string.byte(c)\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp40lt1m80.lua:32:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmp40lt1m80.lua:32: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local result\
    \ = 0\n  for c in s:gmatch(\"[^%z]+\") do\n    if string.upper(c) then\n     \
    \ result = result + string.upper(c)\n    end\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa3kekjvk.lua:21:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpa3kekjvk.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpa3kekjvk.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + math.abs(s[i - 1])\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeo3ifdwj.lua:20:\
    \ bad argument #1 to 'abs' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpeo3ifdwj.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpeo3ifdwj.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  if s == '' then\n\
    \    return 0\n  end\n  local total = 0\n  for i = 1, #s do\n    total = total\
    \ + tonumber(string.sub(s,i,i))\n  end\n  return total\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkkl6d4nc.lua:23:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpkkl6d4nc.lua:23:\
    \ in local 'candidate'\n\t/tmp/tmpkkl6d4nc.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    -- ASCII code of last character of string.\n    sum\
    \ = sum + tonumber(string.sub(s, i, i)) + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_5pn65wb.lua:21:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp_5pn65wb.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmp_5pn65wb.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal sum =\
    \ 0\n\tfor c in s:gmatch'[%A]:.' do\n\t\tif c ~= 'A' and c ~= 'a' then\n\t\t\t\
    sum = sum + tonumber(c)\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjdx5fsl8.lua:31:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpjdx5fsl8.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  s = string.gsub(s,\
    \ '%a+', '')\n  local sum = 0\n  for i=1,#s do\n    sum = sum + tonumber(string.sub(s,\
    \ i, i))\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1aq422c2.lua:30:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmp1aq422c2.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        if string.sub(s, i, i) ~= string.sub(s, '#',\
    \ i) then\n            sum = sum + string.char(string.sub(s, '#', i))\n      \
    \  end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpff48dm0f.lua:20:\
    \ bad argument #2 to 'sub' (number expected, got string)\nstack traceback:\n\t\
    /tmp/tmpff48dm0f.lua:20: in local 'candidate'\n\t/tmp/tmpff48dm0f.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local i, sum\
    \ = 0\n    for i = 1, #s do\n        if string.sub(s,i,i) >= '0' and string.sub(s,i,i)\
    \ <= '9' then\n            sum = sum + string.sub(s,i,i) - '0'\n        end\n\
    \    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpehe0hv6v.lua:30:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmpehe0hv6v.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  s = string.gsub(s,\
    \ '[^a-zA-Z]', '')\n  return #s + string.len(s)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_80cinkq.lua:26:\
    \ expected: 131, actual: 8\nstack traceback:\n\t/tmp/tmp_80cinkq.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  -- Write your\
    \ code in C/Java/Python here\n  -- YOUR CODE GOES HERE\n  -- DON'T MODIFY THE\
    \ CODE BELOW THIS LINE\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphtvr0sxn.lua:26:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmphtvr0sxn.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  if s == '' then\n\
    \    return 0\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpjq5xvl1z.lua:35: ''end'' expected (to close ''function'' at
    line 17) near <eof>

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\t-- Your code\
    \ here\n\t--return 0\n\tlocal count = 0\n\twhile true do\n\t\tlocal _, char =\
    \ s:sub(1,1):upper():byte()\n\t\tif char ~= nil then\n\t\t\tcount = count + char\n\
    \t\t\ts = s:sub(2)\n\t\telse\n\t\t\treturn count\n\t\tend\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4ctohju1.lua:36:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmp4ctohju1.lua:36: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local n =\
    \ 0\n    for i = 1, #s do\n        if string.sub(s,i,i)==\"A\" then\n        \
    \    n = n + string.byte(s,i,i)\n        end\n    end\n    return n\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyuizzjpe.lua:31:\
    \ expected: 131, actual: 65\nstack traceback:\n\t/tmp/tmpyuizzjpe.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        if string.upper(s[i])~=string.upper(s[i+1])\
    \ then\n            sum = sum + string.byte(s[i], 2)\n        end\n    end\n \
    \   return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuoxsypx8.lua:20:\
    \ bad argument #1 to 'upper' (string expected, got nil)\nstack traceback:\n\t\
    /tmp/tmpuoxsypx8.lua:20: in local 'candidate'\n\t/tmp/tmpuoxsypx8.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local total\
    \ = 0\n  for i, v in ipairs(s) do\n    total = total + ((string.byte(v) - string.byte('A'))\
    \ * (string.byte(i) - string.byte('a')))\n  end\n  return total\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkt1_14nl.lua:29:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpkt1_14nl.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    if string.byte(s):byte(i)> 47 then sum = sum + string.byte(s):byte(i)\
    \ end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr6v83wpx.lua:20:\
    \ attempt to index a number value\nstack traceback:\n\t/tmp/tmpr6v83wpx.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpr6v83wpx.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal n=0\n\t\
    for i=1,#s do\n\t\tn=n+tostring(string.byte(s,i))\n\tend\n\treturn n\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjki18kg0.lua:29:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpjki18kg0.lua:29: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local n = 0\n\
    \  for _,c in string.gmatch(s, \"(.)\") do\n    if c > 47 then n = n + c - 48\
    \ end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpklqtrvq8.lua:20:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpklqtrvq8.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpklqtrvq8.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal r = 0\n\
    \tfor i = 1, #s do\n\t\tr += string.char(string.byte(s,i,i)+string.byte(s,i,i+1))\n\
    \tend\n\treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpc3ir4ms1.lua:20: syntax error near ''+''

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    -- write your\
    \ function here\n    return 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3fgexos9.lua:26:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmp3fgexos9.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local total\
    \ = 0\n    for i = 1, #s do\n        if string.sub(s,i,i) = \"A\" or string.sub(s,i,i)\
    \ = \"B\" or string.sub(s,i,i) = \"C\" or string.sub(s,i,i) = \"D\" then\n   \
    \         total = total + string.sub(s,i,i)\n        end\n    end\n    return\
    \ total\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphq9lblvk.lua:20: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for c = string.gsub(s, \"([A-Z])\") do\n        if string.byte(c) >=\
    \ 48 and string.byte(c) <= 57 then\n            sum = sum + string.byte(c)\n \
    \       end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpzyuxdxop.lua:19: '','' expected near ''do''

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s, 1 do\n        sum = sum + tonumber(string.sub(s,i,i))\n\
    \    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnfsta8kq.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpnfsta8kq.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpnfsta8kq.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i=1,#s do\n    sum = sum + tonumber(string.sub(s,i,i)):byte()\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzbhwzbxw.lua:20:\
    \ attempt to index a nil value\nstack traceback:\n\t/tmp/tmpzbhwzbxw.lua:20: in\
    \ local 'candidate'\n\t/tmp/tmpzbhwzbxw.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        sum = sum + tonumber(string.sub(s, i, i))\n\
    \    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbsm0ma54.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpbsm0ma54.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpbsm0ma54.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  if #s == 0 then\n\
    \    return 0\n  elseif #s <= 2 then\n    return string.sub(s, 1, 1)\n  else\n\
    \    return digitSum(string.sub(s, 1, 2)) + digitSum(string.sub(s, 3, #s))\n \
    \ end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3popn8k8.lua:23:\
    \ attempt to add a 'string' with a 'string'\nstack traceback:\n\t/tmp/tmp3popn8k8.lua:23:\
    \ in local 'candidate'\n\t/tmp/tmp3popn8k8.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for ch in s:gmatch'([^%s]+)' do\n        if ch:byte() <= 9 and ch >\
    \ 'Z' then\n            sum = sum + ch - 'A' + 10\n        else\n            sum\
    \ = sum + ch\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9jew17rx.lua:23:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmp9jew17rx.lua:23:\
    \ in local 'candidate'\n\t/tmp/tmp9jew17rx.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local total\
    \ = 0\n  for i = 1, #s do\n    total = total + tonumber(string.sub(s, i, i)) -\
    \ 64\n  end\n  return total\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_et3v2yf.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp_et3v2yf.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp_et3v2yf.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i=1,#s do\n    sum = sum + tonumber(s[i])\n  end\n  return sum\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa_t7rntm.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpa_t7rntm.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpa_t7rntm.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    -- Convert\
    \ the string to upper case and return the sum of the characters'\n    -- ASCII\
    \ codes.\n    return s:upper():gsub(\"[^\" .. digitSum .. \"]+\", function(x)\n\
    \        -- Get the sum of the characters' ASCII codes.\n        return tonumber(x)\n\
    \    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpian9aayq.lua:20:\
    \ attempt to concatenate a function value (upvalue 'digitSum')\nstack traceback:\n\
    \t/tmp/tmpian9aayq.lua:20: in local 'candidate'\n\t/tmp/tmpian9aayq.lua:29: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for _, c in string.gmatch(s, '[^%w]') do\n        sum = sum + string.byte(c)\
    \ - (string.byte('a') - string.byte('0'))\n    end\n    return sum\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4jukepzr.lua:29:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmp4jukepzr.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local function\
    \ digToInt(d)\n        if d == '0' then return 0 end\n        local digit = 0\n\
    \        if d ~= 'A' then\n            digit = tostring(d)\n        end\n    \
    \    return digit\n    end\n    local n = 0\n    for i = 1,#s do\n        n =\
    \ n + digToInt( string.sub( s, i, i ) )\n    end\n    return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy11848_7.lua:28:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpy11848_7.lua:28:\
    \ in local 'candidate'\n\t/tmp/tmpy11848_7.lua:37: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\t-- write your\
    \ code\n\t-- return digit sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpabti4sqh.lua:25:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmpabti4sqh.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local result\
    \ = {}\n  for c in string.gmatch(s, '[^%s]+') do\n    table.insert(result, tonumber(string.sub(c,\
    \ 1, 1)))\n  end\n  table.sort(result)\n  return tonumber(table.concat(result))\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpor1ckunk.lua:29:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmpor1ckunk.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp28klq047.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp28klq047.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp28klq047.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1,#s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n \
    \ return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprqd8qh7d.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmprqd8qh7d.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmprqd8qh7d.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + string.byte(s,i)\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8e5463n_.lua:29:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmp8e5463n_.lua:29: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n   local sum =\
    \ 0\n   for i = 1, #s do\n      sum = sum + tonumber(string.sub(s, i, i)) + 0x60\n\
    \   end\n   return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpow9kvnw3.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpow9kvnw3.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpow9kvnw3.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local total\
    \ = 0\n    for i = 1, #s do\n        total = total + tonumber(string.sub(s,i,i))\n\
    \    end\n    return total\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9_q50cnf.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp9_q50cnf.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp9_q50cnf.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  if #s < 1 then\
    \ return 0 end\n  local sum = 0\n  for i=1,#s do\n    if string.sub(s,i,i) >=\
    \ '0' then\n      sum = sum + string.sub(s,i,i)\n    end\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp35_q1fro.lua:22:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmp35_q1fro.lua:22:\
    \ in local 'candidate'\n\t/tmp/tmp35_q1fro.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal sum =\
    \ 0\n\tfor i = 1, #s do\n\t\tsum = sum + string.byte(s,i)\n\tend\n\treturn sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphobkmys0.lua:29:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmphobkmys0.lua:29: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for c in s do\n        sum = sum + string.byte(c) -- convert ASCII\
    \ code to number\n    end -- loop\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu0vc1bu5.lua:19:\
    \ attempt to call a string value (for iterator 'for iterator')\nstack traceback:\n\
    \t/tmp/tmpu0vc1bu5.lua:19: in local 'candidate'\n\t/tmp/tmpu0vc1bu5.lua:28: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  -- We could\
    \ use the builtin string.gsub to remove all non-alphanumeric characters\n  --\
    \ and then just return the sum of the resulting characters.\n  -- But this requires\
    \ us to copy the string twice, and we have already implemented\n  -- this in digitSum.\
    \  So we could just use this instead.\n  local sum = 0\n  for i = 1, #s do\n \
    \   local n = string.byte(string.sub(s,i,i))\n    if n >= 48 and n <= 57 then\n\
    \      sum = sum + n\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbkaeco53.lua:36:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpbkaeco53.lua:36: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  -- TODO: Implement\
    \ this function.\n  return 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp67bd_my3.lua:26:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmp67bd_my3.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  s = s:lower()\n\
    \  for c, v in pairs(s) do\n    if not v:match('%w') then\n      return c + digitSum(v)\n\
    \    end\n  end\n  return 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_42tu_2y.lua:19:\
    \ bad argument #1 to 'for iterator' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp_42tu_2y.lua:19: in local 'candidate'\n\t/tmp/tmp_42tu_2y.lua:30: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = string.sub(s, i, i)\n    sum = sum + string.byte(c):byte()\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfp2k8gt_.lua:21:\
    \ attempt to index a number value\nstack traceback:\n\t/tmp/tmpfp2k8gt_.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpfp2k8gt_.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  -- Return the\
    \ sum of upper characters\n  -- from the string given to digitSum\n  local sum\
    \ = 0\n  local index = 0\n  for c in string.gmatch(s, '%a') do\n    sum = sum\
    \ + string.byte(c) -- sum of the ASCII codes\n    index = index +1\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplq93tbsq.lua:33:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmplq93tbsq.lua:33: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  -- Find length\
    \ of string\n  local len = #s\n  -- Initialize sum\n  local sum = 0\n  -- For\
    \ each character in the string\n  for i = 1, len do\n    -- Get the character\
    \ at position i\n    local c = string.sub(s,i,i)\n    -- Add the ASCII code of\
    \ character c to sum\n    sum = sum + tonumber(c)\n  end\n  return sum\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf72d3vzk.lua:27:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpf72d3vzk.lua:27:\
    \ in local 'candidate'\n\t/tmp/tmpf72d3vzk.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal sum =\
    \ 0\n\ts:gsub('([A-Z])', function(c) sum = sum + string.byte(c) end)\n\treturn\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  s = string.gsub(s,\
    \ \"\")\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + string.byte(s,i)\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbu0048vn.lua:18:\
    \ bad argument #3 to 'gsub' (string/function/table expected, got no value)\nstack\
    \ traceback:\n\t/tmp/tmpbu0048vn.lua:18: in local 'candidate'\n\t/tmp/tmpbu0048vn.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i=1,#s do\n    if string.char(string.sub(s,i,i)) == string.upper(string.sub(s,i,i))\
    \ then\n      sum = sum + string.char(string.sub(s,i,i)) - 65\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4gop3_v6.lua:20:\
    \ bad argument #1 to 'char' (number expected, got string)\nstack traceback:\n\t\
    /tmp/tmp4gop3_v6.lua:20: in local 'candidate'\n\t/tmp/tmp4gop3_v6.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  -- Write your\
    \ code in http://codereview.stackexchange.com/questions/44516/simple-program-to-compute-the-sum-of-the-digits-of-a-string\n\
    \  local sum = 0\n  local last = -1\n  local len = #s\n  for i = 1, len do\n \
    \   local code = tonumber(string.sub(s, i, i))\n    sum = sum + code\n    if code\
    \ == last then\n      sum = sum + code\n    else\n      last = code\n    end\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0i3ipn3k.lua:24:\
    \ attempt to perform arithmetic on a nil value (local 'code')\nstack traceback:\n\
    \t/tmp/tmp0i3ipn3k.lua:24: in local 'candidate'\n\t/tmp/tmp0i3ipn3k.lua:38: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  if s == nil\
    \ then return 0 end\n  local sum = 0\n  for i = 1, #s do\n    if string.byte(s[i],\
    \ i) <= 57 then\n      sum = sum + string.byte(s[i], i)\n    end\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu4td70im.lua:21:\
    \ bad argument #1 to 'byte' (string expected, got nil)\nstack traceback:\n\t/tmp/tmpu4td70im.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpu4td70im.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s, 1 do\n    sum = sum + string.byte(s,i,i)\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl9bnvlac.lua:29:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpl9bnvlac.lua:29: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal ret =\
    \ 0\n\tfor i = 1, #s do\n\t\tlocal c = string.sub(s, i, i)\n\t\tif string.upper(c)\
    \ then ret = ret + string.upper(c) end\n\tend\n\treturn ret\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprhy_329f.lua:21:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmprhy_329f.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmprhy_329f.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local total\
    \ = 0\n  for i = 1, #s do\n    if string.sub(s, i, i + 1) ~= string.upper(string.sub(s,\
    \ i, i + 1)) then\n      total = total + 1\n    end\n  end\n  return total\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9xrh7e60.lua:31:\
    \ expected: 131, actual: 2\nstack traceback:\n\t/tmp/tmp9xrh7e60.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local result\
    \ = 1\n  for i = 1, #s do\n    local c = tonumber(string.sub(s, i, i))\n    result\
    \ *= (c + 32 - (c + 32) % 10)\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp6u8xrngt.lua:21: syntax error near ''*''

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  return tonumber(string.sub(s,\
    \ '^', 1))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz1zkcs4o.lua:18:\
    \ bad argument #2 to 'sub' (number expected, got string)\nstack traceback:\n\t\
    /tmp/tmpz1zkcs4o.lua:18: in local 'candidate'\n\t/tmp/tmpz1zkcs4o.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  -- Write your\
    \ solution here\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,\
    \ i, i)) - 96\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbnrvtj3m.lua:21:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpbnrvtj3m.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpbnrvtj3m.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local result\
    \ = 0\n  for i,v in ipairs(s) do\n    if v >= '0' and v <= '9' then\n      result\
    \ = result + (v - '0')\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu5f9ict6.lua:31:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpu5f9ict6.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    if s == ''\
    \ then return 0 end\n    -- Convert the string to an array\n    local arr = s:gsub(\"\
    [%Z]\", function (c)\n        return string.char(tonumber(c))\n    end)\n    --\
    \ Convert the array to a string\n    local sum = 0\n    for i = 1, #arr do\n \
    \       sum = sum + string.sub(arr, i, i):upper():byte()\n    end\n    return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpx15ffxxl.lua:21:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpx15ffxxl.lua:21:\
    \ in function </tmp/tmpx15ffxxl.lua:20>\n\t[C]: in function 'string.gsub'\n\t\
    /tmp/tmpx15ffxxl.lua:20: in local 'candidate'\n\t/tmp/tmpx15ffxxl.lua:35: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local x = tonumber(s[i])\n    if x ~= nil and x >=\
    \ 48 and x <= 57 then\n      sum = sum + x\n    end\n  end\n  return sum\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk0svora1.lua:32:\
    \ expected: 131, actual: 0\nstack traceback:\n\t/tmp/tmpk0svora1.lua:32: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\t-- Your code\
    \ here\n\tlocal sum = 0\n\tfor i=1, #s, 1 do\n\t\tsum = sum + string.sub(s,i,i)\n\
    \tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvmsoax5e.lua:21:\
    \ attempt to add a 'number' with a 'string'\nstack traceback:\n\t/tmp/tmpvmsoax5e.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpvmsoax5e.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n   s = string.gsub(s,\
    \ '[^%s]+', '')\n   return string.gsub(s, '%s+', function(c)\n      return tonumber(string.sub(c,\
    \ 1))\n   end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0jfq0nbo.lua:27:\
    \ expected: 0, actual: \"\"\nstack traceback:\n\t/tmp/tmp0jfq0nbo.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local i, total\
    \ = 1, 0\n    for i = 1, #s, 1 do\n        total = total + tonumber(string.sub(s,\
    \ i, i+1))\n    end\n    return total\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgtp7e5li.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpgtp7e5li.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpgtp7e5li.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  if s ~= '' then\n\
    \    local sum = 0\n    for i = 1, #s do\n      local char = string.sub(s,i,i)\n\
    \      if string.sub(string.upper(char),1,1) ~= 'A' then sum = sum + string.byte(char)\
    \ end\n    end\n    return sum\n  end\n  return 0\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkppo7m1z.lua:33:\
    \ expected: 131, actual: 164\nstack traceback:\n\t/tmp/tmpkppo7m1z.lua:33: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local result\
    \ = 0\n    for _, char in string.gmatch(s, '%a') do\n        if char > 47 and\
    \ char <= 57 then\n            result = result + ((char ^ 48) - 48)\n        end\n\
    \    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpebwt53_p.lua:20:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpebwt53_p.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpebwt53_p.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + tonumber( string.sub(s,i,i) ) \n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp86hiydhv.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp86hiydhv.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp86hiydhv.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  -- Your code\
    \ here\n  return nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmput02wfof.lua:25:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmput02wfof.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i=1,#s do\n        sum = sum + string.byte(s,i)\n    end\n    return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwvdiwq6v.lua:29:\
    \ expected: 131, actual: 326\nstack traceback:\n\t/tmp/tmpwvdiwq6v.lua:29: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i=1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbwjmtq9b.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpbwjmtq9b.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpbwjmtq9b.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n\tlocal sum =\
    \ 0\n\tfor i = 1, #s do\n\t\tsum = sum + tonumber(string.sub(s,i,i))\n\tend\n\t\
    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpts3xla6g.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpts3xla6g.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpts3xla6g.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  s = string.gsub(s,\
    \ \"%c\", function()\n    local n = 1\n    local sum = string.byte(string.sub(s,\
    \ '', 1, 1))\n    for i = 2, string.len(s) do sum = sum + string.byte(string.sub(s,\
    \ '', i, i)) + n end\n    return sum % 10\n  end)\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcz44o4b9.lua:30:\
    \ expected: 0, actual: \"\"\nstack traceback:\n\t/tmp/tmpcz44o4b9.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    return string.gsub(s,\
    \ '[^ ]+', function(x) then return x + string.byte(x) end):gsub('^0', ''):gsub('[^0-9]',\
    \ '')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3k99sx97.lua:18: unexpected symbol near ''then''

    '
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp28klq047.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp28klq047.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp28klq047.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp28klq047.lua:20:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp28klq047.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp28klq047.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978957

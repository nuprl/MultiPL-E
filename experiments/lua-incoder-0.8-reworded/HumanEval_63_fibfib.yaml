name: HumanEval_63_fibfib
language: lua
prompt: "-- The FibFib number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n-- fibfib(0) == 0\n-- fibfib(1) == 0\n-- fibfib(2)\
  \ == 1\n-- fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n-- Please write\
  \ a function to efficiently compute the n-th element of the fibfib number sequence.\n\
  -- >>> fibfib(1)\n-- 0\n-- >>> fibfib(5)\n-- 4\n-- >>> fibfib(8)\n-- 24\nlocal function\
  \ fibfib(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fibfib\n\
  \    lu.assertEquals(candidate(2), 1)\n    lu.assertEquals(candidate(1), 0)\n  \
  \  lu.assertEquals(candidate(5), 4)\n    lu.assertEquals(candidate(8), 24)\n   \
  \ lu.assertEquals(candidate(10), 81)\n    lu.assertEquals(candidate(12), 274)\n\
  \    lu.assertEquals(candidate(14), 927)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tif n <= 0 then\n\t\treturn 0\n\telse\n\t\treturn fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n\tend\nend", "\tlocal a, b, c, d, e\n\t-- Initialize variables\n\
    \tif n < 0 then\n\t\terror(string.format('fibfib: argument must be a positive\
    \ number (%d), got %d.', n, n-1))\n\telseif n == 0 then\n\t\treturn 0\n\telseif\
    \ n == 1 then\n\t\treturn 1\n\tend\n\ta = fibfib(n - 2)\n\tb = fibfib(n-1)\n\t\
    c = fibfib(n - 3)\n\td = fibfib(n-2)\n\te = a + b + c + d\n\t-- Return last value\n\
    \treturn e\nend", "    local f = 0\n    local fib = 0\n    local i = 1\n    while\
    \ i <= n do\n        fib = fib + i\n        local fibfib = 1\n        for i=1,i\
    \ do\n            fibfib = fibfib * fib\n        end\n        f = fibfib + fibfib\n\
    \        i = i + 1\n    end\n    return f\nend\nreturn fibfib\n<|/ q tags=fibonacci,lua\
    \ |>\n<| c |>\nYour algorithm is O(n^2). I can't really see how that is any worse\
    \ than your existing algorithm. I do see the problem with your algorithm: it doesn't\
    \ use any memoization.\n<|/ c |>\n<| c |>\nAgreed, but since this is for my own\
    \ education, I'm just interested in seeing if I'm missing something obvious here.\
    \ Thanks for your input.\n<|/ c |>\n<| a tags=fibonacci,lua dscore=2 |>\nYour\
    \ algorithm is incorrect. You want to iterate over all n numbers from 0 to n-1\
    \ and perform the calculation on the i'th number. Not the n'th number:\n<code>",
  "    local fibfib = {}\n    local fibfibnum = 0\n    if n == 0 then fibfibnum =\
    \ 0 else\n        if n == 1 then fibfibnum = 0 else\n            if n == 2 then\
    \ fibfibnum = 1\n            else fibfibnum = fibfibnum + (fibfibnum - fibfibnum\
    \ + fibfib(n-3)) * fibfib(n-2)\n            end\n        end\n    end\n    return\
    \ fibfibnum\nend", "\tlocal a = 0\n\tlocal b = 1\n\tlocal c = 0\n\tlocal d = 0\n\
    \tif n <= 0 then\n\t\treturn 0\n\tend\n\tif n <= 3 then\n\t\treturn 0\n\telse\n\
    \t\twhile d <= n do\n\t\t\ta = b\n\t\t\tb = c\n\t\t\tc = a + b\n\t\t\td = d +\
    \ 2\n\t\tend\n\t\treturn c\n\tend\nend", "    if n <= 0 then return 0 end\n  \
    \  if n < 2 then return 1 end\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  return n and fibfib(n-1) + fibfib(n-2) + fibfib(n-3) or n\nend", "  local\
    \ fibval = 2\n  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return\
    \ 1\n  elseif n <= fibval then\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  else\n    return fibval\n  end\nend", "  if n < 2 then return 0 end\n  return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 0 then\n    return\
    \ nil\n  end\n  if n < 1 then\n    return 0\n  end\n  if n < 3 then\n    return\
    \ n\n  end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    local\
    \ fibtable = {0,1,1,2,3,5,8}\n    return fibtable[n]\nend", "  if n==0 then\n\
    \    fibfib(0)\n  elseif n==1 then\n    fibfib(1)\n  else\n    fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n\
    \  end\nend", "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n\
    \    return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\nend", "    if n < 0\
    \ then return nil end\n    if n == 0 then return 0 end\n    if n == 1 then return\
    \ 1 end\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n <=\
    \ 0 then\n    0\n  else\n    fib(n - 1) + fib(n - 2) + fib(n - 3)\n  end\nend\n\
    print(fibfib(2));\nprint(fibfib(8));", "  if n <= 1 then\n    return n\n  else\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n < 1\
    \ then return 0 end\n  local ret = 0\n  for i = 1, n do\n    ret = ret + i\n \
    \ end\n  return ret\nend", "  if n < 2 then\n    return 0\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "\tif n==0 then\n\t\t\
    return 0\n\telseif n==1 then\n\t\treturn 1\n\telseif n==2 then\n\t\treturn 1\n\
    \telse\n\t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "  if\
    \ n < 0 then return nil end\n  if n < 3 then return 0 end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 1 then return 0 end\n  if n < 3\
    \ then return 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", " \
    \   local f1 = 1\n    local f2 = 1\n    local f3 = 1\n    local fibfib = 0\n \
    \   for i = 1, n do\n        f3 = f1 + f2 + f3\n        fibfib = f3\n        f1\
    \ = f2\n        f2 = f3\n    end\n    return fibfib\nend", "\tif n <= 1 then\n\
    \t\treturn 0\n\telseif n < 2 then\n\t\treturn 1\n\telse\n\t\treturn fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "  if n < 0 then\n    error(\"fibfib:\
    \ negative number\")\n  end\n  if n < 2 then\n    return 0\n  end\n  return fibfib(n-1)\
    \ + fibfib(n-2)\nend\nprint(fibfib(0) == 0)\nprint(fibfib(1) == 0)\nprint(fibfib(2)\
    \ == 1)\nprint(fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3))", "  return\
    \ n and n*fibfib(n-1) or n\nend", "  if n < 0 then return 0 end\n  if n < 3 then\
    \ return 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if\
    \ n < 0 then error(\"fibfib(n) called with negative n value\") end\n  if n ==\
    \ 0 then return 0 end\n  if n == 1 then return 1 end\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "   if n <= 1 then\n      return 0\n   else\n      return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n   end\nend\nprint(fibfib(1)) -- 0\n\
    print(fibfib(5)) -- 4\nprint(fibfib(8)) -- 24", "  if n == 0 then return 0 end\n\
    \  if n == 1 then return 0 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return\
    \ 1\n    else\n        return fibfib(n - 1) + fibfib(n - 2)\n    end\nend", " \
    \   if n <= 1 then\n        return 0\n    end\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<cell>", "    local fibfib = {n}\n    local fib\
    \ = fibfib[1]\n    for i = 2,n do\n        fib = fib .. fibfib[i-1]\n        fibfib[i]\
    \ = fib\n    end\n    return fibfib[n]\nend", "    local fib = 0\n    for i =\
    \ 1, n do\n        fib = fib + (i ^ 2)\n    end\n    return fib\nend", "  if n\
    \ < 0 or n > 150 then return 0 end\n  if n == 0 then\n    return 0\n  end\n  if\
    \ n == 1 then\n    return 1\n  end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n == 0 then\n    local fibfib = 0\n    return fibfib\n  end\n  if\
    \ n == 1 then\n    local fibfib = 0\n    return fibfib\n  end\n  if n == 2 then\n\
    \    local fibfib = 1\n    return fibfib\n  end\n  if n <= 3 then\n    local fibfib\
    \ = fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n    return fibfib\n  end\n\
    end", "    if n <= 1 then\n        return 0\n    elseif n < 3 then\n        return\
    \ 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end", "   if n < 0 then\n      return 0\n   end\n   if n == 0 then\n      return\
    \ 0\n   end\n   if n == 1 then\n      return 0\n   end\n   return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nAs a reminder, the Fibbonacci\
    \ sequence is defined as follows:\n$$\n\\begin{array}{|c|c|}\n\\hline\nfibfib(n)\
    \ & = & \\frac{1}{n} \\sum{m = -\\infty}^{\\infty} \\frac{fib_m(n)}{fib_{m-(n-1)}}\\\
    \n          & = & \\frac{(1-\\sum{m = -\\infty}^{\\infty} \\frac{(n+1)^m}{n^m})}{(1-\\\
    sum{m = -\\infty}^{\\infty} \\frac{n^m}{n^m})^2}\n\\hline\n\\end{array}\n$$",
  "    if n <= 0 then return 0 end\n    if n == 1 then return 1 end\n    local result\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    return result\nend", "  if n==0\
    \ then\n    return 0\n  else\n    local a,b,c,d=-1,1,1,2\n    for i=3,n-1,1 do\n\
    \      c=a+b\n      b=d\n      d=c\n      a=b\n    end\n    return d\n  end\n\
    end", "  if n < 0 then return nil end\n  if n < 3 then return 0 end\n  return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    local i = 1\n    while i\
    \ <= n do\n        local result = i\n        i = i + 2\n        return result\
    \ \n    end\n    return nil\nend", "  if n == 0 then return 0 end\n  if n == 1\
    \ then return 0 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", " \
    \ if n < 0 then return -1 end\n  if n == 0 or n == 1 then return 0 end\n  if n\
    \ >= 2 then\n    return fibfib(n - 1) + fibfib(n - 2)\n  end\nend", "  if n <\
    \ 0 then\n    return 0\n  elseif n < 2 then\n    return 1\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  assert(n > 0)\n  assert(n\
    \ <= 30000)\n  local fib = 0\n  repeat\n    fibfib = (fibfib + fib + fib + fib)\n\
    \  until n == fibfib\n  return fibfib\nend", "\tif n < 0 then return 0 end\n\t\
    if n < 2 then return n end\n\treturn fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)\nend", "  if n == 0 then\n    0\n  elseif n == 1 then\n    1\n  elseif\
    \ n == 2 then\n    2\n  else\n    fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n\
    \  end\nend", "  if n <= 1 then\n    return 0\n  end\n  local fib = 1\n  while\
    \ n ~= 0 do\n    fib = fib + fib + (n-3)\n    fib = (fib*n)/3\n  end\n  return\
    \ fib\nend", "\tlocal fib1 = 1\n\tlocal fib2 = 1\n\tlocal fib3 = 1\n\tlocal fib4\
    \ = 1\n\tlocal fib5 = 1 \n\tlocal fib6 = 1\n\tlocal fib7 = 1 \n\tlocal fib8 =\
    \ 1\n\tlocal fib9 = 1\n\tlocal fib10 = 1\n\tlocal fib11 = 1\n\tlocal fib12 = 1\n\
    \tlocal fib13 = 1\n\tlocal fib14 = 1\n\tlocal fib15 = 1\n\tlocal fib16 = 1\n\t\
    local fib17 = 1\n\tlocal fib18 = 1\n\tlocal fib19 = 1\n\tlocal fib20 = 1\n\tlocal\
    \ fib21 = 1\n\tlocal fib22 = 1\n\tlocal fib23 = 1\n\tlocal fib24 = 1\n\tlocal\
    \ fib25 = 1\n\tlocal fib26 = 1\n\tlocal fib27 = 1\n\tlocal fib28 = 1\n\tlocal\
    \ fib29 = 1\n\tlocal fib30 = 1\n\tlocal fib31 = 1\n\tlocal fib32 = 1\n\tlocal\
    \ fib33 = 1\n\tlocal fib34 = 1\n\tlocal fib35 = 1\n\tlocal fib36 = 1\n\tlocal\
    \ fib37 = 1\n\tlocal fib38 = 1\n\tlocal fib39 = 1\n\tlocal fib40 = 1\n\tlocal\
    \ fib41 = 1\n\tlocal fib42 = 1\n\tlocal fib43 = 1\n\tlocal fib44 = 1\n\tlocal\
    \ fib45 = 1\n\tlocal fib46 = 1\n\tlocal fib47 = 1\n\tlocal fib48 = 1\n\tlocal\
    \ fib49 = 1\n\tlocal fib50 = 1\n\tlocal fib51 = 1\n\tlocal fib52 = 1\n\tlocal\
    \ fib53 = 1\n\tlocal fib54 = 1\n\tlocal fib55 = 1\n\tlocal fib56 = 1\n\tlocal\
    \ fib57 = 1\n\tlocal fib58 = 1\n\tlocal fib59 = 1\n\tlocal fib60 = 1\n\tlocal\
    \ fib61 = 1\n\tlocal fib62 = 1\n\tlocal fib63 = 1\n\tlocal fib64 = 1\n\tlocal\
    \ fib65 = 1\n\tlocal fib66 = 1\n\tlocal fib67 = 1\n\tlocal fib68 = 1\n\tlocal\
    \ fib69 = 1\n\tlocal fib70 = 1\n\tlocal fib71 = 1\n\tlocal fib72 = 1\n\tlocal\
    \ fib73 = 1\n\tlocal fib74 = 1\n\tlocal fib75 = 1\n\tlocal fib76 = 1\n\tlocal\
    \ fib77 = 1\n\tlocal fib78 = 1\n\tlocal fib79 = 1\n\tlocal fib80 = 1\n\tlocal\
    \ fib81 = 1\n\tlocal fib82 = 1\n\t", "  if n <= 1 then\n    return 0\n  else\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n < 1\
    \ then return 0 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", " \
    \   if n < 0 then\n        return nil\n    end\n    if n < 3 then\n        return\
    \ 0\n    end\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    local\
    \ a, b, c, d = 0, 1, 0, 1\n    if n < 0 then\n        return 0\n    elseif n <=\
    \ 1 then\n        return n\n    else\n        while d <= n do\n            a,\
    \ b, c, d = b, c, a+b+c, d+1\n        end\n        return d\n    end\nend", " \
    \ if n <= 0 then\n    return 0\n  end\n  if n <= 3 then\n    return 0\n  end\n\
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n <= 2 then\n \
    \   return 0\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\n\
    end", "    if n==0 then\n        return 0\n    elseif n==1 then\n        return\
    \ 1\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end\n</cell>\n<text>\nExercises\nFor each of the following questions, write a\
    \ function of the required specification. \nThe function should take one parameter,\
    \ a table containing the Fibonacci numbers to return in the order of the sequence\
    \ (starting with 0).", "  if n < 1 then return 0 end\n  if n < 3 then return n\
    \ end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n <= 0 then\n\
    \    return 0\n  end\n  if n == 1 then\n    return 0\n  end\n  if n == 2 then\n\
    \    return 1\n  end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend",
  "  if n < 0 then\n    return 0\n  elseif n == 0 then\n    return 0\n  elseif n ==\
    \ 1 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "  if n < 3 then return 0 end\n  local a = 1\n  local b = 2\n  local\
    \ c = 1\n  local d = 2\n  while n > 3 do\n    local e = b\n    local f = c\n \
    \   b, c, a = c, b + d, a + e\n    d = e\n  end\n  return a + c\nend", "  if n\
    \ < 0 then\n    return 0\n  elseif n < 1 then\n    return 1\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend\nprint(fibfib(0))\nprint(fibfib(1))\n\
    print(fibfib(2))\nprint(fibfib(3))\nprint(fibfib(4))\nprint(fibfib(5))\nprint(fibfib(6))\n\
    print(fibfib(7))\nprint(fibfib(8))\nprint(fibfib(9))\nprint(fibfib(10))\nprint(fibfib(11))\n\
    print(fibfib(12))\nprint(fibfib(13))\nprint(fibfib(14))\nprint(fibfib(15))\nprint(fibfib(16))\n\
    print(fibfib(17))\nprint(fibfib(18))\nprint(fibfib(19))\nprint(fibfib(20))\nprint(fibfib(21))\n\
    print(fibfib('hello'))\nprint(fibfib('world'))\nprint(fibfib('python'))\nprint(fibfib(''))\n\
    print(fibfib(0))\nprint(fibfib(''))", "    if n == 0 then\n        return 0\n\
    \    end\n    if n == 1 then\n        return 1\n    end\n    if n == 2 then\n\
    \        return 1\n    end\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n < 3 then return n end\n  return fibfib(n-2) + fibfib(n-3)\nend",
  "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n  elseif n\
    \ == 2 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "\tif n < 0 then\n\t\treturn 0\n\tend\n\tif n == 0 then\n\t\treturn\
    \ 0\n\tend\n\tif n == 1 then\n\t\treturn 1\n\tend\n\tlocal x = fibfib(n-2)\n\t\
    local y = fibfib(n-1)\n\tlocal z = fibfib(n-3)\n\tlocal f = x + y + z\n\treturn\
    \ f\nend", "  if n < 0 then return nil end\n  if n == 0 or n == 1 then\n    return\
    \ 0\n  end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n==0\
    \ then return 0 end\n  if n==1 then return 1 end\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "  if n == 0 then\n    return 0\n  else\n    if n == 1\
    \ then\n      return 1\n    else\n      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\n  end\nend", "\t-- TODO: write function\n\treturn 0\nend", "  if n ==\
    \ 0 then return 0 end\n  if n == 1 then return 1 end\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "  if n < 0 then return 0 end\n  if n < 2 then return n\
    \ end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 1 then\n\
    \    return 0\n  end\n  if n == 1 then\n    return 0\n  end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "\tlocal function aux(n)\n\t\tif n < 0 then\n\
    \t\t\treturn 0\n\t\telseif n < 1 then\n\t\t\treturn 1\n\t\telse\n\t\t\treturn\
    \ aux(n-1) + aux(n-2) + aux(n-3)\n\t\tend\n\tend\n\treturn aux(n)\nend", "  if\
    \ n <= 0 then\n    return 0\n  elseif n <= 2 then\n    return 1\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "    if n < 3 then\n \
    \       return n\n    else\n        return fibfib(n-2) + fibfib(n-1)\n    end\n\
    end", "  return n and fibfib(n-1) + fibfib(n-2) or 1\nend", "  if n < 0 then\n\
    \    error(\"fibfib: Index must be positive\")\n  end\n  local fib = 1\n  for\
    \ i = 2, n do\n    fib = fibfib(i-1) + fibfib(i-2) + fibfib(i-3)\n  end\n  return\
    \ fib\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return\
    \ 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend",
  "  if n < 0 then return 0 end\n  if n < 2 then return 1 end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  return n and n * fibfib(n-1) + fibfib(n-2)\
    \ or 1\nend", "    if n < 0 then return 0 end\n    if n < 2 then return n end\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  local fibfibarray\
    \ = {}\n  fibfibarray[0] = 0\n  fibfibarray[1] = 0\n  fibfibarray[2] = 1\n  fibfibarray[3]\
    \ = fibfibarray[2] + fibfibarray[1]\n  fibfibarray[4] = fibfibarray[3] + fibfibarray[2]\n\
    \  fibfibarray[n] = fibfibarray[n-1] + fibfibarray[n-2] + fibfibarray[n-3]\n \
    \ return fibfibarray[n]\nend", "\tlocal a,b = 1,1\n\tfor i=2,n do\n\t\ta,b = b,a+b\n\
    \tend\n\treturn b\nend", "  if n < 0 then return 0 end\n  if n < 3 then return\
    \ n end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    local fib\
    \ = 0\n    local i = 1\n    repeat\n        fib = fib + i\n        i = fibfib(i)\
    \ - 1\n    until i <= n\n    return fib\nend", "  if n == 0 then return 0 end\n\
    \  if n == 1 then return 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n == 0 then\n    local fibfib = 0\n  else\n    local fibfib = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\n  return fibfib\nend", "  if n==0 then return\
    \ 0 end\n  if n==1 then return 1 end\n  local a,b = fibfib(n-1),fibfib(n-2)\n\
    \  return a+b+b\nend", "    if n < 0 then\n        error('negative number', 2)\n\
    \    end\n    if n < 3 then\n        return 1\n    end\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  -- assert(n == 0)\n  -- assert(n == 1)\n\
    \  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 0\n  end\n\
    \  local fib1 = fibfib(n-1)\n  local fib2 = fibfib(n-2)\n  local fib3 = fibfib(n-3)\n\
    \  return fib1 + fib2 + fib3\nend", "\tlocal a = 2\n\tlocal b = 1\n\tlocal c =\
    \ 0\n\twhile a <= n do\n\t\tc = b\n\t\tb = b + a\n\t\ta = c\n\tend\n\treturn b\n\
    end", "    local fib = 1\n    for i = 1,n do\n        fib = fibfib(i-1) + fibfib(i-2)\
    \ + fibfib(i-3)\n    end\n    return fib\nend", "  if n==0 then\n    return 0\n\
    \  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  \
    \  local fibfibTable = {0, 1}\n    for i = 2, n do\n        table.insert(fibfibTable,\
    \ fibfibTable[#fibfibTable - 1] + fibfibTable[#fibfibTable - 2] + fibfibTable[#fibfibTable\
    \ - 3])\n    end\n    return fibfibTable[n]\nend", "    local fibfib = { [0] =\
    \ 0 } -- Table with first element as 0\n    if n == 0 then return 0 end\n    if\
    \ n == 1 then\n        fibfib[1] = n\n        return fibfib[1]\n    end\n    fibfib[1]\
    \ = fibfib[1] + 1\n    fibfib[2] = fibfib[2] + fibfib[1]\n    fibfib[3] = fibfib[3]\
    \ + fibfib[2]\n    return fibfib[3]\nend", "  if n <= 0 then return 0 end\n  if\
    \ n == 1 then\n    return 0\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "   if n == 0 then\n\
    \      return 0\n   elseif n == 1 then\n      return 0\n   elseif n == 2 then\n\
    \      return 1\n   else\n      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \   end\nend", "\tlocal fib1 = 0\n\tlocal fib2 = 0\n\tlocal fib3 = 0\n\tlocal\
    \ i = 1\n\twhile i <= n do\n\t\tlocal tmp1 = fib1 + fib2\n\t\tlocal tmp2 = tmp1\
    \ + fib3\n\t\tfib1 = fib2\n\t\tfib2 = tmp1\n\t\tfib3 = tmp2\n\t\ti = i + 1\n\t\
    end\n\treturn fib3\nend", "  local a = 0\n  local b = 1\n  local c = 2\n  while\
    \ c <= n do\n    a, b = b, a + b\n    c = c + 3\n  end\n  return a\nend", "\t\
    -- Write your code in solution space here\n\tif n <= 0 then\n\t\treturn 0\n\t\
    elseif n == 1 then\n\t\treturn 0\n\telseif n == 2 then\n\t\treturn 1\n\telse\n\
    \t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "  local i =\
    \ 1\n  while i < n do\n    i = i + 1\n  end\n  return i\nend", "   if n==0 then\
    \ return 0 end\n   if n==1 then return 1 end\n   return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\nThe second part is almost the same as yours:\n\
    <code>", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n\
    \  elseif n == 2 then\n    return 0 + 1\n  elseif n > 2 then\n    return (fibfib(n-1)\
    \ + fibfib(n-2))\n  end\nend", "\tif n == 0 then\n\t\treturn 0\n\telseif n ==\
    \ 1 then\n\t\treturn 0\n\telseif n == 2 then\n\t\treturn 1\n\telse\n\t\treturn\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "  if n < 0 then\n   \
    \ error(\"fibfib: negative number not allowed\")\n  end\n  if n < 1 then\n   \
    \ return 0\n  end\n  local fibfib = [[0,1],[2,1],[3,1]]\n  local i = 0\n  repeat\n\
    \    local tmp = fibfib[(i-1)%3]\n    fibfib[i] = fibfib[i] + fibfib[i-1] + fibfib[i-2]\n\
    \    i = i+1\n  until fibfib[i] == n\n  return fibfib[i]\nend", "    if n==0 then\n\
    \        return 0\n    end\n    if n==1 then\n        return 1\n    end\n    return\
    \ fibfib(n-1)+fibfib(n-2)\nend", "  if n < 3 then\n    return n\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n == 0 then return\
    \ 0 end\n  if n == 1 then return 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "\tif n < 1 then\n\t\treturn 0\n\tend\n\tlocal function fibfib_inner(n,\
    \ acc)\n\t\tif n < 1 then\n\t\t\treturn acc\n\t\tend\n\t\treturn fibfib_inner(n-1,\
    \ acc) + fibfib_inner(n-2, acc) + fibfib_inner(n-3, acc)\n\tend\n\treturn fibfib_inner(n,\
    \ 0)\nend", "\tif n < 0 then\n\t\treturn 0\n\telseif n < 3 then\n\t\treturn n\n\
    \telse\n\t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "  return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  local fibfib0 = 1\n  local\
    \ fibfib1 = 1\n  local fibfib2 = 1\n  for i = 2, n do\n    fibfib0 = fibfib1 +\
    \ fibfib2\n    fibfib1 = fibfib1\n    fibfib2 = fibfib0\n  end\n  return fibfib0\n\
    end", "    if n < 0 then return nil end\n    if n == 0 then\n        return 0\n\
    \    end\n    if n == 1 then\n        return 1\n    end\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  if n==1 then\n    return 0\n  elseif n==2\
    \ then\n    return 1\n  elseif n==3 then\n    return 1\n  elseif n==4 then\n \
    \   return 2\n  elseif n==5 then\n    return 3\n  elseif n==6 then\n    return\
    \ 5\n  elseif n==7 then\n    return 8\n  elseif n==8 then\n    return 13\n  elseif\
    \ n==9 then\n    return 21\n  elseif n==10 then\n    return 34\n  elseif n==11\
    \ then\n    return 55\n  elseif n==12 then\n    return 89\n  elseif n==13 then\n\
    \    return 144\n  elseif n==14 then\n    return 233\n  elseif n==15 then\n  \
    \  return 377\n  elseif n==16 then\n    return 610\n  elseif n==17 then\n    return\
    \ 987\n  elseif n==18 then\n    return 1597\n  elseif n==19 then\n    return 2584\n\
    \  elseif n==20 then\n    return 4181\n  elseif n==21 then\n    return 6765\n\
    \  elseif n==22 then\n    return 10946\n  elseif n==23 then\n    return 17711\n\
    \  elseif n==24 then\n    return 28657\n  elseif n==25 then\n    return 46368\n\
    \  elseif n==26 then\n    return 75025\n  elseif n==27 then\n    return 121393\n\
    \  elseif n==28 then\n    return 196418\n  elseif n==29 then\n    return 317811\n\
    \  elseif n==30 then\n    return 514229\n  elseif n==31 then\n    return 832040\n\
    \  elseif n==32 then\n    return 1346269\n  elseif n==33 then\n    return 2178309\n\
    \  elseif n==34 then\n    return 3524578\n  elseif n==35 then\n    return 5702887\n\
    \  elseif n==36 then\n    return 9228274\n  elseif n==37 then\n    return 14930352\n\
    \  elseif n==38 then\n    return 24157817\n  elseif n==39 then\n    return 39088169\n\
    \  elseif n==40 then\n    return 63245986\n  elseif n==41 then\n    return 102334155\n\
    \  elseif n==42 then\n    return 183500", "    if n == 0 then\n        return\
    \ 0\n    end\n    if n == 1 then\n        return 1\n    end\n    return fibfib(n\
    \ - 1) + fibfib(n - 2)\nend", "    local f1, f2, f3, f4 = 0, 1, 0, 1\n    local\
    \ fibfib = 0\n    if n <= 1 then\n        return fibfib\n    end\n    for i =\
    \ 1, n do\n        fibfib += f1 \n        f1, f2, f3, f4 = f2, f3, f4, f1+f4\n\
    \    end\n    return fibfib\nend", "    if n<0 or n>n then return nil end\n  \
    \  if n==1 then return 0 end\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n < 0 then return end\n  if n == 0 then return 0 end\n  if n == 1\
    \ then return 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", " \
    \ if n < 1 then\n    return 0\n  end\n  if n < 3 then\n    return 1\n  end\n \
    \ local fibfibn = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  return fibfibn \n\
    end", "  local fib = 0\n  for i = 2, n do\n    fib = fib + fibfib(i-1) + fibfib(i-2)\
    \ + fibfib(i-3)\n  end\n  return fib\nend\nprint(fibfib(1)) -- 0\nprint(fibfib(5))\
    \ -- 4\nprint(fibfib(8)) -- 24", "   if n <= 1 then\n      return n\n   else\n\
    \      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n   end\nend", "  if n ==\
    \ 1 then return 0 else return fibfib(n-1) + fibfib(n-2) end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 2 then\n    return 0\n  else\n\
    \    local fibfibs = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    return fibfibs[n]\n\
    \  end\nend", "\tlocal f = memo{}\n\tfor i=2,n do\n\t\ttable.insert(f, 1)\n\t\t\
    table.insert(f, f)\n\tend\n\treturn f[n]\nend", "  if n ~= 0 then\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  else\n    return 0\n  end\nend",
  "\tif n < 0 then\n\t\treturn nil\n\telseif n < 2 then\n\t\treturn n\n\telse\n\t\t\
    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "    if n <= 1 then\n\
    \        return 0\n    end\n    return fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)\nend", "  if n == 1 then\n    return 0\n  end\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "  if n < 3 then return n elseif n == 0 then return 0 elseif\
    \ n == 1 then return 1 else\n  -- Get the n-1'th term of the fibonacci sequence\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n <= 0\
    \ then return 0 end\n  local fibfib = 0\n  repeat\n    fibfib = fibfib + n\n \
    \   n = n - 2\n  until n = 0\n  return fibfib\nend", "    if n == 0 then\n   \
    \     return 0\n    end\n    if n == 1 then\n        return 1\n    end\n    return\
    \ fibfib(n-1) + fibfib(n-2)\nend", "\tif n <= 0 then\n\t\treturn 0\n\telse\n\t\
    \treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "    if n < 0 then\n\
    \        return nil\n    end\n    if n == 0 then\n        return 0\n    end\n\
    \    if n == 1 then\n        return 1\n    end\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n\
    \    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\n\
    end", "  if n <= 1 then\n    return 0\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  end\nend", "   if n == 0 then\n      return 0\n   elseif n\
    \ == 1 then\n      return 1\n   elseif n == 2 then\n      return 1\n   else\n\
    \      return fibfib(n-1) + fibfib(n-2)\n   end\nend", "  local fib = {}\n  for\
    \ i = 1, n do\n    local a = fib[i-1] or 0\n    fib[i] = a + fib[i-2] + fib[i-3]\n\
    \  end\n  return fib[n] or 0\nend", "  if n <= 2 then return 0 end\n  local a,b\
    \ = 1,1\n  for i = n-1, 0, -1 do\n    a,b = b, a+b\n  end\n  return b\nend", " \
    \ if n == 0 then\n    local s = 0\n    return s\n  elseif n == 1 then\n    local\
    \ s = 0\n    return s\n  elseif n == 2 then\n    local s = 0\n    return s\n \
    \ else\n    local s = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    return s\n\
    \  end\nend", "  return n and fibfib(n-1) + fibfib(n-2) + fibfib(n-3) or 0\nend",
  "  local i\n  local result = 1\n  for i = 1, n do\n    local curr = result + 1\n\
    \    local next = curr + curr\n    result = curr\n  end\n  return result\nend",
  "  if n < 0 then\n    error(\"fibfib: argument must be positive\", 2)\n  end\n \
    \ if n < 2 then\n    return 0\n  end\n  return fibfib(n-1) + fibfib(n-2)\nend",
  "   if n < 1 then\n      return 0\n   else\n      return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n   end\nend", "    if n < 0 then return nil end\n    if n ==\
    \ 0 then return 0 end\n    if n == 1 then return 1 end\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  if n == 0 then\n    return 0\n  elseif\
    \ n == 1 then\n    return 1\n  elseif n == 2 then\n    return 1\n  elseif n %\
    \ 2 == 0 then\n    return fibfib(n - 1) + fibfib(n - 2)\n  else\n    return fibfib(n\
    \ - 1) + fibfib(n + 2)\n  end\nend", "  if n == 0 or n == 1 then\n    return 0\n\
    \  end\n  local fibfib_n = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  return fibfib_n\n\
    end", "  if n <= 1 then\n    return n\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  end\nend", "  if n < 3 then return n else return fibfib(n -\
    \ 1) + fibfib(n - 2) + fibfib(n - 3) end\nend", "  if n < 1 then return 0 end\n\
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 1 then return\
    \ 0 end\n  if n < 3 then return 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n < 0 then return nil end\n  if n==0 or n==1 then return 0 end\n \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "\tif n == 0 then\n\t\t\
    return 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fibfib(n-1) +\
    \ fibfib(n-2)\n\tend\nend", "  return n and fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ or n\nend", "\tlocal fibfib = {}\n\tlocal i = 1\n\twhile i < n do\n\t\tlocal\
    \ fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n\t\ti = i+1\n\tend\n\t\
    return fibfib[n]\nend", "  if n < 0 then\n    return 0\n  elseif n == 0 then\n\
    \    return 0\n  else\n    local fib = 2\n    local i = 1\n    while i <= n do\n\
    \      fib = fib + fib\n      i = i + 1\n    end\n    return fib\n  end\nend",
  "\tif n < 3 then\n\t\treturn 0\n\telseif n == 0 then\n\t\treturn 0\n\telseif n ==\
    \ 1 then\n\t\treturn 1\n\telse\n\t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \tend\nend", "  local a = 1\n  local b = 1\n  local c = 0\n  for i = 1, n do\n\
    \    c = a + b\n    a = b\n    b = c\n  end\n  return c\nend", "    if n == 0\
    \ then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n\
    \        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n    end\nend",
  "  if n < 2 then return 0 end\n  local a,b = fibfib(n-1), fibfib(n-2)\n  return\
    \ b + b + b\nend", "    if n < 0 then\n        return nil\n    end", "  if n==0\
    \ then\n    return 0\n  end\n  if n==1 then\n    return 1\n  end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  if n == 0 then\n    local fibfib = 0\n\
    \  elseif n == 1 then\n    local fibfib = 0\n  else\n    local fibfib = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\n  return fibfib\nend", "  if n == 0 then\
    \ return 0 else return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    local\
    \ fibnum = {}\n    fibnum[1] = 0\n    fibnum[2] = fibnum[1]\n    fibnum[3] = fibnum[2]\n\
    \    for i = 4,n,1 do\n        fibnum[i] = fibnum[i-1] + fibnum[i-2] + fibnum[i-3]\n\
    \    end\n    return fibnum[n]\nend", "  -- Base cases\n  if n < 3 then return\
    \ n end\n  if n < 9 then return 1 end\n  \n  -- Recursively compute fibfib(n-1)\
    \ and fibfib(n-2)\n  local n1 = fibfib(n-1)\n  local n2 = fibfib(n-2)\n  \n  --\
    \ Return the nth number in the Fibbonacci sequence\n  return n1 * n2 + n\nend",
  "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n  elseif n\
    \ == 2 then\n    return 1\n  elseif n == 3 then\n    return 1\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  return if n < 2 then\
    \ 1 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 2 then\n   \
    \ return 0\n  elseif n == 2 then\n    return 1\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "\tif n < 2 then return 0 end\n\t\
    if n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn fibfib(n-2)\
    \ + fibfib(n-3)\nend", "  if n < 0 then\n    error('fibfib requires n >= 0')\n\
    \  elseif n == 0 then\n    return 0\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  end\nend\n</cell>\n<text>\nProblem 4\nWrite a function that\
    \ takes an integer and returns the sum of the integer's digits.\nFor example,\
    \ sum_digits(14) should return 0 + 0 + 4 = 4.\nHint: Luhn's algorithm may be helpful.",
  "    local prev, n1, n2 = 0, n-1, 0\n    while n2 > 0 do\n        prev = prev +\
    \ n1\n        n1 = n2\n        n2 = n1 + n2\n    end\n    return prev\nend", "\t\
    if n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 0\n\telseif n ==\
    \ 2 then\n\t\treturn 1\n\telse\n\t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \tend\nend", "  if n < 0 then\n    return 0\n  else\n    if n == 0 then\n    \
    \  return 0\n    else\n      local result = 1\n      for i = 1, n do\n       \
    \ result = result + fibfib(i-1)\n      end\n      return result\n    end\n  end\n\
    end", "  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 0\n\
    \  end\n  if n == 2 then\n    return 1\n  end\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "  if n < 0 then return 0 end\n  if n == 0 then return\
    \ 0 end\n  if n == 1 then return 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n < 2 then\n    return n\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  end\nend", "  if n == 0 then\n    return 0\n  elseif n == 1\
    \ then\n    return 0\n  elseif n == 2 then\n    return 1\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "    local fibnum = 0\n    local n\
    \ = n\n    local fib = 1\n    repeat\n        fibnum = fibnum + fib\n        fib\
    \ = (fibnum * fibnum) % n + 1\n    until fib < 1 or fib > n\n    return fibnum\n\
    end", "  if n == 0 then return 0 end\n  local fibfib2 = fibfib(n-1) + fibfib(n-2)\n\
    \  if n == 1 then return fibfib2 else return fibfib2 end\nend", "\t-- Base cases.\n\
    \tif(n == 0) then\n\t\treturn 0\n\tend\n\tif(n == 1) then\n\t\treturn 0\n\tend\n\
    \t-- Recursive case.\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend",
  "\tif n <= 0 then return 0 end\n\tif n == 1 then return 0 end\n\tif n == 2 then\
    \ return 1 end\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    if\
    \ n < 0 then\n        return nil\n    else\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend", "  local function fibfib1(k)\n    if k == 0 then\
    \ return 0 end\n    if k == 1 then return 1 end\n    return fibfib1(k-1) + fibfib1(k-2)\
    \ + fibfib1(k-3)\n  end\n  return fibfib1(n)\nend", "  if n < 0 then\n    return\
    \ 0\n  elseif n <= 1 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  end\nend", "  if n == 0 then\n    return 0\n  elseif n == 1\
    \ then\n    return 0\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "  if n <= 1 then\n    return 0\n  end\n  if n == 2 then\n    return\
    \ 1\n  end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nprint(fibfib(0))\n\
    print(fibfib(1))\nprint(fibfib(2))\nprint(fibfib(0))\nprint(fibfib(1)) -- 0\n\
    print(fibfib(5)) -- 4\nprint(fibfib(8)) -- 24", "  assert(n > 1)\n  local f =\
    \ 1\n  repeat\n    local tmp = f\n    f = tmp + f\n  until f == n\n  return f\n\
    end", "  local result = 0\n  local fibfib0 = fibfib(0)\n  for _ = 1, n do\n  \
    \  fibfib0 = fibfib0 + fibfib(1)\n    result = result + fibfib0\n  end\n  return\
    \ result\nend", "  if n==0 then\n    return 0\n  elseif n==1 then\n    return\
    \ 1\n  else\n    return fibfib(n-1) + fibfib(n-2)\n  end\nend", "  assert(n >=\
    \ 0 and n <= 31, 'n must be between 0 and 31')\n  local fib = 1\n  local i = 1\n\
    \  while i <= n do\n    fib = (fib * i) + fibfib(i-1)\n    i = i + 1\n  end\n\
    \  return fib\nend", "  if n==0 then\n    return 0\n  elseif n==1 then\n    return\
    \ 0\n  elseif n==2 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  end\nend", "  if n < 0 then\n    return 0\n  elseif n == 0\
    \ then\n    return 0\n  elseif n == 1 then\n    return 1\n  elseif n > 1 then\n\
    \    return fibfib(n-2) + fibfib(n-1)\n  end\nend", "  if n < 0 then\n    return\
    \ 0\n  elseif n < 1 then\n    return 1\n  elseif n <= 3 then\n    return fibfib(n-1)\
    \ + fibfib(n-2)\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "  if n==0 then return 0 end\n  if n==1 then return 1 end\n  return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    local fib = 0\n    for i\
    \ = 1, n do\n        fib = fib + (math.pow(2, i) - 1)\n    end\n    return fib\n\
    end", "  if n == 0 then return 0 end\n  local fib = 0\n  for i=3, n, 1 do fib\
    \ = fibfib(i) + fib end\n  return fib\nend", "  if n < 1 then return 0 end\n \
    \ if n < 3 then return n end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n <= 0 then return 0 end\n  if n < 1 then return 0 end\n  if n < 3\
    \ then return n end\n  local fibfib = {}\n  fibfib[1] = fibfib[2]\n  fibfib[3]\
    \ = fibfib[4]\n  local fibfib4 = fibfib[5]\n  local fibfib6 = fibfib[6]\n  local\
    \ fibfib7 = fibfib[7]\n  fibfib[n] = fibfib[n-1] + fibfib[n-2] + fibfib[n-3]\n\
    \  fibfib[n] = fibfib[n] + fibfib4 + fibfib6 + fibfib7\n  return fibfib[n]\nend",
  "    if n < 2 then return n end\n    local fib = fibfib(n-2) + fibfib(n-3)\n   \
    \ return fib\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

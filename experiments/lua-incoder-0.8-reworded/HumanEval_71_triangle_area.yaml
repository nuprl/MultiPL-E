name: HumanEval_71_triangle_area
language: lua
prompt: "-- Given the lengths of the three sides of a triangle. Return the area of\n\
  -- the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n-- Otherwise return -1\n-- Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n-- than the third side.\n-- Example:\n-- >>> triangle_area(3,\
  \ 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\nlocal function triangle_area(a,\
  \ b, c)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
  \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
  \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
  \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
  \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
  \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tif a+b > c then return (b*(b - c)+c*(b - a))/a end\n\treturn -1\n\
    end", "\tif a >= b and a >= c then\n\t\treturn (a+b+c)/2\n\telseif b >= c and\
    \ b >= a then\n\t\treturn (b+c+a)/2\n\telseif c >= a and c >= b then\n\t\treturn\
    \ (c+a+b)/2\n\telse\n\t\treturn -1\n\tend\nend", "    local area = 0\n    local\
    \ t = a + b + c\n    area = area * 0.5\n    if t > c then\n        area = (c -\
    \ t) * 0.5\n    end\n    if t > b then\n        area = area - (b - t) * 0.5\n\
    \    end\n    if t > a then\n        area = area - (t - a) * 0.5\n    end\n  \
    \  return area\nend", "    if (a+b+c < b+c+a) then\n        return -1\n    else\n\
    \        return ((b*b) - 4.0*a*c) / ((a+b) * (a+c) * (a+b)) \n    end\nend", "\t\
    return if a >= b and a >= c then a / (b * b) elseif b >= a and b >= c then b /\
    \ (c * c) elseif c >= a and c >= b then c / (a * a) end\nend", "  -- Note: this\
    \ function assumes that a, b, and c are all valid and \n  -- positive numbers.\
    \ Also note that this function returns -1 if a\n  -- or b or c are invalid or\
    \ if a is an invalid side.\n  if a == b then return c end\n  if a == c then return\
    \ 0 end\n  if b == c then return 0 end\n  if a + b > c then return -1\nend", " \
    \ local sab = math.abs(a-b)\n  local sc = math.abs(c-b)\n  local sac = math.abs(a-c)\n\
    \  if sab + sc > sac then\n    return math.round(sab*sc/sac)/2\n  else\n    return\
    \ -1\n  end\nend", "\treturn math.sqrt(a**2 + b**2 + c**2) - math.sqrt(b**2 +\
    \ a**2 + c**2) \nend", "  if a == b then\n    if b == c then\n      return a\n\
    \    end\n    return -1\n  end\n  if a == c then\n    return b\n  end\n  if b\
    \ == c then\n    return a\n  end", "\treturn math.sqrt(math.pow(a + b, 2) + (math.pow(c,\
    \ 2))) or -1\nend", "\treturn if a < b and b < c then a + b + c else -1\nend",
  "  if a + b > c then return c else\n  if b + c > a then return b else\n  if a +\
    \ c > b then return a else\n  return -1\n  end\n  end", "    if a >= b and a >=\
    \ c then\n        if b >= c then\n            return ((b * b) - (a * c)) / (2\
    \ * a)\n        else\n            return -1\n        end\n    elseif a >= b then\n\
    \        if b >= c then\n            return -1\n        else\n            return\
    \ ((b * b) - (a * c)) / (2 * a)\n        end\n    elseif a >= c then\n       \
    \ if b >= c then\n            return ((b * b) - (a * c)) / (2 * a)\n        else\n\
    \            return -1\n        end\n    else\n        if b >= c then\n      \
    \      return -1\n        else\n            return ((b * b) - (a * c)) / (2 *\
    \ a)\n        end\n    end\nend", "\tlocal s = a + b + c\n\treturn s if s >= b\
    \ then s + (s - b) * (b - a) * (c - a) / (6 * b) \n\t\t\telse return -1\n\tend\n\
    \treturn triangle_area\nend", "  -- The three sides make up a triangle.\n  --\
    \ We are looking for three sides.\n  if a + b > c then\n    -- These three sides\
    \ make a valid triangle. \n    -- the sum of any two sides is greater than the\
    \ third side.\n    return (b - c) * (b - c)\n  elseif b + c > a then\n    -- These\
    \ three sides make a valid triangle. \n    -- the sum of any two sides is greater\
    \ than the third side.\n    return (a-c) * (a-c)\n  else\n    -- None of the sides\
    \ make a valid triangle. \n    -- We return -1.\n    return -1\n  end\nend", "\t\
    return (math.sqrt(math.pow(a, 2) + math.pow(b, 2)) / 3) if a > 0 and b > 0 and\
    \ c > 0 else -1\nend", "  -- Find if the sides make a valid triangle\n  if a +\
    \ b > c and a + c > b and b + c > a then\n    -- If the sum of two sides is greater\
    \ than the third side\n    local t = a + b + c\n    if t > a then\n      -- If\
    \ any three sides are greater than the third side, return that area rounded to\
    \ two decimal points\n      return math.sqrt(t * t - a * a + b * b + c * c)\n\
    \    else\n      -- If all three sides are greater than the third side, return\
    \ -1\n      return -1\n    end\n  else\n    -- If the sum of two sides is less\
    \ than the third side, return -1\n    return -1\n  end\nend", "   -- Calculate\
    \ side lengths\n   local aSq = a*a\n   local bSq = b*b\n   local cSq = c*c", " \
    \   if a + b > c then\n        return (b + c) * 0.5\n    elseif a + c > b then\n\
    \        return (c * a) / b\n    elseif b + c > a then\n        return (a * b)\
    \ / c\n    else\n        return -1\n    end\nend", "\tif a < b and a < c then\n\
    \t\tlocal t = a\n\t\ta = b\n\t\tb = c\n\t\tc = t\n\tend", "  local cs = c\n  local\
    \ bs = b\n  local as = a\n  local cs = cs\n  if bs <= as or cs <= bs then\n  \
    \  return 0\n  end\n  if cs > as and cs > bs then\n    bs = b\n    as = a\n  \
    \  cs = cs\n  end\n  -- Check for vertical triangle\n  if cs == as then\n    return\
    \ (bs * (bs - as)) / 2\n  end\n  -- Assume that all sides are equal\n  if cs <\
    \ as then \n    cs = as\n    bs = as\n  end\n  -- Assume that all sides are equal\n\
    \  if bs < cs then\n    as = bs\n    cs = bs\n  end\n  -- If two sides are equal,\
    \ they form an equilateral triangle\n  if as == bs then\n    return as * 2 / 3\n\
    \  end\n  -- Calculate area of triangle formed by two lines\n  local a = (as*bs-bs*cs)/(as*bs-bs*cs*cs)\n\
    \  return (a * 4) / 3\nend", "  if a >= b and b >= c then\n    return math.sqrt(math.pow(a,\
    \ 2) + math.pow(b, 2) + math.pow(c, 2))\n  elseif b > c then\n    return -1\n\
    \  elseif c > a then\n    return -1\n  else\n    return 0\n  end\nend", "\tif\
    \ a == 0 and b == 0 and c == 0 then return 0 end\n\tif a + b > c then return math.floor((a\
    \ + b - c) / 2.0) end\n\tif a + c > b then return math.floor((a + c - b) / 2.0)\
    \ end\n\tif b + c > a then return math.floor((b + c - a) / 2.0) end\n\treturn\
    \ -1\nend", "  if a ~= b and b ~= c then\n    if a + b > c then \n      return\
    \ -1\n    end\n    if a + c > b then\n      return -1\n    end\n    if b + c >\
    \ a then\n      return -1\n    end\n  end\n  return math.sqrt( a * a + b * b +\
    \ c * c )\nend", "\tif a+b > c then return ((c-a)*b)/(a+b) end\n\tif c+a > b then\
    \ return ((c-b)*a)/(c+a) end\n\tif a+c > b then return ((c-a)*a)/(c+b) end\n\t\
    if b+c > a then return ((c-b)*b)/(c+a) end\n\treturn -1\nend", "    if a >= b\
    \ and a >= c then return (a+b+c)/2\n    elseif b >= a and b >= c then return (a+b+c)/2\n\
    \    elseif c >= a and c >= b then return (a+b+c)/2\n    else\n        return\
    \ -1\n    end\nend\n</cell>\n<cell>", "  -- Make sure all values are valid triangle\
    \ sides.\n  assert((a >= 0) and (a <= b) and (b <= c) and (c >= 0) and (a+b+c)\
    \ >= 0)", "\tlocal side1 = b - a\n\tlocal side2 = c - b\n\tlocal s = side1 * side2",
  "  -- This checks that the sum of the three sides is greater than the third side\n\
    \  if a + b <= c then return -1\n  -- This checks that the sum of the two sides\
    \ is greater than the third side\n  if a + c <= b then return -1\n  -- This checks\
    \ that the sum of the two sides is greater than the third side\n  if b + c <=\
    \ a then return -1", "  return if a + b + c < b then a + b + c else -1 end\nend",
  "  if a + b > c then\n    if a + c > b then\n      return (a * b) / c\n    else\n\
    \      return -1\n    end\n  else\n    if b + c > a then\n      return -1\n  \
    \  else\n      return (a * b) / c\n    end\n  end\nend", "\tlocal s = a + b +\
    \ c\n\tif a + b > c and a + c > b and b + c > a then\n\t\treturn s / 4\n\telseif\
    \ b + c > a then \n\t\treturn c / 2\n\telseif a + c > b then\n\t\treturn b / 2\n\
    \tend\n\treturn -1\nend", "  if a > c or b > c or c > a or b > a then\n    return\
    \ -1\n  else\n    local area = 0.0\n    local c1 = b - c\n    local c2 = b - a\n\
    \    local d1 = b - a\n    local s2 = c - a\n    local s3 = c - b\n    local det\
    \ = c1 -- a ^ 2 - b ^ 2\n    if det == 0 then \n      return -1\n    elseif det\
    \ < 0 then\n      det = -det\n    end\n    local inv_det = 1.0 / det\n    local\
    \ det_2 = det * det\n    local det_3 = det_2 * det\n    local sqrt_det = math.sqrt(det)\n\
    \    local sqrt_det2 = math.sqrt(det_2)\n    local sqrt_det3 = math.sqrt(det_3)\n\
    \    local det_a = (- c2 * sqrt_det * inv_det * sqrt_det2) -- det * (- c2 * sqrt_det\
    \ * inv_det * sqrt_det2)\n    local det_b = (- c2 * sqrt_det * inv_det * sqrt_det3)\
    \ -- det * (- c2 * sqrt_det * inv_det * sqrt_det3)\n    local det_c = (- d1 *\
    \ sqrt_det * inv_det * sqrt_det2) -- det * (- d1 * sqrt_det * inv_det * sqrt_det2)\n\
    \    local det_d = (- d1 * sqrt_det * inv_det * sqrt_det3) -- det * (- d1 * sqrt_det\
    \ * inv_det * sqrt_det3)\n    local det_ab = det_a + det_b\n    local det_ac =\
    \ det_a + det_c\n    local det_bc = det_b + det_c\n    if det_ab > 0 then -- det\
    \ * (- d1 * sqrt_det * inv_det * sqrt_det2)\n      -- det * (- c2 * sqrt_det *\
    \ inv_det * sqrt_det2)\n      local ab = (- c2 * sqrt_det * inv_det * sqrt_det2)\
    \ * ( c * c - a * b) * inv_det\n      -- det * (- d1 * sqrt_det * inv_det * sqrt_det2)\n\
    \      local ac = (- d1 * sqrt_det * inv_det * sqrt_det2) * ( c * c - a * b) *\
    \ inv_det\n      -- det * (- d1 * sqrt_det * inv_det * sqrt_det3)\n      local\
    \ bc = (- d1 * sqrt_de", "    if a + b > c then\n        return (c * b) - (a *\
    \ c)\n    else\n        return -1\n    end\nend", "  if a + b > c then return\
    \ (b + c) / 2\n  else return -1\n  end\nend", "  if a == b and c == a then \n\
    \    -- triangle is valid\n    return 0.5\n  elseif a + b > c and a + c > b and\
    \ b + c > a then \n    -- triangle is valid\n    return (a * b + c * a) / 2 +\
    \ 0.5\n  else \n    -- triangle is invalid\n    return -1\n  end\nend", "\tif\
    \ a+b <= c then\n\t\tlocal s = a * c / b\n\t\tlocal t = b * c / a\n\t\tif s ~=\
    \ t then\n\t\t\treturn round(s)\n\t\tend\n\t\treturn s\n\telse\n\t\treturn -1\n\
    \tend\nend", "    local area = 0 \n    if a + b > c then\n       area = a * b\n\
    \    elseif a + c > b then\n       area = c * b\n    elseif b + c > a then\n \
    \      area = b * a\n    end", "    if a + b > c and a + c > b and b + c > a then\n\
    \        return ((a + b + c)/2)\n    else\n        return -1\n    end\nend", " \
    \ if a>b and a>c then\n    return math.sqrt( (b*b) - (a*a) ) \n  elseif b>c and\
    \ b>a then\n    return math.sqrt( (b*b) - (c*c) )\n  elseif c>a and c>b then\n\
    \    return math.sqrt( (c*c) - (a*a) )\n  else\n    return -1\n  end\nend", " \
    \   local s = a + b + c\n    if s > a + b and s > b and s > c then\n        return\
    \ a * b * c / (s + a * c + b * b)\n    end\n    return -1\nend", "  local s =\
    \ b + c\n  if a + c > s then\n    return s * (b - c) / 2\n  else\n    return -1\n\
    \  end\nend", "  -- Calculate area\n  local s = (a + b + c) * 0.5\n  if s >= b\
    \ then -- Check if one side is greater than the other\n    -- If one side is greater\
    \ than the other, then two sides\n    -- are greater than the third side.\n  \
    \  s = s - b\n  elseif s >= a then -- Check if two sides are greater than the\
    \ third\n    -- If two sides are greater than the third, then one side\n    --\
    \ must be greater than the other.\n    s = s - a\n  elseif s >= c then -- Check\
    \ if three sides are greater than the fourth\n    -- If three sides are greater\
    \ than the fourth, then the sum\n    -- must be greater than the third.\n    s\
    \ = s - c\n  else -- One or two sides are greater than the third\n    -- If one\
    \ or two sides are greater than the third, then the sum \n    -- must be greater\
    \ than the third.\n    s = s - a -- Return the sum as there is no valid triangle\
    \ with sides a \n    -- or b or c.\n  end\n  return s\nend", "\tlocal a1 = math.abs(a)\n\
    \tlocal b1 = math.abs(b)\n\tlocal c1 = math.abs(c)\n\tlocal s1 = math.max(a1,\
    \ b1, c1)\n\tlocal s2 = math.min(a1, b1, c1)\n\t\n\tif s1*s2 <= a1*b1 then\n\t\
    \treturn s1\n\telse\n\t\treturn -1\n\tend\nend", "    if a + b > c then\n    \
    \    local s = math.sqrt((b * b) + (4 * c))\n        return round_decimal(s /\
    \ 2)\n    elseif a + c > b then\n        local s = math.sqrt((b * b) + (4 * a))\n\
    \        return round_decimal(s / 2)\n    elseif b + c > a then\n        local\
    \ s = math.sqrt((c * c) + (4 * a))\n        return round_decimal(s / 2)\n    end\n\
    \    return -1\nend", "  local s = (a+b+c)/2.0\n  if ((b^2)-(4.0*a*c)) < 0 then\
    \ return -1 end\n  if ((c^2)-(2.0*a*b)) < 0 then return -1 end\n  if ((b^2)-(4.0*a*b))\
    \ < 0 then return -1 end\n  return s\nend", "    local s = a + b + c\n    if s\
    \ a > b and b > c then return s / 2.0 elseif s > a then return -1 else return\
    \ 0 end\nend", "    if a > b and a > c then return (b - c) \n    else if a > c\
    \ and a > b then return (c - b) \n    else if a > b and a > c then return (c -\
    \ b) \n    else return -1 end\nend", "    local side1 = abs(a)\n    local side2\
    \ = abs(b)\n    local side3 = abs(c)\n    local ab = side1+side2+side3\n    if\
    \ ab > 0 then\n        if ab < side1 then\n            return side1\n        end\n\
    \        if ab < side2 then\n            return side2\n        end\n        if\
    \ ab < side3 then\n            return side3\n        end\n    end\n    return\
    \ -1\nend", "  if a + b <= c or a + c <= b or b + c <= a then\n    return -1\n\
    \  end\n  return (b * b) - (4 * (a * c))\nend", "\tlocal s = a + b + c\n\tif s\
    \ >= a and (s >= b or s >= c) then\n\t\treturn s\n\tend\n\treturn -1\nend", "\t\
    local d = b - a;\n\tlocal e = c - b;\n\tlocal g = d - e;\n\tlocal h = e - a;\n\
    \tif g > h and g > 0 then\n\t\treturn g;\n\telseif h > 0 then\n\t\treturn h;\n\
    \telse\n\t\treturn -1\n\tend\nend", "  local ab = b - a\n  local bc = c - b\n\
    \  local ad = ab * bc\n  if ad > 0 then\n    return math.sqrt(ad)\n  else\n  \
    \  return -1\n  end\nend", "  a = a or 0\n  b = b or 0\n  c = c or 0\n  local\
    \ area = 0\n  if a + b > c then return -1 end\n  if a + c > b then return -1 end\n\
    \  if b + c > a then return -1 end\n  area = (a + b) - (c + b)\n  if area > 0\
    \ then return math.floor(area / 2) else return -1 end\nend\n  ", "  local side1,\
    \ side2, side3 = a, b, c\n  local a, b, c  = side1, side2, side3\n  local area\
    \  = 0\n  local delta_a, delta_b, delta_c = abs(a - b), abs(a - c), abs(b - c)\n\
    \  local valid_sides = delta >= 0 and delta <= delta_c\n  if not valid_sides then\n\
    \    return -1\n  end\n  if a + b > c and a + c > b and b + c > a then\n    local\
    \ s1 = (a+b+c) / 2\n    local s2 = b*c - a*b\n    local s3 = c*b - b*c\n    area\
    \ = (s1 + s2 + s3) / 6\n  else\n    area = delta_c\n  end\n  area = math.round(100*area)/100\n\
    \  return area\nend", "   local s1=b^2-4*a*c\n   local s2=a*b*c\n   local s3=s1-s2\n\
    \   if s3 ~= 0 then\n      return ((s1 - (s2+s3)/3)^2)/3\n   else\n      return\
    \ -1\n   end\nend", "    if a >= b and a >= c then\n        return (a * b) /2\n\
    \    elseif b >= c then\n        return -1\n    else\n        return -1\n    end\n\
    end", "    return math.sqrt(math.pow(a, 2) + math.pow(b, 2) + math.pow(c, 2))\
    \ / 3\nend", "\tlocal s = a + b\n\tlocal t = b + c\n\tlocal u = c + a\n\treturn\
    \ ((s > t) and (u > t)) and (((s + t) > u) and ((s + u) > t)) and (((s - t) >\
    \ u) and ((s - u) > t)) and (((t - u) > s) and ((t - s) > u)) and (((t - s) >\
    \ (u - s)) and ((t - u) > (s - s))) and (((u - s) > (t - s))) and (((u - t) >\
    \ (s - t))) and (((u - t) > (u - s))) and (((s - u) > (t - s))) and (((s - t)\
    \ > (u - s))) and (((t-u) > (s - s))) and (((t-s) > (u - t))) and (((s - t) >\
    \ (u - t))) and (((t - u) > (u - s))) and (((s - u) > (u - t))) and (((u - s)\
    \ > (u - t))) and (((u - t) > (u - s))) and (((s - u) > (u - t))) and (((t-u)\
    \ > (u - s))) and (((t-s) > (u - t))) and (((t - u) > (u - s))) and (((u - t)\
    \ > (u - s)))\nend", "  local area_a = math.sqrt( (a*a)+(b*b)+(4*c*c) )\n  local\
    \ area_b = math.sqrt( (b*b)+(a*a)+(4*c*c) )\n  local area_c = math.sqrt( (c*c)+(a*a)+(b*b)\
    \ )\n  if area_a < area_b and area_a < area_c then\n    return area_a\n  elseif\
    \ area_b < area_c and area_b < area_a then\n    return area_b\n  else\n    return\
    \ area_c\n  end\nend\n</cell>\n<text>\nCongratulations! You've completed the assignments\
    \ for this unit. As you had already learned, the goal of a unit like this is to\
    \ test your ability to code by writing out some test cases and then running them\
    \ all. This doesn't require that you know Python, but it will help you to organize\
    \ your code as you go. Some of these tests may have already been written.", " \
    \   if a + b + c < a or a + b > b or a + c > c then\n        return -1\n    end\n\
    \    local area = (a + b) * (a + c) * (b + c)\n    if area > 9 then\n        return\
    \ round(math.sqrt(area), 2)\n    end\n    return area\nend", "  if a + b > c then\
    \ return -1 end\n  if a + c > b then return -1 end\n  if b + c > a then return\
    \ -1 end\n  return ((b * b) - (a * c)) / (2.0 * c)\nend", "\tlocal s = a*a + b*b\
    \ + c*c\n\tif s <= a+b+c then\n\t\treturn round(s/(2*a), 2)\n\telse\n\t\treturn\
    \ -1\n\tend\nend", "\tlocal area = 0\n\tlocal bc = b - c\n\tif bc > 0 then \n\t\
    \tarea = (b * c) / bc\n\telse\n\t\treturn -1\n\tend", "\tif a < b + c or b < a\
    \ + c or c < a + b then\n\t\treturn -1\n\telse\n\t\treturn (b + c) / 2\n\tend\n\
    end", "  local s = a * c + b * c + c * a\n  if s <= 0 then\n    return 0\n  elseif\
    \ s >= b then\n    return 0\n  elseif s >= c then\n    return s\n  else\n    return\
    \ round(s)\n  end\nend", "    if a + b > c then\n        return math.floor(a +\
    \ b + c) / 2\n    end\n    if a + c > b then\n        return math.floor(a + c\
    \ + b) / 2\n    end\n    if b + c > a then\n        return math.floor(b + c +\
    \ a) / 2\n    end\n    return -1\nend", "  -- If the sum of any two sides is greater\
    \ than the third side, the triangle is not valid.\n  if a + b > c then return\
    \ -1 end\n  -- If the sum of any two sides is equal to the third side, the triangle\
    \ is valid\n  if a + c == c then return (a / b) end\n  -- If the sum of any two\
    \ sides is less than the third side, the triangle is valid\n  if a + b < c then\
    \ return (a / c) end\n  -- Otherwise, if the sum of any two sides is equal to\
    \ the third side,\n  -- then the third side is greater than the sum of any two\
    \ other sides\n  -- and the triangle is valid\n  return (a * b) / c\nend\nreturn\
    \ triangle_area\n</cell>\n<text>\nGiven the lengths of the sides of a triangle,\
    \ return the area rounded to 2 decimal points if the\ntriangle is valid, -1 if\
    \ it is not. \nThe triangle is valid if:", "    local s = a + b + c\n    if s\
    \ == 0 then\n        return -1\n    elseif s % 2 == 1 then\n        return s/2\n\
    \    else\n        return -1\n    end\nend", "  if a + b <= c then return c /\
    \ b + a/b else return -1\nend", "  if ((a + b + c) <= 0)\n  then\n    return -1\n\
    \  end", "  return ((b * c) - (a * b)) / b\nend", "  if a + b > c then\n    return\
    \ (a * (c - b)) / 2\n  elseif b + c > a then\n    return (b * (a - c)) / 2\n \
    \ elseif b + c > b then\n    return (b * (b - c)) / 2\n  else\n    return 0\n\
    \  end\nend", "\tif a + b + c <= 0 then return -1 end\n\treturn (((b * b) - (4\
    \ * a * c)) / (2 * a))\nend", "  if a + b > c then\n    if a + c > b then\n  \
    \    return ((a + b) + c) / 2\n    end\n    return -1\n  end\n  return ((a + c)\
    \ + b) / 2\nend", "    local area_a = ( (a * b) - (a * c) ) / 2\n    local area_b\
    \ = ( (b * a) - (b * c) ) / 2\n    local area_c = ( (c * a) - (c * b) ) / 2\n\
    \    if area_a >= area_b and area_a >= area_c then\n        return area_a\n  \
    \  else if area_b >= area_c then\n        return area_b\n    else\n        return\
    \ area_c\n    end\nend", "  if a > b and a > c then\n    return (a * b) / 2\n\
    \  elseif b > a and b > c then\n    return (b * c) / 2\n  else\n    return -1\n\
    \  end\nend", "\tif a > c or b > c then\n\t\treturn -1\n\tend\n\treturn math.sqrt(math.pow(a,\
    \ 2) + math.pow(b, 2))\nend", "    local l1 = math.sqrt(pow(a, 2) + pow(b, 2))\n\
    \    local l2 = math.sqrt(pow(c, 2) + pow(a, 2))\n    \n    return l1 == l2 and\
    \ l1 or -1\nend", "  if a + b > c then\n    return c / b\n  elseif b + c > a then\n\
    \    return a / c\n  else\n    return 0\n  end\nend\n</cell>\n<code language=julia-1.5>\n\
    #=\nIn order to solve the equation of two sides of a triangle you can use the\
    \ following formula:\n    S = sqrt( (a*a + b*b)/2 - (c*c)/2 )\n=#", "  local area_a\
    \ = (((b * b) + a * a) * 0.5) ^ 0.5\n  local area_b = (((b * b) + a * a) * 0.5)\
    \ ^ 0.5\n  local area_c = (((b * b) + a * a) * 0.5) ^ 0.5", "\tif a + b > c then\n\
    \t\treturn (c / (a + b))\n\telseif a + c > b then\n\t\treturn (b / (a + c))\n\t\
    elseif b + c > a then\n\t\treturn (a / (b + c))\n\telse\n\t\treturn -1\n\tend\n\
    end", "\t-- Simple cases\n\tif a == b and a == c then return 0 -- Equilateral\n\
    \tif a + b > c then return nil -- Not a triangle", "\t-- We assume a,b and c are\
    \ integers\n\t-- We also assume a, b, c are integers and have no fractional part\n\
    \t-- If either of the two sides are less than zero, then the triangle is not valid\n\
    \tif a < 0 or b < 0 or c < 0 then\n\t\treturn -1\n\tend\n\tlocal s = (a + b +\
    \ c) / 2\n\t-- Only return triangle area if the sum of any two sides is greater\
    \ than the \n\t-- third side\n\tif s >= a + b + c then\n\t\treturn s\n\tend\n\t\
    return -1\nend", "\tlocal area\n\tlocal t = (a+b+c)/2\n\tlocal s = (a*a+b*b+c*c)/6\n\
    \tif t > 0 then\n\t\tif s > t then\n\t\t\tarea = (s*(s-t)) / 2\n\t\telse\n\t\t\
    \tarea = (s-t) / 2\n\t\tend\n\telse\n\t\tarea = 0\n\tend\n\treturn area\nend",
  "  if a + b <= c then\n    return -1\n  elseif a + c <= b then\n    return -1\n\
    \  elseif b + c <= a then\n    return -1\n  else\n    return math.sqrt(math.pow(a,\
    \ 2) + math.pow(b, 2) + (math.pow(c, 2) - math.pow(a ,2) - math.pow(b,2)))\n \
    \ end\nend", "  local c2 = c * c\n  local ab = math.abs(a * b)\n  local c3 = c2\
    \ * c\n  local abc = ab + c3\n  if abc > 0 then\n    return math.round(abc / c)\
    \ * c\n  elseif ab > 0 then\n    return -1\n  else\n    return -2\n  end\nend",
  "\tlocal s = a + b + c\n\tif s > 0 then\n\t\treturn 0.5 * (s*(s-a)*(s-b)*(s-c))\n\
    \telse\n\t\treturn -1\n\tend\nend", "  if a + b > c then return -1 else return\
    \ (a + c) - (b + c) end\nend", "\tif b <= 0 or c <= 0 then \n\t\treturn -1 \n\t\
    end\n\tif a + b <= c then \n\t\treturn 0\n\tend\n\tif a + c <= b then \n\t\treturn\
    \ 0\n\tend\n\treturn (a+b+c)/2\nend", "    return b * b - 4 * a * c\nend", "\t\
    local valid_a, valid_b = true, true\n\tlocal valid_a, valid_b = valid_a and b\
    \ > c, valid_b and b > c \n\t\n\treturn valid_a and valid_b and b * c \nend",
  "\tif a+b>c and a+c>b and b+c>a then\n\t\treturn (a+b+c)/2\n\telse\n\t\treturn -1\n\
    \tend\nend", "  if a + b > c then\n    if a + c > b then\n      return (a + b\
    \ + c) / 2.0;\n    else\n      return (c + b + a) / 2.0;\n    end\n  else\n  \
    \  if b + c > a then\n      return (c + a + b) / 2.0;\n    else\n      return\
    \ -1\n    end\n  end\nend", "\tif a + b > c then\n\t\tif a + c > b then \n\t\t\
    \treturn (b + c) / 2\n\t\telse \n\t\t\treturn -1\n\t\tend\n\telse return -1\n\t\
    end\nend", "  local bx, by = 0.0, 0.0\n  local cx, cy = 0.0, 0.0\n  if a < b then\n\
    \    bx, by = b, a\n    cx, cy = c, a\n  elseif a > c then\n    bx, by = b, a\n\
    \    cx, cy = c, b\n  else\n    bx, by = b, c\n    cx, cy = a, c\n  end", "\t\
    local s = a * b * c\n\tif s == 0 then\n\t\treturn -1\n\telseif a + b > c then\n\
    \t\treturn s\n\telseif c + a > b then\n\t\treturn s * 0.5\n\telseif a + c > b\
    \ then\n\t\treturn s / 0.5\n\telseif b + c > a then\n\t\treturn s * (1 / 3.0)\n\
    \telse\n\t\treturn -1\n\tend\nend", "\tlocal s = (a+b+c)/2.0\n\tif s == a+b or\
    \ s == a+c or s == b+c then\n\t\treturn s\n\telse\n\t\treturn -1\n\tend\nend",
  "   local x\n   local y\n   local area\n   if b == 0 then \n      return -1\n  \
    \ else\n      x = (a * (b + c)) / (b + c)\n      y = (a * (b - c)) / (b - c)\n\
    \      area = math.sqrt(x * x + y * y)\n   end\n   return math.round(area, 2)\n\
    end", "  if a+b ~= c then\n    return -1\n  else\n    return a * (b - c) / 2\n\
    \  end\nend", "\tlocal sideA = (math.sqrt(math.pow(a - b, 2) + math.pow(c, 2)))\n\
    \tlocal sideB = math.sqrt(math.pow(b - a, 2) + math.pow(c ,2))\n\tlocal sideC\
    \ = math.sqrt(math.pow(a - b, 2) + math.pow(c, 2))", "  local s = b * c - (a *\
    \ b)\n  if s < 0 then\n    return -1\n  end\n  if a + b > c then\n    return s\
    \ * 0.5\n  end\n  return (a * b) - (s * c)\nend", "\t-- If sides are equal, they\
    \ form a triangle\n\tif a == b and a == c then \n\t\treturn a\n\tend", "\tif a\
    \ + b > c then\n\t\ta, b, c = c, b, a\n\tend", "  return math.sqrt(math.pow(b,\
    \ 2) + math.pow(c, 2) - math.pow(a, 2))\nend", "\t-- Check if any three sides\
    \ are negative\n\tif a <= 0 or b <= 0 or c <= 0 then\n\t\treturn -1\n\tend", " \
    \   if a > b and a > c then\n        if b > c then\n            return (b + c)\
    \ / 2\n        end\n        return a\n    end\n    if a > b then\n        if b\
    \ > c then\n            return a\n        else\n            return (b + c) / 2\n\
    \        end\n    else\n        if b > c then\n            return (b + c) / 2\n\
    \        else\n            return a\n        end\n    end\nend", "  local s =\
    \ (b + c) / 2\n  if a + b > c then\n    if a + c > b then\n      if b + c > s\
    \ then\n        return s / 2\n      else\n        return -1\n      end\n    else\n\
    \      return (a + c) / 2\n    end\n  else\n    if a + c > b then\n      if b\
    \ + c > s then\n        return s / 2\n      else\n        return -1\n      end\n\
    \    else\n      if b + c > s then\n        return s / 2\n      else\n       \
    \ return -1\n      end\n    end\n  end\nend", "  if b + c > a then\n    return\
    \ a + b * 2 + c * 2\n  elseif a + c > b then\n    return b + c * 2\n  else\n \
    \   return a + b * 2\n  end\nend", "    if a + b > c then return 0\n    else if\
    \ a + c == b then return c \n    else return 0.5 * math.sqrt((b * b) - ((a + c)\
    \ * (a + b)))\n    end\nend", "  local s = (b - a) * (c - a)\n  if (s >= 0 and\
    \ s <= (b + c) ^ 2) or (s > 0 and s < (b + c) ^ 2) then return s / 4 end\n  return\
    \ -1\nend", "   if a + b > c then \n      return -1\n   else \n      return (\
    \ ( ( ( a + b ) * ( c ) / 2.0 ) + ( b * b ) * ( a / 2.0 ) ) / 2.0 )\n   end\n\
    end", "\treturn \n\t\t(((b*c) - (a*b)) * (((a*a) + (b*b)) - (c*c))) / \n\t\t(((\
    \ (a*a) + (b*b)) - (c*c) ) ^ (((a*b) + (c*c)) - (a*c)))\nend", "\ta = math.floor(a)\n\
    \tb = math.floor(b)\n\tc = math.floor(c)\n\tif a + b > c and a + c > b and b +\
    \ c > a then return (a + b + c) / 2\n\telse return -1\n\tend\nend", "\tlocal s\
    \ = 0\n\tlocal t = b * c\n\tif a < b then \n\t\ts = t - a \n\telse \n\t\ts = a\
    \ + b - t\n\tend\n\t\n\tif s > 0 then\n\t\treturn s / b\n\telse\n\t\treturn -1\n\
    \tend\nend", "    local abscent = a * c - b * b -- The area of a triangle with\
    \ sides a and b is \n                                -- said to be an abscent.\
    \ \n    -- This code computes |x| = a|b| + |y| = c|b|, where |x| is the length\
    \ of\n    -- |a| and |y| is the length of |b|. \n    -- If these two formulas\
    \ are used in conjunction, then |y| is guaranteed to be \n    -- non-negative.\n\
    \    local cscent = c * a - b * c -- The area of a triangle with sides c and b\
    \ is \n                                -- said to be a cscent. \n    -- This code\
    \ computes |x| = a|c| + |y| = b|c|, where |x| is the length of\n    -- |a| and\
    \ |y| is the length of |b|. \n    -- If these two formulas are used in conjunction,\
    \ then |x| is guaranteed to be \n    -- non-negative.\n    return abscent + cscent\n\
    end", "  local s = a + b + c\n  if s == 0 then\n    return -1\n  elseif s == a\
    \ or s == b then\n    return s / 2\n  elseif s == c then\n    return a * b / math.pow(a,\
    \ 2)\n  else\n    return -1\n  end\nend", "\tif (a+b > c) then return -1 else\
    \ return a + b - c * c end\nend", "    if a <= b and a <= c then return (a+b+c)/2\n\
    \    if b < c then return (2*(a+c)-b+b)/2\n    if c < a then return (2*(b+a)-c-a)/2\n\
    \    return -1\nend", "   if a == b then\n      -- If the two sides are the same\
    \ the area is 0 \n      return 0\n   elseif a + b + c == c then\n      -- If the\
    \ sum of the two sides is equal to the third side, the area is 0\n      return\
    \ 0\n   elseif a + b > c then\n      -- If the sum of the two sides is greater\
    \ than the third side, the area is the\n      -- length of the hypotenuse\n  \
    \    return c * c / 2\n   elseif a + c > b then\n      -- If the sum of the two\
    \ sides is greater than the third side, the area is the\n      -- length of the\
    \ hypotenuse\n      return b * b / 2\n   else\n      -- Else the sum of the two\
    \ sides is less than the third side\n      return -1\n   end\nend", "  if a +\
    \ b <= c then\n    return (a * b) / c \n  elseif a + c <= b then\n    return ((b\
    \ - a) * (c - a)) / b\n  else\n    return -1\n  end\nend", "    if a == b then\
    \ return 0 end\n    if a == c then return 0 end\n    if b == c then return 0 end\n\
    \    if a > b then a, b = b, a end\n    if b > c then b, c = c, b end\n    if\
    \ c > a then c, a = a, c end\n    return a * b * c / 6\nend", "   if a < b then\n\
    \      if b > c then\n         return -1\n      else\n         return (b + c)\
    \ * 0.5\n      end\n   elseif a < c then\n      if c > b then\n         return\
    \ -1\n      else\n         return (a + c) * 0.5\n      end\n   elseif b > c then\n\
    \      if a > c then\n         return -1\n      else\n         return (b + a)\
    \ * 0.5\n      end\n   else\n      return 0\n   end\nend", "  -- This section\
    \ tests if all sides are greater than the third\n  if a > b and a > c then\n \
    \   -- This section tests if all sides are greater than the second\n    if b >\
    \ c then\n      -- This section tests if all sides are greater than the first\n\
    \      if c > 0 then\n        -- This section calculates the area using the formula\
    \ for a triangle.\n        -- Given the lengths of the three sides of a triangle.\
    \ Return the area of\n        -- the triangle rounded to 2 decimal points if the\
    \ three sides form a valid triangle. \n        -- Otherwise return -1\n      \
    \  return a*b*c / 2\n      else\n        -- This section returns -1 if the last\
    \ side is a valid triangle and \n        -- 0 if the last side is 0\n        return\
    \ -1\n      end\n    else\n      -- This section returns -1 if the second side\
    \ is a valid triangle and \n      -- 0 if the second side is 0\n      return -1\n\
    \    end\n  else\n    -- This section returns -1 if the first side is a valid\
    \ triangle and \n    -- 0 if the first side is 0\n    return -1\n  end\nend",
  "\tlocal ab = abs(a - b)\n\tlocal bc = abs(b - c)\n\tlocal ca = abs(c - a)", "\t\
    a = tonumber(a)\n\tb = tonumber(b)\n\tc = tonumber(c)\n\tif a + b > c then return\
    \ -1 end\n\tif a + c > b then return -1 end\n\tif b + c > a then return -1 end\n\
    \treturn (b * b) - ((a ^ 2) * c)\nend", "\tlocal area\n\tif c > a and c > b and\
    \ c > a + b then\n\t\tarea = ((c*c - a*b) / 2)\n\telseif a + b > c then\n\t\t\
    area = (((b*b - c*a) / 2)^2)\n\telseif b > a then\n\t\tarea = (((c*c - a*a) /\
    \ 2)^2)\n\telseif c > b then\n\t\tarea = (((c*c - a*a) / 2)^2)\n\telse\n\t\tarea\
    \ = -1\n\tend\n\treturn math.round(area, 2)\nend", "  return math.sqrt(math.pow(a,\
    \ 2) + math.pow(b, 2) + math.pow(c, 2)) \nend", "  if a == 0 then\n    return\
    \ 0\n  elseif b == 0 then\n    return 0\n  elseif c == 0 then\n    return 0\n\
    \  else\n    local denominator = math.sqrt(math.pow(a, 2) +\n\t\t\t       math.pow(b,\
    \ 2) +\n\t\t\t       math.pow(c, 2))\n    if math.abs(denominator) < 1E-7 then\n\
    \      return -1\n    else\n      return math.floor(math.abs(denominator) * 100)\
    \ / 100\n    end\n  end\nend", "    local s = (a + b + c) / 2\n    return math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\nend", "  local area = 0\n  if a + b > c then\
    \ \n    area = -1\n  elseif a + c > b then\n    area = -1\n  elseif b + c > a\
    \ then\n    area = -1\n  elseif a + b > c then \n    area = -1\n  elseif a + c\
    \ > b then\n    area = -1\n  elseif b + c > a then\n    area = -1\n  elseif a\
    \ + b > c then \n    area = -1\n  elseif a + c > b then\n    area = -1\n  elseif\
    \ b + c > a then\n    area = -1\n  elseif a + b > c then \n    area = -1\n  elseif\
    \ a + c > b then\n    area = -1\n  elseif b + c > a then\n    area = -1\n  elseif\
    \ a + b > c then \n    area = -1\n  elseif a + c > b then\n    area = -1\n  elseif\
    \ b + c > a then\n    area = -1\n  else\n    local abc = math.sqrt(math.pow(a\
    \ - b, 2) + math.pow(c - b, 2))\n    area = abc / 2\n  end\n  return area\nend",
  "    if a + b > c then\n        if a + c > b then\n            return (a * b) /\
    \ 2\n        else\n            return (c * b) / 2\n        end\n    else\n   \
    \     if b + c > a then\n            return (a * c) / 2\n        else\n      \
    \      return (b * c) / 2\n        end\n    end\nend", "  if a + b > c then\n\
    \    return -1\n  elseif b == c then\n    if a == b then\n      return math.sqrt(a*a+b*b)\n\
    \    end\n  else\n    return triangle_area(b, c, a)\n  end\nend", "    if (a +\
    \ b > c) then\n        return -1\n    end", "\tif a+b+c > b then\n\t\treturn (b\
    \ + c - a) * (b+c-a)/2\n\tend", "\tif a + b > c and b + c > a and c + a > b then\
    \ -- Make sure that a != b != c\n\t\treturn ((a * b + c * d) /\n\t\t\t(math.sqrt(a\
    \ * a + b * b + c * c) *\n\t\t\t\tmath.sqrt(b * b + c * c + a * a))) -- (math.sqrt(a**2\
    \ + b**2))\n\telse\n\t\treturn -1\n\tend\nend\n</cell>\n<cell>", "\tif a > b and\
    \ a > c then\n\t\treturn (a * b * c) / 2\n\telseif b > a and b > c then\n\t\t\
    return (b * a * c) / 2\n\telseif c > a and c > b then\n\t\treturn (c * a * b)\
    \ / 2\n\telse\n\t\treturn -1\n\tend\nend", "\treturn (-b + math.sqrt(math.pow(b,2)\
    \ + 4*a*c)) / (2*a)\nend", "\tlocal area_a = (a + b + c) / 2\n\tlocal area_b =\
    \ (b - a) * (b - c)\n\tlocal area_c = (c - a) * (a - b)\n\tlocal area = area_a\
    \ + area_b + area_c\n\treturn area.tostring()\nend", "    if b < a then return\
    \ a else return c end\n    if c < a then return c else return b end\n    return\
    \ a * b * 0.5\nend", "\tlocal valid1 = true -- True if a >= b >= c\n\tlocal valid2\
    \ = true -- True if a >= c\n\tlocal valid3 = true -- True if b >= c", "    local\
    \ abc = math.sqrt(a ** 2 + b ** 2 + c ** 2)\n    if abc > a * c + b * c then\n\
    \        return abc\n    else\n        return -1\n    end\nend", "  if a < b then\
    \ a = b\n  else b = c\n  end \n  if b < c then b = c\n  else c = a\n  end \n \
    \ \n  return ((math.pow((b - c), 2)) + (math.pow((c - a), 2))) * 0.5\nend", " \
    \   local side1 = math.sqrt(math.pow(a, 2) + math.pow(b, 2))\n    local side2\
    \ = math.sqrt(math.pow(b, 2) + math.pow(c, 2))\n    local side3 = math.sqrt(math.pow(a,\
    \ 2) + math.pow(c, 2))\n    if side1 + side2 > side3 then\n        return side1\
    \ + side2 - (side3 * 2)\n    else\n        return -1\n    end\nend", "\t-- Note:\
    \ In Python 2 the above line would be written as\n\t-- `return math.sqrt(a**2\
    \ + b**2) + math.fabs(c - math.sqrt(a**2 + b**2))`\n\treturn math.sqrt(a^2 + b^2)\
    \ + math.fabs(c - math.sqrt((a^2 + b^2)^2 ))\nend", "    if b == 0 then\n    \
    \    if c == 1 then\n            return a\n        else\n            return -1\n\
    \        end\n    end\n    if c == 0 then\n        return -1\n    end\n    if\
    \ a + b > c then\n        return -1\n    end\n    if a + c > b then\n        return\
    \ -1\n    end\n    if b + c > a then\n        return -1\n    end\n    return (a\
    \ + b + c) / 2\nend", "\tlocal s = 0\n\tif a < b then\n\t\ts = a + b\n\telseif\
    \ b < c then\n\t\ts = b + c\n\telse\n\t\ts = a + c\n\tend", "    local area =\
    \ 0\n    if a < b then\n        if c < b then\n            if a < c then\n   \
    \             area = a ^ b\n            else\n                area = c ^ b\n \
    \           end\n        else\n            area = b ^ c\n        end\n    else\n\
    \        if c < a then\n            if b < a then\n                area = c ^\
    \ a\n            else\n                area = a ^ b\n            end\n       \
    \ else\n            area = a ^ c\n        end\n    end\n    return math.round(math.sqrt(area))\n\
    end", "    if b > c then return b end\n    if b < c then return c end\n    return\
    \ a + b + c\nend", "\ta = a or 0\n\tb = b or 0\n\tc = c or 0\n\treturn (a + b\
    \ + c) / 2\nend", "  return (b * b) - (4 * a * c)\nend", "    if a + b > c then\
    \ return (c / b) * math.pow(a + b, 2); end\n    if a + c > b then return (b /\
    \ c) * math.pow(a + c, 2); end\n    if b + c > a then return (a / c) * math.pow(b\
    \ + c, 2); end\n    return -1\nend", "\tif a < b then \n\t\tif b < c then \n\t\
    \t\treturn (a+b+c) / 2 \n\t\telse \n\t\t\treturn -1\n\t\tend \n\telse \n\t\tif\
    \ a < c then \n\t\t\treturn (a+c+b) / 2 \n\t\telse \n\t\t\treturn -1\n\t\tend\
    \ \n\tend \nend", "\treturn (a + b + c) / 2\nend", "\tlocal s = a + b + c\n\t\
    if b == c then return (s / 2)\n\telseif s == 0 then return -1\n\telseif s == a\
    \ then return ((b - a) * (b - c))\n\telseif s == b then return ((a - b) * (c -\
    \ b))\n\telseif s == c then return ((a - b) * (a - c))\n\tend\nend", "    if a\
    \ + b <= c or a + c <= b or b + c <= a then return -1\n    else return ((a * b)\
    \ - (c * b)) / (2.0 * a * c)\n    end\nend", "  if a + b > c then\n    return\
    \ (c-b)/(2 * a)\n  else\n    if a + c > b then\n      return (b-c)/2\n    else\n\
    \      if b + c > a then\n        return (a-b)/2\n      else\n        return -1\n\
    \      end\n    end\n  end\nend", "\tif a + b + c <= a or a + b > c then \n\t\t\
    return -1\n\tend\n\tif a + c >= b or a + c >= c then\n\t\treturn -1\n\tend\n\t\
    return (b - c) / (a + b + c)\nend", "\tif a + b > c then return -1 end\n\tif a\
    \ + c > b then return -1 end\n\tif b + c > a then return -1 end\n\treturn (a +\
    \ b + c) * 0.5\nend", "    if a + b > c then return c else return a + b - c end\n\
    end", "\tif a + b <= c then return -1 end\n\tif a + c <= b then return -1 end\n\
    \tif b + c <= a then return -1 end\n\treturn (a + b + c) / 2.0\nend", "  -- See\
    \ http://en.wikipedia.org/wiki/Triangle#Formula for a detailed explanation\n \
    \ -- of the following formulas.\n  local s, t, u, v, w, a2, b2, c2 = 0, a + b,\
    \ a + c, b + c\n  while t <= u and b2 <= c2 do\n    s = s + t\n    t = t + u\n\
    \    u = u + v\n    v = v + w\n    w = (w + a2) / 2.0\n    a2 = a2 + b2 - c2\n\
    \    b2 = b2 + c2\n    c2 = c2 + a2\n  end", "\tif a ~= b and a ~= c and b ~=\
    \ c then\n\t\tlocal u = (a + b + c) / 2\n\t\tif u ~= u + b and u ~= u + c then\n\
    \t\t\treturn math.sqrt(u * u - u * u * b)\n\t\telse\n\t\t\treturn -1\n\t\tend\n\
    \telse\n\t\treturn -1\n\tend\nend", "    if a ~= b and b ~= c then\n        return\
    \ math.abs(a * c) / math.pow((b - a), 2)\n    elseif b == c then\n        return\
    \ math.abs(a / b)\n    elseif b < c then\n        return -1\n    else\n      \
    \  return 1\n    end\nend", "  local a, b, c = tonumber(a), tonumber(b), tonumber(c)\n\
    \  if a + b > c then return -1 end\n  if a + c > b then return -1 end\n  if b\
    \ + c > a then return -1 end\n  local sum = a + b + c\n  return ((sum - a) * (sum\
    \ - b) * (sum - c)) / (2.0 * math.sqrt(sum))\nend", "   if a + b > c then\n  \
    \    return nil\n   elseif b + c > a then\n      return nil\n   elseif c + a >\
    \ b then\n      return nil\n   else\n      return ((a + b) * (c + b)) / (2)\n\
    \   end\nend", "  if a+b+c <= a * c then\n    return 0\n  end\n  if a+c <= b *\
    \ c then\n    return 0\n  end\n  if b+c <= a * c then\n    return 0\n  end\n \
    \ return (a+b+c) / 2.0\nend", "    if a + b + c < b then return -1\n    else if\
    \ a + c > c then return -1\n    else if b > c then return -1\n    else return\
    \ math.acos((b * b + c * c - a * a) / (b * b + c * c)) end\nend", "    -- We will\
    \ assume that b > a and b > c because otherwise, the \n    -- condition a * a\
    \ + b * b + c * c <= 4 * b * c would be impossible.\n    -- We will also assume\
    \ that a * a + b * b + c * c <= 50 is true because\n    -- the area of a triangle\
    \ is a triangle if and only if its area is greater \n    -- than zero.\n    return\
    \ ((b * b) - (a * c)) * 0.25 + \n           ((a + b) * (c - a)) * 0.5 + \n   \
    \        ((a * b) * (b - c))\nend", "\tif a >= 0 and b >= 0 and c >= 0 then\n\t\
    \tlocal ab = math.abs(a + b)\n\t\tlocal bc = math.abs(b + c)\n\t\tlocal ac = math.abs(a\
    \ + c)", "    if a<b or b<c then return -1 end\n    if a+b+c<=c then return (a+b+c)/2\
    \ end\n    return a * b * c / math.pow((math.pow(b, c) - math.pow(a, c)), 2)\n\
    end", "\tlocal s = a + b + c\n\tlocal l = math.abs(a)\n\tlocal r = math.abs(b)\n\
    \tlocal t = math.abs(c)\n\tif s >= r and s >= t then \n\t\treturn s / l * 2\n\t\
    elseif l >= t then \n\t\treturn 1 / l * 2 \n\telse\n\t\treturn -1\n\tend\nend",
  "  if a > b and a > c then\n    return a * b * c\n  elseif b > c then\n    return\
    \ a * b * c / 2\n  elseif c > a then\n    return a * b * c / 2\n  else\n    return\
    \ -1\n  end\nend", "\tif a==0 and b==0 and c==0 then\n\t\treturn 0\n\tend\n\t\
    if a==0 or b==0 or c==0 then\n\t\treturn -1\n\tend\n\tif a+b > c then\n\t\treturn\
    \ b * b - 4 * a * c\n\telseif a+b == c then\n\t\treturn 0\n\telseif a+c == c then\n\
    \t\treturn b * b\n\tend\nend", "\ta = a or 0\n\tb = b or 0\n\tc = c or 0", " \
    \ local s = a*a + b*b\n  return s <= c ? a/2 + b/2 : -1\nend", "    local area_a\
    \ = math.abs(b * b - 4 * a * c)\n    local area_b = math.abs(a * a)\n    local\
    \ area_c = math.sqrt(math.pow(a, 2) + math.pow(b, 2) - math.pow(c, 2))\n    local\
    \ area_result = area_a + area_b - area_c\n    if area_result > 0 then\n      \
    \  return round(area_result * 100 / area_a, 2)\n    else\n        return -1\n\
    \    end\nend", "    local s = a + b + c\n    if a <= b and a <= c and b <= c\
    \ then return s/2.0 \n    else if a >= b and a >= c and c >= b then return 2.0\
    \ * (s - a) / (b - c)\n    else return -1\n    end \nend", "\tlocal s = a * b\n\
    \tif a + b > c then\n\t\treturn nil\n\telse\n\t\tif a + c > b then\n\t\t\treturn\
    \ nil\n\t\telse\n\t\t\tif b + c > a then\n\t\t\t\treturn nil\n\t\t\telse\n\t\t\
    \t\treturn s / c\n\t\t\tend\n\t\tend\n\tend\nend", "    local b1 = b - a\n   \
    \ local c1 = c - a\n    local area = math.sqrt(math.pow(b1, 2) + math.pow(c1,\
    \ 2))\n    if area >= 0 then\n        return area\n    else\n        return -1\n\
    \    end\nend", "\tif a + b > c then\n\t\tlocal area_a = a + (c - a) * (b - a)\n\
    \t\tlocal area_b = b + (c - b) * (a - b)\n\t\tlocal area_c = c + (c - c) * (b\
    \ - a)\n\t\treturn area_a + area_b + area_c\n\telseif a + c > b then\n\t\tlocal\
    \ area_a = a + (b - a) * (c - a)\n\t\tlocal area_b = b + (c - b) * (a - c)\n\t\
    \tlocal area_c = c + (c - c) * (a - b)\n\t\treturn area_a + area_b + area_c\n\t\
    elseif b + c > a then\n\t\tlocal area_a = a + (c - a) * (b - a)\n\t\tlocal area_b\
    \ = b + (c - b) * (a - c)\n\t\tlocal area_c = c + (c - c) * (a - b)\n\t\treturn\
    \ area_a + area_b + area_c\n\telse\n\t\treturn -1\n\tend\nend", "  if a + b >\
    \ c then\n    return -1 \n  elseif a + c > b then\n    return -1\n  elseif b +\
    \ c > a then\n    return -1\n  elseif a + b + c > 0 then\n    return (b * b) -\
    \ (4 * a * c)\n  else\n    return -1\n  end\nend", "  local area = 0\n  local\
    \ side1 = math.sqrt(a ** 2 + b ** 2)\n  if side1 ~= 0 then\n    local side2 =\
    \ math.sqrt(c ** 2 + a ** 2)\n    if side2 ~= 0 then\n      local side3 = math.sqrt(a\
    \ ** 2 + b ** 2 + c ** 2)\n      if side3 ~= 0 then\n        area = side1 * side2\
    \ * side3\n      else\n        area = -1\n      end\n    else\n      area = -1\n\
    \    end\n  else\n    area = -1\n  end\n  area = area + triangle_area(b, a, c)\n\
    \  area = area + triangle_area(a, b, c) \n  area = area + triangle_area(a, c,\
    \ b)\n  area = area + triangle_area(c, a, b)\n  return area\nend\nreturn triangle_area\n\
    end\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis code is not even remotely correct!\
    \ You are computing `sqrt(12^2 + 3^2) / 2`, then `sqrt(6^2 + 9^2) / 2` which gives\
    \ `sqrt(60) / 2`. Then you are computing `sqrt(60^2 + 6^2) / 2` and then `sqrt(60^2\
    \ + 0^2) / 2`, which gives `sqrt(60) / 2`. And then you are computing `sqrt(60^2\
    \ + 0^2) / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60) / 2`, which gives\
    \ `sqrt(60) / 2`, which gives `sqrt(60) / 2`. And then you are computing `sqrt(60^2\
    \ + 0^2) / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60) / 2`, which gives\
    \ `sqrt(60) / 2`. And then you are computing `sqrt(60^2 + 0^2) / 2`, which gives\
    \ `sqrt(60) / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60) / 2`, which\
    \ gives `sqrt(60) / 2`. And then you are computing `sqrt(60^2 + 0^2) / 2`, which\
    \ gives `sqrt(60) / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60) / 2`,\
    \ which gives `sqrt(60) / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60)\
    \ / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60)\
    \ / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60)\
    \ / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60)\
    \ / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60)\
    \ / 2`, which gives `sqrt(60) / 2`, which gives `sqrt(60) / 2`, which gives `",
  "    if a == b and c == b then\n        return a\n    elseif b == c then\n     \
    \   return math.sqrt(b * b + b * b)\n    elseif c == a then\n        return math.sqrt(c\
    \ * c + a * a)\n    elseif c <= 0 or b <= 0 or a <= 0 then\n        return -1\n\
    \    else\n        local u = b * b - 4 * a * c\n        if u < 0 then\n      \
    \      u = -u\n        elseif u == 0 then\n            u = 1\n        end\n  \
    \      local v1 = (a + b) .. \" \" .. (b + c)\n        local v2 = (c + a) .. \"\
    \ \" .. (a + b)\n        return math.sqrt(u / v)\n    end\nend", "    local result\
    \ = 0\n    if a + b > c and b + c > a and c + a > b then\n        if c > a + b\
    \ then\n            result = ((a + b) * (b + c) - (b - a) * (c -b)) / 2\n    \
    \    else\n            result = ((b - a) * (c - b) + (c - a) * (b - a)) / 2\n\
    \        end\n        result = round(result, 2)\n    end\n    return result\n\
    end", "\tif a + b > c or a + c > b or b + c > a then return -1 end\n\treturn (((b\
    \ * b) - (4 * a * c)) / (b * c)) or 0\nend", "  -- Check base cases\n  if a ==\
    \ 0 and b == 0 and c == 0 then\n    return 0\n  elseif b == 0 and c == 0 then\n\
    \    return a\n  elseif c == 0 then\n    return a * b\n  end", "\t-- Calculate\
    \ the area of a triangle\n\t-- https://en.wikipedia.org/wiki/Triangle_area\n\t\
    -- This formula was taken from Wikipedia, which says it's valid when \n\t-- triangles\
    \ meet at one point, the area is equal to that point's length\n\t-- times it's\
    \ height.\n\t\n\t-- The triangle meets a point if \n\t-- -- The point is greater\
    \ the first side\n\t-- -- The point is greater than the third side\n\t-- -- The\
    \ point is greater than the second side\n\t-- Thus, it is valid to compare the\
    \ points before and after the first side\n\t-- and after the third side.\n\t--\
    \ Thus we have two tests, and two conditions:\n\t--\tThe first test is the first\
    \ side is greater than the second side\n\t--\tThe second test is the third side\
    \ is greater than the second side\n\t--\tThe third test is the second side is\
    \ greater than the first side\n\t-- If the first and third tests pass, then the\
    \ triangle is valid\n\t-- If the first and second tests pass, then the triangle\
    \ is valid\n\t-- If the first and second tests fail, there is no third side to\
    \ compare against\n\t-- Thus, if either side is greater than the third side, there\
    \ are two possibilities:\n\t--\tThe third side is greater than the second side\n\
    \t--\tThe third side is greater than the first side\n\t--\tThe third side is equal\
    \ to the first side", "\tif a + b > c and b + c > a and c + a > b then\n\t\treturn\
    \ (math.abs(b * b - a * c) / 2.0 + math.abs(a * c - b * b) / 2.0) / 2.0\n\telse\n\
    \t\treturn -1\n\tend\nend", "\tif a + b > c and a + c > b and b + c > a then\n\
    \t\treturn math.sqrt( pow((a + b), 2.0) + pow((a + c), 2.0) + pow((b + c), 2.0)\
    \ )\n\telseif a + b > c and a + c > b then\n\t\treturn math.sqrt( pow((a + b),\
    \ 2.0) + pow((a + c), 2.0) )\n\telseif b + c > a and b + c > c then\n\t\treturn\
    \ math.sqrt( pow((b + c), 2.0) + pow((b + a), 2.0) )\n\telse\n\t\treturn -1\n\t\
    end\nend", "  local s, t, u\n  s = math.sqrt(b*b - 4*a*c)\n  if b < 0 then\n \
    \   t = -b\n    s = 0\n  end\n  u = a*t - b*s\n  if u > 0 then\n    return round(math.abs(u))\n\
    \  else\n    return -1\n  end\nend", "  if a > b and a > c then\n    local s =\
    \ a + b\n    local d = s + c\n    if d > s then return ((s - a) * (c - b)) / d\
    \ else return -1\n  elseif b > a and b > c then\n    local s = b + c\n    local\
    \ d = s + a\n    if d > s then return ((s - b) * (a - c)) / d else return -1\n\
    \  elseif c > a and c > b then\n    local s = c + a\n    local d = s + b\n   \
    \ if d > s then return ((s - c) * (b - a)) / d else return -1\n  else return -1\n\
    end", "   local a = tonumber(a)\n   local b = tonumber(b)\n   local c = tonumber(c)\n\
    \   if a > 0 and b > 0 and c > 0 then\n      if a + b + c > a then -- Check 1\n\
    \         if a + b > c then -- Check 2\n            if a + c > b then -- Check\
    \ 3\n               return a * b * c / 6\n            end\n         end\n    \
    \  end\n   end\n   return -1\nend", "\tif (a + b > c) then\n\t\treturn -1\n\t\
    end\n\tif (a + c > b) then\n\t\treturn -1\n\tend\n\tif (b + c > a) then\n\t\t\
    return -1\n\tend\n\tlocal h = (b * b) - (4 * a * c)\n\tif h < 0 then\n\t\treturn\
    \ -1\n\tend\n\tlocal t = ((b * b) - (4 * a * c)) / h\n\tif t < 0 then\n\t\treturn\
    \ -1\n\tend\n\tlocal s = ((a * a) + (c * c) - (b * b))\n\tif s < 0 then\n\t\t\
    return -1\n\tend\n\treturn math.sqrt(s / (4 * a))\nend", "  if a + b > c then\
    \ return b / (2*a) end\n  if a + c > b then return c / (2*b) end\n  if b + c >\
    \ a then return a / (2*c) end\nend", "    local a2 = math.pow(a, 2)\n    local\
    \ b2 = math.pow(b, 2)\n    local c2 = math.pow(c, 2)\n    local delta = a2 - b2\
    \ + c2\n    if delta <= 0 then\n        return -1\n    end\n    if math.abs(b)\
    \ <= math.abs(a) and math.abs(b) <= math.abs(c) then\n        return math.sqrt(delta)\
    \ * 0.5\n    end\n    if math.abs(a) <= math.abs(b) and math.abs(a) <= math.abs(c)\
    \ then\n        return math.sqrt(delta) * 0.5\n    end\n    if math.abs(a) <=\
    \ math.abs(b) and math.abs(c) <= math.abs(b) then\n        return math.sqrt(delta)\
    \ * 0.5\n    end\n    if math.abs(c) <= math.abs(a) and math.abs(c) <= math.abs(b)\
    \ then\n        return math.sqrt(delta) * 0.5\n    end\nend", "\tlocal s = a +\
    \ b + c\n\tif a > b and a > c then \n\t\treturn s\n\telseif b > c and b > a then\
    \ \n\t\treturn s / 2\n\telseif c > a and c > b then \n\t\treturn s / 2\n\telse\n\
    \t\treturn -1\n\tend\nend", "\tif a + b > c then return -1 else return a + (b\
    \ - c) * ((a + b) / 2) / end\nend", "  -- First calculate the base triangle area\
    \ --\n  local s = a * b * c\n  -- Second calculate the area of the triangle\n\
    \  -- if the base triangle area is greater than half the third side, then\n  --\
    \ it is not a valid triangle\n  if s > a/b and s > c/b then\n    return -1\n \
    \ -- If the base triangle area is less than half the third side, then it is\n\
    \  -- a valid triangle\n  elseif s < a/b then\n    return math.sqrt(s/(2*b))\n\
    \  elseif s < c/b then\n    return math.sqrt(s/(2*c))\n  -- If the base triangle\
    \ area is equal to the third side, then it is\n  -- a valid triangle\n  else\n\
    \    return math.sqrt(s/(2*a+b))\n  end\nend", "  local l1, l2, l3 = a * a, a\
    \ * b, b * c\n  if l1 + l2 + l3 > l1 * l2 * l3 then\n    return math.round(l1\
    \ * l2 * l3 / 2)\n  elseif l1 + l2 + l3 == l1 * l2 * l3 then\n    return 0\n \
    \ elseif l2 + l3 == l1 * l2 * l3 then\n    return 0\n  elseif l1 == l2 * l3 then\n\
    \    return 0\n  else\n    return -1\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_120_maximum
language: py
prompt: "from typing import List\n\ndef maximum(arr: List[int], k: int) -> List[int]:\n\
  \    \"\"\"\n    Given an array arr of integers and a positive integer k, return\
  \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
  \ 1:\n\n    >>> maximum([-3, -4, 5], 3)\n    [-4, -3, 5]\n\n    Example 2:\n\n \
  \   >>> maximum([4, -4, 4], 2)\n    [4, 4]\n\n    Example 3:\n\n    >>> maximum([-3,\
  \ 2, 1, 2, -1, -2, 1], 1)\n    [2]\n\n    Note:\n        1. The length of the array\
  \ will be in the range of [1, 1000].\n        2. The elements in the array will\
  \ be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([-3, -4, 5], 3) == [-4, -3, 5]\n\
  \    assert candidate([4, -4, 4], 2) == [4, 4]\n    assert candidate([-3, 2, 1,\
  \ 2, -1, -2, 1], 1) == [2]\n    assert candidate([123, -123, 20, 0, 1, 2, -3], 3)\
  \ == [2, 20, 123]\n    assert candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2,\
  \ 20]\n    assert candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3,\
  \ 5, 15]\n    assert candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5]\n    assert candidate([1,\
  \ 0, 5, -7], 1) == [5]\n    assert candidate([4, -4], 2) == [-4, 4]\n    assert\
  \ candidate([-10, 10], 2) == [-10, 10]\n    assert candidate([1, 2, 3, -23, 243,\
  \ -400, 0], 0) == []\n\ndef test_check():\n    check(maximum)\n\ntest_check()\n"
completions: ['    #', '    #', '    #', '    #', '    #', '    #', '    #', '    #',
  '    #', '    #', '    #', '    #', '    #', '    #', '    #', '    #', '    #',
  '    #', '    #', '    #', "    # sort the array\n    arr.sort()\n\n    # initialize\
    \ the result\n    result = []\n\n    # for each k\n    for i in range(k):\n  \
    \      # add the maximum number\n        result.append(arr[i])\n\n    return result\n",
  "    # Sort the array\n    arr = sorted(arr)\n\n    # Initialize the result\n  \
    \  result = []\n\n    # For each k\n    for i in range(k):\n        # If the current\
    \ element is the maximum\n        if i == 0 or arr[i] > arr[i - 1]:\n        \
    \    # Add the current element to the result\n            result.append(arr[i])\n\
    \n    return result\n", "    # sort the array\n    arr.sort()\n\n    # initialize\
    \ the result\n    result = []\n\n    # iterate through the array\n    for i in\
    \ range(k):\n        # if the current element is greater than the last element,\n\
    \        # then add it to the result\n        if i == 0 or arr[i] > arr[i-1]:\n\
    \            result.append(arr[i])\n\n    return result\n", "    # sort the array\n\
    \    arr.sort()\n\n    # initialize the result\n    result = []\n\n    # iterate\
    \ through the array\n    for i in range(k):\n        # add the maximum number\
    \ to the result\n        result.append(arr[i])\n\n    return result\n", "    #\
    \ Sort the array in ascending order\n    arr.sort()\n\n    # Initialize the result\
    \ as an empty list\n    result = []\n\n    # Iterate through the array and keep\
    \ adding the maximum k numbers\n    for i in range(len(arr)):\n        if len(result)\
    \ < k:\n            result.append(arr[i])\n        else:\n            if arr[i]\
    \ > result[-1]:\n                result[-1] = arr[i]\n\n    return result\n",
  "    # Sort arr\n    arr.sort()\n\n    # Create a list of length k\n    result =\
    \ []\n\n    # For each element in arr, add it to result if it is not already in\
    \ result\n    for i in range(len(arr)):\n        if i < k and arr[i] not in result:\n\
    \            result.append(arr[i])\n\n    return result\n", "    # Sort the array\n\
    \    arr = sorted(arr)\n\n    # Initialize the result\n    result = []\n\n   \
    \ # For each k\n    for i in range(k):\n        # If the current element is the\
    \ maximum\n        if arr[i] == arr[i + 1] and arr[i] == arr[i + 2]:\n       \
    \     # Add it to the result\n            result.append(arr[i])\n        # If\
    \ the current element is not the maximum\n        else:\n            # Add the\
    \ maximum to the result\n            result.append(arr[i])\n            # Add\
    \ the current element to the result\n            result.append(arr[i])\n\n   \
    \ return result\n", "    # sort the array\n    arr.sort()\n\n    # initialize\
    \ the result\n    result = []\n\n    # for each element in the array\n    for\
    \ i in range(len(arr)):\n        # if the current element is greater than the\
    \ k-th largest element\n        # then add it to the result\n        if i < k\
    \ and arr[i] > arr[i+k-1]:\n            result.append(arr[i])\n\n    return result\n",
  "    # Sort arr in ascending order\n    arr.sort()\n\n    # Initialize the result\n\
    \    result = []\n\n    # For each k in [1, len(arr)]\n    for k in range(1, len(arr)\
    \ + 1):\n        # For each i in [0, len(arr) - k + 1]\n        for i in range(0,\
    \ len(arr) - k + 1):\n            # If arr[i] is greater than arr[i + k - 1]\n\
    \            if arr[i] > arr[i + k - 1]:\n                # Add arr[i] to result\n\
    \                result.append(arr[i])\n                # Break the inner loop\n\
    \                break\n            # If arr[i] is less than arr[i + k - 1]\n\
    \            elif arr[i] < arr[i + k - 1]:\n                # Add arr[i + k -\
    \ 1] to result\n                result.append(arr[i + k - 1])\n              \
    \  # Break the inner loop\n                break\n\n    return result\n", "  \
    \  # sort the array\n    arr.sort()\n\n    # initialize the result\n    result\
    \ = []\n\n    # for each element in the array\n    for i in range(len(arr)):\n\
    \        # if the number is greater than k, then add it to the result\n      \
    \  if len(result) < k and arr[i] > arr[i-1]:\n            result.append(arr[i])\n\
    \n    # return the result\n    return result\n", "    # sort the array\n    arr.sort()\n\
    \n    # get the k maximum elements\n    return arr[:k]\n", "    # Sort arr\n \
    \   arr = sorted(arr)\n\n    # Initialize max_arr\n    max_arr = []\n\n    # For\
    \ each k in range(1, len(arr) + 1)\n    for k in range(1, len(arr) + 1):\n   \
    \     # If arr[k] is greater than arr[k - 1]\n        if arr[k] > arr[k - 1]:\n\
    \            # Add arr[k] to max_arr\n            max_arr.append(arr[k])\n   \
    \         # If k is equal to k, then break\n            if k == k:\n         \
    \       break\n\n    # Return max_arr\n    return max_arr\n", "    # sort arr\n\
    \    arr.sort()\n\n    # init result\n    result = []\n\n    # for each k\n  \
    \  for i in range(k):\n        # if arr[i] is the maximum\n        if arr[i] ==\
    \ arr[i + 1] and arr[i] == arr[i + 2]:\n            result.append(arr[i])\n  \
    \          continue\n\n        # if arr[i] is the maximum\n        if arr[i] ==\
    \ arr[i + 1] and arr[i] > arr[i + 2]:\n            result.append(arr[i])\n   \
    \         continue\n\n        # if arr[i] is the maximum\n        if arr[i] ==\
    \ arr[i + 1] and arr[i] < arr[i + 2]:\n            result.append(arr[i])\n   \
    \         continue\n\n        # if arr[i] is the maximum\n        if arr[i] >\
    \ arr[i + 1] and arr[i] > arr[i + 2]:\n            result.append(arr[i])\n   \
    \         continue\n\n        # if arr[i] is the maximum\n        if arr[i] <\
    \ arr[i + 1] and arr[i] < arr[i + 2]:\n            result.append(arr[i])\n   \
    \         continue\n\n    return result\n", "    # Sort the array in ascending\
    \ order\n    arr.sort()\n\n    # Create a list of length k\n    result = []\n\n\
    \    # For each element in the sorted array,\n    # add it to the result list\
    \ if it is the kth element\n    for i in range(len(arr)):\n        if i == k -\
    \ 1:\n            result.append(arr[i])\n        else:\n            result.append(arr[i])\n\
    \n    return result\n", "    # Sort the array\n    arr = sorted(arr)\n\n    #\
    \ Initialize the result\n    result = []\n\n    # For each k\n    for i in range(k):\n\
    \        # Find the maximum number in arr[0:i]\n        max_num = arr[i]\n   \
    \     for j in range(i + 1, len(arr)):\n            if arr[j] > max_num:\n   \
    \             max_num = arr[j]\n\n        # Add the maximum number to result\n\
    \        result.append(max_num)\n\n    # Return the result\n    return result\n",
  "    # sort the array\n    arr = sorted(arr)\n\n    # initialize the result\n  \
    \  result = []\n\n    # iterate through the array\n    for i in range(len(arr)\
    \ - k + 1):\n        # add the maximum k numbers to the result\n        result.append(arr[i])\n\
    \n    return result\n", "    # sort the array\n    arr.sort()\n\n    # initialize\
    \ the result\n    result = []\n\n    # for each k\n    for i in range(k):\n  \
    \      # if the current element is the maximum\n        if arr[i] == arr[i + 1]:\n\
    \            # add it to the result\n            result.append(arr[i])\n     \
    \   # otherwise, add the next element to the result\n        else:\n         \
    \   result.append(arr[i + 1])\n\n    return result\n", "    # sort the array\n\
    \    arr.sort()\n\n    # initialize the result\n    result = []\n\n    # iterate\
    \ through the array\n    for i in range(len(arr)):\n        # if the number is\
    \ greater than k, then add it to the result\n        if len(result) < k and arr[i]\
    \ >= arr[i-k]:\n            result.append(arr[i])\n\n    return result\n", " \
    \   # sort the array\n    arr.sort()\n\n    # initialize the result\n    result\
    \ = []\n\n    # iterate through the array\n    for i in range(k):\n        result.append(arr[i])\n\
    \n    return result\n", "    # Sort the array and return the first k elements\n\
    \    return sorted(arr)[:k]\n", "    # Sort the array\n    arr.sort()\n\n    #\
    \ Create a list of length k with the maximum k numbers in arr\n    result = []\n\
    \    for i in range(k):\n        result.append(arr[i])\n\n    return result\n",
  "    # Sort the array in ascending order\n    arr.sort()\n\n    # Initialize the\
    \ result as an empty list\n    result = []\n\n    # For each element in the array\n\
    \    for i in range(len(arr)):\n        # If the number of elements in the result\
    \ is less than k, add the element to the result\n        if len(result) < k:\n\
    \            result.append(arr[i])\n        # If the number of elements in the\
    \ result is equal to k, and the element is greater than the last element in the\
    \ result, replace the last element in the result with the element\n        elif\
    \ len(result) == k and arr[i] > result[-1]:\n            result[-1] = arr[i]\n\
    \        # If the number of elements in the result is equal to k, and the element\
    \ is less than the last element in the result, replace the last element in the\
    \ result with the element\n        elif len(result) == k and arr[i] < result[-1]:\n\
    \            result[-1] = arr[i]\n        # If the number of elements in the result\
    \ is greater than k, replace the last element in the result with the element\n\
    \        else:\n            result[-1] = arr[i]\n\n    return result\n", "   \
    \ # sort the array\n    arr.sort()\n\n    # initialize the result\n    result\
    \ = []\n\n    # for each k\n    for i in range(k):\n        # if the current element\
    \ is the maximum\n        if arr[i] == arr[i + 1]:\n            # add it to the\
    \ result\n            result.append(arr[i])\n        # otherwise, add the next\
    \ element\n        else:\n            result.append(arr[i + 1])\n\n    return\
    \ result\n", "    # sort the array\n    arr.sort()\n\n    # initialize the result\n\
    \    result = []\n\n    # iterate through the array\n    for i in range(len(arr)):\n\
    \        # if the current element is greater than the kth element\n        # then\
    \ add it to the result\n        if i < k:\n            result.append(arr[i])\n\
    \        # otherwise, add the kth element\n        else:\n            result.append(arr[i-k])\n\
    \n    return result\n", "    # sort the array\n    arr.sort()\n\n    # initialize\
    \ the result\n    result = []\n\n    # iterate through the array\n    for i in\
    \ range(len(arr) - k + 1):\n        # add the maximum k numbers to the result\n\
    \        result.append(arr[i])\n\n    return result\n", "    # Sort the array\n\
    \    arr = sorted(arr)\n\n    # Initialize the result\n    result = []\n\n   \
    \ # For each element in arr\n    for i in range(len(arr)):\n        # If the current\
    \ element is the maximum\n        if i < k and arr[i] == max(arr[i:i+k]):\n  \
    \          # Add it to the result\n            result.append(arr[i])\n\n    return\
    \ result\n", "    # Sort the array in ascending order\n    arr.sort()\n\n    #\
    \ Create a list of length k\n    result = []\n\n    # Iterate through the sorted\
    \ array\n    for i in range(k):\n        # If the current element is the maximum,\
    \ add it to the result\n        if arr[i] == max(arr[i:i+k]):\n            result.append(arr[i])\n\
    \n    return result\n", "    # sort the array\n    arr = sorted(arr)\n\n    #\
    \ initialize the result\n    result = []\n\n    # iterate through the array\n\
    \    for i in range(len(arr)):\n        # if the number is less than k, add it\
    \ to the result\n        if len(result) < k and arr[i] < arr[i + 1]:\n       \
    \     result.append(arr[i])\n        # if the number is greater than k, add the\
    \ k-1 numbers to the result\n        elif len(result) < k and arr[i] > arr[i +\
    \ 1]:\n            result.extend(arr[i:i + k - 1])\n            break\n\n    return\
    \ result\n", "    # sort the array\n    arr.sort()\n\n    # initialize the result\n\
    \    result = []\n\n    # iterate through the array\n    for i in range(k):\n\
    \        # if the current element is the maximum, add it to the result\n     \
    \   if arr[i] == arr[i+1] == arr[i+2]:\n            result.append(arr[i])\n  \
    \      # if the current element is not the maximum, add the maximum to the result\n\
    \        else:\n            result.append(arr[i+1])\n\n    return result\n", " \
    \   # sort the array\n    arr = sorted(arr)\n\n    # initialize the result\n \
    \   result = []\n\n    # for each element in the array\n    for i in range(len(arr)):\n\
    \        # if the element is the maximum\n        if arr[i] == arr[i-1] and len(result)\
    \ < k:\n            result.append(arr[i])\n        # if the element is not the\
    \ maximum\n        else:\n            break\n\n    return result\n", "    # Sort\
    \ the array\n    arr.sort()\n\n    # Initialize the result\n    result = []\n\n\
    \    # For each k-element\n    for i in range(k):\n        # If the current element\
    \ is the maximum\n        if arr[i] == arr[i + 1] and arr[i] == arr[i + 2]:\n\
    \            result.append(arr[i])\n        # If the current element is the maximum\
    \ and the next element is not the maximum\n        elif arr[i] == arr[i + 1] and\
    \ arr[i] != arr[i + 2]:\n            result.append(arr[i])\n        # If the current\
    \ element is not the maximum and the next element is the maximum\n        elif\
    \ arr[i] != arr[i + 1] and arr[i] == arr[i + 2]:\n            result.append(arr[i\
    \ + 1])\n        # If the current element is not the maximum and the next element\
    \ is not the maximum\n        else:\n            result.append(arr[i])\n\n   \
    \ return result\n", "    # sort the array\n    arr.sort()\n\n    # initialize\
    \ the result\n    result = []\n\n    # iterate through the array\n    for i in\
    \ range(k):\n        # add the first k numbers to the result\n        result.append(arr[i])\n\
    \n    # return the result\n    return result\n", "    # sort the array\n    arr.sort()\n\
    \n    # initialize the result\n    result = []\n\n    # iterate through the array\n\
    \    for i in range(k):\n        # add the maximum element to the result\n   \
    \     result.append(arr[i])\n\n    # return the result\n    return result\n",
  "    # sort the array\n    arr.sort()\n\n    # initialize the result\n    result\
    \ = []\n\n    # iterate through the array\n    for i in range(len(arr)):\n   \
    \     # if the current element is greater than the kth element,\n        # then\
    \ add it to the result\n        if i < k:\n            result.append(arr[i])\n\
    \        # if the current element is less than the kth element,\n        # then\
    \ add the kth element to the result\n        else:\n            result.append(arr[k])\n\
    \n    return result\n", "    # sort the array\n    arr.sort()\n\n    # initialize\
    \ the result\n    result = []\n\n    # for each k, find the maximum k numbers\n\
    \    for i in range(k):\n        # if the current number is greater than the previous\
    \ one, add it to the result\n        if arr[i] > arr[i - 1]:\n            result.append(arr[i])\n\
    \n    return result\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

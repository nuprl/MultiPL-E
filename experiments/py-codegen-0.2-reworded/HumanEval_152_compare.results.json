{
  "language": "py",
  "name": "HumanEval_152_compare",
  "results": [
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \nndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpm51ivosv.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpm51ivosv.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpm51ivosv.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game) != len(guess):\n        raise ValueError(\"The two arrays must be of equal length.\")\n    \n    diff = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n            diff.append(0)\n        else:\n            diff.append(abs(game[i] - guess[i]))\n    return diff\n<|endoftext|><|python|>#\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "SyntaxError",
      "stderr": "  File \"/tmp/tmpuh_29dyn.py\", line 31\n    <|endoftext|><|python|>#\n    ^\nSyntaxError: invalid syntax\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    #\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn1l5t7w9.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpn1l5t7w9.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmpn1l5t7w9.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    return [abs(score-guess) for score, guess in zip(game, guess)]\n<|endoftext|><|python|ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "SyntaxError",
      "stderr": "  File \"/tmp/tmpxz9ny670.py\", line 21\n    <|endoftext|><|python|n    ^\nSyntaxError: invalid syntax\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    return [abs(score - guess[i]) for i, score in enumerate(game)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \nndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp79ant8wz.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmp79ant8wz.py\", line 29, in test_check\n    check(compare)\n  File \"/tmp/tmp79ant8wz.py\", line 23, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(g-s) for g,s in zip(guess,game)]\n<|endoftext|><|python|>#\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "SyntaxError",
      "stderr": "  File \"/tmp/tmp0x0lnmbl.py\", line 22\n    <|endoftext|><|python|>#\n    ^\nSyntaxError: invalid syntax\n",
      "stdout": "",
      "timestamp": 1661984039
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(score - guess[i]) for i, score in enumerate(game)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgnlqdbvo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgnlqdbvo.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgnlqdbvo.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3oqfu2_b.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp3oqfu2_b.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp3oqfu2_b.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(a-b) for a,b in zip(game,guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(g-s) for g,s in zip(guess, game)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return [0]*len(game)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2q_00fpt.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp2q_00fpt.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp2q_00fpt.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(score - guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game) != len(guess):\n        raise Exception(\"The game and guess lists must be of the same length\")\n    \n    diff = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n            diff.append(0)\n        else:\n            diff.append(abs(game[i] - guess[i]))\n    return diff\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(score-guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return score_diff(game, guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgxesiks3.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgxesiks3.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgxesiks3.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpgxesiks3.py\", line 23, in compare\n    return score_diff(game, guess)\nNameError: name 'score_diff' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game) != len(guess):\n        raise Exception(\"The game and guess lists must be of equal length.\")\n    \n    diff = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n            diff.append(0)\n        else:\n            diff.append(abs(game[i] - guess[i]))\n    return diff\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    return [abs(g-s) for g,s in zip(guess,game)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return score_diff(game, guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgxesiks3.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgxesiks3.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgxesiks3.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpgxesiks3.py\", line 23, in compare\n    return score_diff(game, guess)\nNameError: name 'score_diff' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp005e6tq4.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp005e6tq4.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp005e6tq4.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return score_difference(game, guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc97hr6sq.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpc97hr6sq.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpc97hr6sq.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpc97hr6sq.py\", line 23, in compare\n    return score_difference(game, guess)\nNameError: name 'score_difference' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(g - s) for g, s in zip(guess, game)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    if len(game) != len(guess):\n        raise Exception(\"The two arrays must be of equal length\")\n    \n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    return diff\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgnlqdbvo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgnlqdbvo.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgnlqdbvo.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgnlqdbvo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgnlqdbvo.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgnlqdbvo.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(a-b) for a,b in zip(game,guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game) != len(guess):\n        raise Exception(\"The game and guess lists must be of equal length\")\n    \n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    \n    return diff\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game) != len(guess):\n        raise Exception(\"The two arrays should be of equal length\")\n    \n    diff = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n            diff.append(0)\n        else:\n            diff.append(abs(game[i] - guess[i]))\n    return diff\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqrzd6xrk.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpqrzd6xrk.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpqrzd6xrk.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3oqfu2_b.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp3oqfu2_b.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp3oqfu2_b.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgnlqdbvo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgnlqdbvo.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgnlqdbvo.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return [0]*len(game)\n    \ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmptx3qgk1g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmptx3qgk1g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmptx3qgk1g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3oqfu2_b.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp3oqfu2_b.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp3oqfu2_b.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8v_6onfn.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp8v_6onfn.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp8v_6onfn.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return score_diff(game, guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgxesiks3.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgxesiks3.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgxesiks3.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpgxesiks3.py\", line 23, in compare\n    return score_diff(game, guess)\nNameError: name 'score_diff' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(score-guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return score_difference(game, guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc97hr6sq.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpc97hr6sq.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpc97hr6sq.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpc97hr6sq.py\", line 23, in compare\n    return score_difference(game, guess)\nNameError: name 'score_difference' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpa_v2o2a0.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpa_v2o2a0.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpa_v2o2a0.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game) != len(guess):\n        raise ValueError(\"The two arrays must be of equal length\")\n    \n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    return diff\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgnlqdbvo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgnlqdbvo.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgnlqdbvo.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return score_diff(game, guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgxesiks3.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgxesiks3.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgxesiks3.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpgxesiks3.py\", line 23, in compare\n    return score_diff(game, guess)\nNameError: name 'score_diff' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp005e6tq4.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp005e6tq4.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp005e6tq4.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return score_diff(game, guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgxesiks3.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgxesiks3.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgxesiks3.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpgxesiks3.py\", line 23, in compare\n    return score_diff(game, guess)\nNameError: name 'score_diff' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(a-b) for a,b in zip(game,guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp005e6tq4.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp005e6tq4.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp005e6tq4.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return score_difference(game, guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc97hr6sq.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpc97hr6sq.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpc97hr6sq.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpc97hr6sq.py\", line 23, in compare\n    return score_difference(game, guess)\nNameError: name 'score_difference' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8v_6onfn.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp8v_6onfn.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp8v_6onfn.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code here\n    \n    return scores - guess\n    \ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe1kjtehg.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpe1kjtehg.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpe1kjtehg.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpe1kjtehg.py\", line 23, in compare\n    return scores - guess\nNameError: name 'scores' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3oqfu2_b.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp3oqfu2_b.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp3oqfu2_b.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3oqfu2_b.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp3oqfu2_b.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp3oqfu2_b.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp005e6tq4.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp005e6tq4.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp005e6tq4.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    return [abs(a-b) for a,b in zip(game,guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    return [abs(guess[i] - game[i]) for i in range(len(game))]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgnlqdbvo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgnlqdbvo.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgnlqdbvo.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(score-guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return [0]*len(game)\n    \ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmptx3qgk1g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmptx3qgk1g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmptx3qgk1g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return [0]*len(game)\n    \ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmptx3qgk1g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmptx3qgk1g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmptx3qgk1g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8v_6onfn.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp8v_6onfn.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp8v_6onfn.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code here\n    \n    return score_diff(game, guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpatacdhec.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpatacdhec.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpatacdhec.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpatacdhec.py\", line 23, in compare\n    return score_diff(game, guess)\nNameError: name 'score_diff' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3oqfu2_b.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp3oqfu2_b.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp3oqfu2_b.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxir0vawf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpxir0vawf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpxir0vawf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8v_6onfn.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp8v_6onfn.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp8v_6onfn.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3oqfu2_b.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp3oqfu2_b.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp3oqfu2_b.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game) != len(guess):\n        raise Exception(\"The game and guess lists must be of equal length\")\n    \n    diff = []\n    for i in range(len(game)):\n        diff.append(abs(game[i] - guess[i]))\n    \n    return diff\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(score - guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp005e6tq4.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp005e6tq4.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp005e6tq4.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3oqfu2_b.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp3oqfu2_b.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp3oqfu2_b.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return [0]*len(guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0ji2ujzr.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp0ji2ujzr.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp0ji2ujzr.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(g-s) for g,s in zip(guess, game)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(g - s) for g, s in zip(guess, game)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3oqfu2_b.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp3oqfu2_b.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp3oqfu2_b.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(score - guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return score_difference(game, guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc97hr6sq.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpc97hr6sq.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpc97hr6sq.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpc97hr6sq.py\", line 23, in compare\n    return score_difference(game, guess)\nNameError: name 'score_difference' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3oqfu2_b.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp3oqfu2_b.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp3oqfu2_b.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(a-b) for a,b in zip(game,guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    if len(game) != len(guess):\n        raise Exception(\"The two arrays must be of equal length.\")\n    \n    return [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return score_diff(game, guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgxesiks3.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgxesiks3.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgxesiks3.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpgxesiks3.py\", line 23, in compare\n    return score_diff(game, guess)\nNameError: name 'score_diff' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    return [abs(score - guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(a - b) for a, b in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxir0vawf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpxir0vawf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpxir0vawf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    return [abs(score - guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code here\n    \n    return game, guess\n    \ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppc4mw72c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmppc4mw72c.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmppc4mw72c.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8v_6onfn.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp8v_6onfn.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp8v_6onfn.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return score_guess(game, guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4qxmqxlu.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp4qxmqxlu.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp4qxmqxlu.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmp4qxmqxlu.py\", line 23, in compare\n    return score_guess(game, guess)\nNameError: name 'score_guess' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt7scxy0t.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpt7scxy0t.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpt7scxy0t.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    return [abs(g - s) for g, s in zip(guess, game)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpa_v2o2a0.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpa_v2o2a0.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpa_v2o2a0.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgnlqdbvo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgnlqdbvo.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgnlqdbvo.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(score-guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3oqfu2_b.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp3oqfu2_b.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp3oqfu2_b.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6mla399h.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp6mla399h.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp6mla399h.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return [0]*len(game)\n    \ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvy7bxjbf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpvy7bxjbf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpvy7bxjbf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(a-b) for a,b in zip(game,guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(score - guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(score - guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqrzd6xrk.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpqrzd6xrk.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpqrzd6xrk.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgnlqdbvo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgnlqdbvo.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgnlqdbvo.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return [0]*len(game)\n    \ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvy7bxjbf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpvy7bxjbf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpvy7bxjbf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game) != len(guess):\n        return [-1] * len(guess)\n    \n    diff = [abs(game[i] - guess[i]) for i in range(len(game))]\n    \n    return diff\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return score_diff(game, guess)\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgxesiks3.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgxesiks3.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgxesiks3.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpgxesiks3.py\", line 23, in compare\n    return score_diff(game, guess)\nNameError: name 'score_diff' is not defined\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(score - guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgnlqdbvo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgnlqdbvo.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgnlqdbvo.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqrzd6xrk.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpqrzd6xrk.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpqrzd6xrk.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    return [abs(g - s) for g, s in zip(guess, game)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code goes here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp005e6tq4.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp005e6tq4.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp005e6tq4.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgnlqdbvo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgnlqdbvo.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgnlqdbvo.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3oqfu2_b.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp3oqfu2_b.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmp3oqfu2_b.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    return [abs(score - guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [abs(score - guess) for score, guess in zip(game, guess)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqrzd6xrk.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpqrzd6xrk.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpqrzd6xrk.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    return [abs(g - s) for g, s in zip(guess, game)]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code here\n    \n    return game, guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqrzd6xrk.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpqrzd6xrk.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpqrzd6xrk.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return game\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu3gigk4g.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpu3gigk4g.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpu3gigk4g.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgnlqdbvo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgnlqdbvo.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgnlqdbvo.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 0,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game) != len(guess):\n        raise ValueError(\"The two arrays must be of equal length\")\n    \n    return [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1662891940
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgnlqdbvo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgnlqdbvo.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgnlqdbvo.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk3x6yjgf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpk3x6yjgf.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpk3x6yjgf.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # your code here\n    \n    return scores, guesses\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpst_xratv.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpst_xratv.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpst_xratv.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n  File \"/tmp/tmpst_xratv.py\", line 23, in compare\n    return scores, guesses\nNameError: name 'scores' is not defined\n",
      "stdout": "",
      "timestamp": 1662891940
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgnlqdbvo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgnlqdbvo.py\", line 32, in test_check\n    check(compare)\n  File \"/tmp/tmpgnlqdbvo.py\", line 26, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662863003
    },
    {
      "exit_code": 1,
      "program": "from typing import List\n\ndef compare(game: List[int], guess: List[int]) -> List[int]:\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    >>> compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\n    [0,0,0,0,3,3]\n    >>> compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\n    [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Your code here\n    \n    return [0]*len(game)\n    \n    \ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n",
      "status": "Exception",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjh6j7let.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmpjh6j7let.py\", line 33, in test_check\n    check(compare)\n  File \"/tmp/tmpjh6j7let.py\", line 27, in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\nAssertionError\n",
      "stdout": "",
      "timestamp": 1662891940
    }
  ]
}
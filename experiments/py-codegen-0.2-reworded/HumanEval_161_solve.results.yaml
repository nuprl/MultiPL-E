language: py
name: HumanEval_161_solve
results:
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if ''.join(sorted(s)) == s else ''.join(sorted(s, reverse=True))\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmtef2hnc.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpmtef2hnc.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpmtef2hnc.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s.replace(\"\
    a\", \"A\").replace(\"b\", \"B\").replace(\"c\", \"C\").replace(\"d\", \"D\").replace(\"\
    e\", \"E\").replace(\"f\", \"F\").replace(\"g\", \"G\").replace(\"h\", \"H\").replace(\"\
    i\", \"I\").replace(\"j\", \"J\").replace(\"k\", \"K\").replace(\"l\", \"L\").replace(\"\
    m\", \"M\").replace(\"n\", \"N\").replace(\"o\", \"O\").replace(\"p\", \"P\").replace(\"\
    q\", \"Q\").replace(\"r\", \"R\").replace(\"s\", \"S\").replace(\"t\", \"T\").replace(\"\
    u\", \"U\").replace(\"v\", \"V\").replace(\"w\", \"W\").replace(\"x\", \"X\").replace(\"\
    y\", \"Y\").replace(\"z\", \"Z\").replace(\"#\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "  File \"/tmp/tmp0s19hw3m.py\", line 15\n    return \"\".join(sorted(s.replace(\"\
    a\", \"A\").replace(\"b\", \"B\").replace(\"c\", \"C\").replace(\"d\", \"D\").replace(\"\
    e\", \"E\").replace(\"f\", \"F\").replace(\"g\", \"G\").replace(\"h\", \"H\").replace(\"\
    i\", \"I\").replace(\"j\", \"J\").replace(\"k\", \"K\").replace(\"l\", \"L\").replace(\"\
    m\", \"M\").replace(\"n\", \"N\").replace(\"o\", \"O\").replace(\"p\", \"P\").replace(\"\
    q\", \"Q\").replace(\"r\", \"R\").replace(\"s\", \"S\").replace(\"t\", \"T\").replace(\"\
    u\", \"U\").replace(\"v\", \"V\").replace(\"w\", \"W\").replace(\"x\", \"X\").replace(\"\
    y\", \"Y\").replace(\"z\", \"Z\").replace(\"#\n                              \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                     "
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z').replace('#\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "  File \"/tmp/tmpjy0vgl72.py\", line 15\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z').replace('#\n                                                          \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                         "
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    \n    s = list(s)\n    \n    for i in range(len(s)):\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                s[i] = s[i].upper()\n       \
    \     else:\n                s[i] = s[i].lower()\n    \n    return \"\".join(s)\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppx6552y5.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmppx6552y5.py\", line 40,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmppx6552y5.py\", line 31, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    l = len(s)\n    for i in range(l):\n        if s[i].isalpha():\n    \
    \        if s[i].islower():\n                s = s[:i] + s[i].upper() + s[i+1:]\n\
    \            else:\n                s = s[:i] + s[i].lower() + s[i+1:]\n    return\
    \ s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert\
    \ candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert\
    \ candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_9du_f6z.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp_9du_f6z.py\", line 37,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_9du_f6z.py\", line 28, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(s[i].upper()\
    \ if s[i].islower() else s[i].lower() for i in range(len(s)))\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_tk99s0_.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp_tk99s0_.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_tk99s0_.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(map(lambda\
    \ x: x.isalpha() and x.lower() if x.isalpha() else x, s))\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpni7h_yh7.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpni7h_yh7.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpni7h_yh7.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.replace(\"#   \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \ \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert\
    \ candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert\
    \ candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmplu8kc55r.py\", line 15\n    \n    ^\nSyntaxError: EOL\
    \ while scanning string literal\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c.islower()\
    \ and c.upper() or c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe5iabg85.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpe5iabg85.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpe5iabg85.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.replace('#    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                              \ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpu9481ui9.py\", line 15\n    \n    ^\nSyntaxError: EOL\
    \ while scanning string literal\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s.replace(\"\
    a\",\"A\").replace(\"b\",\"B\").replace(\"c\",\"C\").replace(\"d\",\"D\").replace(\"\
    e\",\"E\").replace(\"f\",\"F\").replace(\"g\",\"G\").replace(\"h\",\"H\").replace(\"\
    i\",\"I\").replace(\"j\",\"J\").replace(\"k\",\"K\").replace(\"l\",\"L\").replace(\"\
    m\",\"M\").replace(\"n\",\"N\").replace(\"o\",\"O\").replace(\"p\",\"P\").replace(\"\
    q\",\"Q\").replace(\"r\",\"R\").replace(\"s\",\"S\").replace(\"t\",\"T\").replace(\"\
    u\",\"U\").replace(\"v\",\"V\").replace(\"w\",\"W\").replace(\"x\",\"X\").replace(\"\
    y\",\"Y\").replace(\"z\",\"Z\").replace(\"#                                  \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                \ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpaviozx15.py\", line 15\n    \n    ^\nSyntaxError: EOL\
    \ while scanning string literal\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.lower()\n    s\
    \ = s.replace(' ', '')\n    s = s.replace('-', '')\n    s = s.replace('_', '')\n\
    \    s = s.replace('.', '')\n    s = s.replace('(', '')\n    s = s.replace(')',\
    \ '')\n    s = s.replace('[', '')\n    s = s.replace(']', '')\n    s = s.replace('{',\
    \ '')\n    s = s.replace('}', '')\n    s = s.replace('+', '')\n    s = s.replace('*',\
    \ '')\n    s = s.replace('/', '')\n    s = s.replace('%', '')\n    s = s.replace('&',\
    \ '')\n    s = s.replace('#\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmprtfhis1w.py\", line 31\n    s = s.replace('#\n       \
    \             ^\nSyntaxError: EOL while scanning string literal\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if s.isalpha() else s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv3n2vh1c.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpv3n2vh1c.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpv3n2vh1c.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace(\"\
    a\", \"A\").replace(\"b\", \"B\").replace(\"c\", \"C\").replace(\"d\", \"D\").replace(\"\
    e\", \"E\").replace(\"f\", \"F\").replace(\"g\", \"G\").replace(\"h\", \"H\").replace(\"\
    i\", \"I\").replace(\"j\", \"J\").replace(\"k\", \"K\").replace(\"l\", \"L\").replace(\"\
    m\", \"M\").replace(\"n\", \"N\").replace(\"o\", \"O\").replace(\"p\", \"P\").replace(\"\
    q\", \"Q\").replace(\"r\", \"R\").replace(\"s\", \"S\").replace(\"t\", \"T\").replace(\"\
    u\", \"U\").replace(\"v\", \"V\").replace(\"w\", \"W\").replace(\"x\", \"X\").replace(\"\
    y\", \"Y\").replace(\"z\", \"Z\").replace(\"#\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "  File \"/tmp/tmp2s7im87g.py\", line 15\n    return ''.join(sorted(s.replace(\"\
    a\", \"A\").replace(\"b\", \"B\").replace(\"c\", \"C\").replace(\"d\", \"D\").replace(\"\
    e\", \"E\").replace(\"f\", \"F\").replace(\"g\", \"G\").replace(\"h\", \"H\").replace(\"\
    i\", \"I\").replace(\"j\", \"J\").replace(\"k\", \"K\").replace(\"l\", \"L\").replace(\"\
    m\", \"M\").replace(\"n\", \"N\").replace(\"o\", \"O\").replace(\"p\", \"P\").replace(\"\
    q\", \"Q\").replace(\"r\", \"R\").replace(\"s\", \"S\").replace(\"t\", \"T\").replace(\"\
    u\", \"U\").replace(\"v\", \"V\").replace(\"w\", \"W\").replace(\"x\", \"X\").replace(\"\
    y\", \"Y\").replace(\"z\", \"Z\").replace(\"#\n                              \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                     "
  stdout: ''
  timestamp: 1661984077

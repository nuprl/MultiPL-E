language: py
name: HumanEval_161_solve
results:
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if ''.join(sorted(s)) == s else ''.join(sorted(s, reverse=True))\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmtef2hnc.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpmtef2hnc.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpmtef2hnc.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s.replace(\"\
    a\", \"A\").replace(\"b\", \"B\").replace(\"c\", \"C\").replace(\"d\", \"D\").replace(\"\
    e\", \"E\").replace(\"f\", \"F\").replace(\"g\", \"G\").replace(\"h\", \"H\").replace(\"\
    i\", \"I\").replace(\"j\", \"J\").replace(\"k\", \"K\").replace(\"l\", \"L\").replace(\"\
    m\", \"M\").replace(\"n\", \"N\").replace(\"o\", \"O\").replace(\"p\", \"P\").replace(\"\
    q\", \"Q\").replace(\"r\", \"R\").replace(\"s\", \"S\").replace(\"t\", \"T\").replace(\"\
    u\", \"U\").replace(\"v\", \"V\").replace(\"w\", \"W\").replace(\"x\", \"X\").replace(\"\
    y\", \"Y\").replace(\"z\", \"Z\").replace(\"#\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "  File \"/tmp/tmp0s19hw3m.py\", line 15\n    return \"\".join(sorted(s.replace(\"\
    a\", \"A\").replace(\"b\", \"B\").replace(\"c\", \"C\").replace(\"d\", \"D\").replace(\"\
    e\", \"E\").replace(\"f\", \"F\").replace(\"g\", \"G\").replace(\"h\", \"H\").replace(\"\
    i\", \"I\").replace(\"j\", \"J\").replace(\"k\", \"K\").replace(\"l\", \"L\").replace(\"\
    m\", \"M\").replace(\"n\", \"N\").replace(\"o\", \"O\").replace(\"p\", \"P\").replace(\"\
    q\", \"Q\").replace(\"r\", \"R\").replace(\"s\", \"S\").replace(\"t\", \"T\").replace(\"\
    u\", \"U\").replace(\"v\", \"V\").replace(\"w\", \"W\").replace(\"x\", \"X\").replace(\"\
    y\", \"Y\").replace(\"z\", \"Z\").replace(\"#\n                              \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                     "
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z').replace('#\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "  File \"/tmp/tmpjy0vgl72.py\", line 15\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z').replace('#\n                                                          \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                         "
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    \n    s = list(s)\n    \n    for i in range(len(s)):\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                s[i] = s[i].upper()\n       \
    \     else:\n                s[i] = s[i].lower()\n    \n    return \"\".join(s)\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppx6552y5.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmppx6552y5.py\", line 40,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmppx6552y5.py\", line 31, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    l = len(s)\n    for i in range(l):\n        if s[i].isalpha():\n    \
    \        if s[i].islower():\n                s = s[:i] + s[i].upper() + s[i+1:]\n\
    \            else:\n                s = s[:i] + s[i].lower() + s[i+1:]\n    return\
    \ s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert\
    \ candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert\
    \ candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_9du_f6z.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp_9du_f6z.py\", line 37,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_9du_f6z.py\", line 28, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(s[i].upper()\
    \ if s[i].islower() else s[i].lower() for i in range(len(s)))\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_tk99s0_.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp_tk99s0_.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_tk99s0_.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(map(lambda\
    \ x: x.isalpha() and x.lower() if x.isalpha() else x, s))\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpni7h_yh7.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpni7h_yh7.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpni7h_yh7.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.replace(\"#   \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \ \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert\
    \ candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert\
    \ candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmplu8kc55r.py\", line 15\n    \n    ^\nSyntaxError: EOL\
    \ while scanning string literal\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c.islower()\
    \ and c.upper() or c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe5iabg85.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpe5iabg85.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpe5iabg85.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.replace('#    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                              \ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpu9481ui9.py\", line 15\n    \n    ^\nSyntaxError: EOL\
    \ while scanning string literal\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s.replace(\"\
    a\",\"A\").replace(\"b\",\"B\").replace(\"c\",\"C\").replace(\"d\",\"D\").replace(\"\
    e\",\"E\").replace(\"f\",\"F\").replace(\"g\",\"G\").replace(\"h\",\"H\").replace(\"\
    i\",\"I\").replace(\"j\",\"J\").replace(\"k\",\"K\").replace(\"l\",\"L\").replace(\"\
    m\",\"M\").replace(\"n\",\"N\").replace(\"o\",\"O\").replace(\"p\",\"P\").replace(\"\
    q\",\"Q\").replace(\"r\",\"R\").replace(\"s\",\"S\").replace(\"t\",\"T\").replace(\"\
    u\",\"U\").replace(\"v\",\"V\").replace(\"w\",\"W\").replace(\"x\",\"X\").replace(\"\
    y\",\"Y\").replace(\"z\",\"Z\").replace(\"#                                  \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                \ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpaviozx15.py\", line 15\n    \n    ^\nSyntaxError: EOL\
    \ while scanning string literal\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.lower()\n    s\
    \ = s.replace(' ', '')\n    s = s.replace('-', '')\n    s = s.replace('_', '')\n\
    \    s = s.replace('.', '')\n    s = s.replace('(', '')\n    s = s.replace(')',\
    \ '')\n    s = s.replace('[', '')\n    s = s.replace(']', '')\n    s = s.replace('{',\
    \ '')\n    s = s.replace('}', '')\n    s = s.replace('+', '')\n    s = s.replace('*',\
    \ '')\n    s = s.replace('/', '')\n    s = s.replace('%', '')\n    s = s.replace('&',\
    \ '')\n    s = s.replace('#\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmprtfhis1w.py\", line 31\n    s = s.replace('#\n       \
    \             ^\nSyntaxError: EOL while scanning string literal\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if s.isalpha() else s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv3n2vh1c.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpv3n2vh1c.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpv3n2vh1c.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace(\"\
    a\", \"A\").replace(\"b\", \"B\").replace(\"c\", \"C\").replace(\"d\", \"D\").replace(\"\
    e\", \"E\").replace(\"f\", \"F\").replace(\"g\", \"G\").replace(\"h\", \"H\").replace(\"\
    i\", \"I\").replace(\"j\", \"J\").replace(\"k\", \"K\").replace(\"l\", \"L\").replace(\"\
    m\", \"M\").replace(\"n\", \"N\").replace(\"o\", \"O\").replace(\"p\", \"P\").replace(\"\
    q\", \"Q\").replace(\"r\", \"R\").replace(\"s\", \"S\").replace(\"t\", \"T\").replace(\"\
    u\", \"U\").replace(\"v\", \"V\").replace(\"w\", \"W\").replace(\"x\", \"X\").replace(\"\
    y\", \"Y\").replace(\"z\", \"Z\").replace(\"#\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "  File \"/tmp/tmp2s7im87g.py\", line 15\n    return ''.join(sorted(s.replace(\"\
    a\", \"A\").replace(\"b\", \"B\").replace(\"c\", \"C\").replace(\"d\", \"D\").replace(\"\
    e\", \"E\").replace(\"f\", \"F\").replace(\"g\", \"G\").replace(\"h\", \"H\").replace(\"\
    i\", \"I\").replace(\"j\", \"J\").replace(\"k\", \"K\").replace(\"l\", \"L\").replace(\"\
    m\", \"M\").replace(\"n\", \"N\").replace(\"o\", \"O\").replace(\"p\", \"P\").replace(\"\
    q\", \"Q\").replace(\"r\", \"R\").replace(\"s\", \"S\").replace(\"t\", \"T\").replace(\"\
    u\", \"U\").replace(\"v\", \"V\").replace(\"w\", \"W\").replace(\"x\", \"X\").replace(\"\
    y\", \"Y\").replace(\"z\", \"Z\").replace(\"#\n                              \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                     "
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if s else s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpewwnxyhw.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpewwnxyhw.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpewwnxyhw.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    \n    s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                s[i] = s[i].upper()\n       \
    \     else:\n                s[i] = s[i].lower()\n    return \"\".join(s)\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoo7bne2s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpoo7bne2s.py\", line 38,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpoo7bne2s.py\", line 29, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if s else s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpewwnxyhw.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpewwnxyhw.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpewwnxyhw.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z').replace('#', '#').replace('@', '@')))\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpishfr78t.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpishfr78t.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpishfr78t.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.islower()\
    \ or c.isupper() else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0y3xxv89.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp0y3xxv89.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp0y3xxv89.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if s.isalpha() else s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkj0o410b.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkj0o410b.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkj0o410b.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    \n    l = len(s)\n    i = 0\n    while i < l:\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                s = s[:i] + s[i].upper() + s[i+1:]\n\
    \            else:\n                s = s[:i] + s[i].lower() + s[i+1:]\n     \
    \   i += 1\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcfnbhkuj.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpcfnbhkuj.py\", line 40,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpcfnbhkuj.py\", line 31, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() if c.islower() else c.lower() for c in s)\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu1fpp2f5.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpu1fpp2f5.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpu1fpp2f5.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.lower()\n    l\
    \ = len(s)\n    if l == 0:\n        return s\n    for i in range(l):\n       \
    \ if s[i].isalpha():\n            if s[i].islower():\n                s = s[:i]\
    \ + s[i].upper() + s[i+1:]\n            else:\n                s = s[:i] + s[i].lower()\
    \ + s[i+1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp9nz6lvt.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpp9nz6lvt.py\", line 38,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpp9nz6lvt.py\", line 28, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if ''.join(sorted(s)) == s else ''.join(sorted(s, reverse=True))\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmtef2hnc.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpmtef2hnc.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpmtef2hnc.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg0q9sbxu.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpg0q9sbxu.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpg0q9sbxu.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg0q9sbxu.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpg0q9sbxu.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpg0q9sbxu.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    if not s[0].isalpha():\n        return s[::-1]\n    return ''.join(c.isupper()\
    \ and c.upper() or c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2iu6rekq.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp2iu6rekq.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2iu6rekq.py\", line 22, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    l = len(s)\n    i = 0\n    while i < l:\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                s = s[:i] + s[i].upper() + s[i+1:]\n\
    \            else:\n                s = s[:i] + s[i].lower() + s[i+1:]\n     \
    \   i += 1\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpna4eb3_2.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpna4eb3_2.py\", line 39,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpna4eb3_2.py\", line 30, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c.islower()\
    \ and c.upper() or c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe5iabg85.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpe5iabg85.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpe5iabg85.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if s else s\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkp4ya4ij.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpkp4ya4ij.py\", line 29,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkp4ya4ij.py\", line 19, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    \n    result = []\n    for i in range(len(s)):\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                result.append(s[i].upper())\n\
    \            else:\n                result.append(s[i].lower())\n        else:\n\
    \            result.append(s[i])\n    return ''.join(result)\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi90fn1kk.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpi90fn1kk.py\", line 40,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpi90fn1kk.py\", line 31, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s.replace(\"\
    #\", \"\").replace(\"@\", \"\").replace(\"a\", \"A\").replace(\"b\", \"B\").replace(\"\
    c\", \"C\").replace(\"d\", \"D\").replace(\"e\", \"E\").replace(\"f\", \"F\").replace(\"\
    g\", \"G\").replace(\"h\", \"H\").replace(\"i\", \"I\").replace(\"j\", \"J\").replace(\"\
    k\", \"K\").replace(\"l\", \"L\").replace(\"m\", \"M\").replace(\"n\", \"N\").replace(\"\
    o\", \"O\").replace(\"p\", \"P\").replace(\"q\", \"Q\").replace(\"r\", \"R\").replace(\"\
    s\", \"S\").replace(\"t\", \"T\").replace(\"u\", \"U\").replace(\"v\", \"V\").replace(\"\
    w\", \"W\").replace(\"x\", \"X\").replace(\"y\", \"Y\").replace(\"z\", \"Z\")))\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi_v0n318.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpi_v0n318.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpi_v0n318.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s.replace(\"\
    a\", \"A\").replace(\"b\", \"B\").replace(\"c\", \"C\").replace(\"d\", \"D\").replace(\"\
    e\", \"E\").replace(\"f\", \"F\").replace(\"g\", \"G\").replace(\"h\", \"H\").replace(\"\
    i\", \"I\").replace(\"j\", \"J\").replace(\"k\", \"K\").replace(\"l\", \"L\").replace(\"\
    m\", \"M\").replace(\"n\", \"N\").replace(\"o\", \"O\").replace(\"p\", \"P\").replace(\"\
    q\", \"Q\").replace(\"r\", \"R\").replace(\"s\", \"S\").replace(\"t\", \"T\").replace(\"\
    u\", \"U\").replace(\"v\", \"V\").replace(\"w\", \"W\").replace(\"x\", \"X\").replace(\"\
    y\", \"Y\").replace(\"z\", \"Z\").replace(\"#\", \"#\").replace(\"@\", \"@\")))\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2yd1zhb_.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2yd1zhb_.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2yd1zhb_.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    result = []\n    for i in range(len(s)):\n        if s[i].isalpha():\n\
    \            result.append(s[i].upper() if s[i].islower() else s[i].lower())\n\
    \        else:\n            result.append(s[i])\n    return \"\".join(result)\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp00aaxm7t.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp00aaxm7t.py\", line 36,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp00aaxm7t.py\", line 27, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.lower()\n    result\
    \ = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n          \
    \  if s[i].islower():\n                result += s[i].upper()\n            else:\n\
    \                result += s[i].lower()\n        else:\n            result +=\
    \ s[i]\n    return result\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgfa515me.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpgfa515me.py\", line 38,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpgfa515me.py\", line 28, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    l = len(s)\n    if not l:\n        return s\n    if not s[0].isalpha():\n\
    \        return s[::-1]\n    if not s[-1].isalpha():\n        return s[::-1]\n\
    \    for i in range(l):\n        if s[i].isalpha():\n            if s[i].islower():\n\
    \                s = s[:i] + s[i].upper() + s[i+1:]\n            else:\n     \
    \           s = s[:i] + s[i].lower() + s[i+1:]\n    return s\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkx10dlqe.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpkx10dlqe.py\", line 43,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkx10dlqe.py\", line 36, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c.islower()\
    \ and c.upper() or c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe5iabg85.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpe5iabg85.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpe5iabg85.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace(\"\
    a\", \"A\").replace(\"b\", \"B\").replace(\"c\", \"C\").replace(\"d\", \"D\").replace(\"\
    e\", \"E\").replace(\"f\", \"F\").replace(\"g\", \"G\").replace(\"h\", \"H\").replace(\"\
    i\", \"I\").replace(\"j\", \"J\").replace(\"k\", \"K\").replace(\"l\", \"L\").replace(\"\
    m\", \"M\").replace(\"n\", \"N\").replace(\"o\", \"O\").replace(\"p\", \"P\").replace(\"\
    q\", \"Q\").replace(\"r\", \"R\").replace(\"s\", \"S\").replace(\"t\", \"T\").replace(\"\
    u\", \"U\").replace(\"v\", \"V\").replace(\"w\", \"W\").replace(\"x\", \"X\").replace(\"\
    y\", \"Y\").replace(\"z\", \"Z\")))\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5qhj7vna.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp5qhj7vna.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp5qhj7vna.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s.replace(\"\
    a\",\"A\").replace(\"b\",\"B\").replace(\"c\",\"C\").replace(\"d\",\"D\").replace(\"\
    e\",\"E\").replace(\"f\",\"F\").replace(\"g\",\"G\").replace(\"h\",\"H\").replace(\"\
    i\",\"I\").replace(\"j\",\"J\").replace(\"k\",\"K\").replace(\"l\",\"L\").replace(\"\
    m\",\"M\").replace(\"n\",\"N\").replace(\"o\",\"O\").replace(\"p\",\"P\").replace(\"\
    q\",\"Q\").replace(\"r\",\"R\").replace(\"s\",\"S\").replace(\"t\",\"T\").replace(\"\
    u\",\"U\").replace(\"v\",\"V\").replace(\"w\",\"W\").replace(\"x\",\"X\").replace(\"\
    y\",\"Y\").replace(\"z\",\"Z\").replace(\"#\",\"#\").replace(\"@\",\"@\")))\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphc3dyno2.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphc3dyno2.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmphc3dyno2.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.lower()\n    if\
    \ not s:\n        return s\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                s = s[:i] + s[i].upper() + s[i+1:]\n\
    \            else:\n                s = s[:i] + s[i].lower() + s[i+1:]\n     \
    \   i += 1\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjicripws.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpjicripws.py\", line 39,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpjicripws.py\", line 29, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    \n    result = []\n    for i in range(len(s)):\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                result.append(s[i].upper())\n\
    \            else:\n                result.append(s[i].lower())\n        else:\n\
    \            result.append(s[i])\n    return ''.join(result)\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi90fn1kk.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpi90fn1kk.py\", line 40,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpi90fn1kk.py\", line 31, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    result = []\n    for i in range(len(s)):\n        if s[i].isalpha():\n\
    \            result.append(s[i].upper() if s[i].islower() else s[i].lower())\n\
    \        else:\n            result.append(s[i])\n    return \"\".join(result)\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp00aaxm7t.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp00aaxm7t.py\", line 36,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp00aaxm7t.py\", line 27, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if s else s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpewwnxyhw.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpewwnxyhw.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpewwnxyhw.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(map(lambda\
    \ x: x.isalpha() and x.islower() and x.upper() or x.lower(), s))\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp176h0ogq.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp176h0ogq.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp176h0ogq.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg0q9sbxu.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpg0q9sbxu.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpg0q9sbxu.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    if not s[0].isalpha():\n        return s[::-1]\n    return ''.join(s[i].upper()\
    \ if s[i].islower() else s[i].lower() for i in range(len(s)))\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpby3h9535.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpby3h9535.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpby3h9535.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s.replace(\"\
    a\",\"A\").replace(\"b\",\"B\").replace(\"c\",\"C\").replace(\"d\",\"D\").replace(\"\
    e\",\"E\").replace(\"f\",\"F\").replace(\"g\",\"G\").replace(\"h\",\"H\").replace(\"\
    i\",\"I\").replace(\"j\",\"J\").replace(\"k\",\"K\").replace(\"l\",\"L\").replace(\"\
    m\",\"M\").replace(\"n\",\"N\").replace(\"o\",\"O\").replace(\"p\",\"P\").replace(\"\
    q\",\"Q\").replace(\"r\",\"R\").replace(\"s\",\"S\").replace(\"t\",\"T\").replace(\"\
    u\",\"U\").replace(\"v\",\"V\").replace(\"w\",\"W\").replace(\"x\",\"X\").replace(\"\
    y\",\"Y\").replace(\"z\",\"Z\").replace(\"#\",\"#\").replace(\"@\",\"@\")))\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphc3dyno2.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphc3dyno2.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmphc3dyno2.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    if not s[0].isalpha():\n        return s[::-1]\n    return ''.join(s[i].upper()\
    \ if s[i].islower() else s[i].lower() for i in range(len(s)))\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpby3h9535.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpby3h9535.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpby3h9535.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.replace(\" \",\
    \ \"\")\n    s = s.replace(\"-\", \"\")\n    s = s.replace(\"_\", \"\")\n    s\
    \ = s.replace(\"/\", \"\")\n    s = s.replace(\"\\\\\", \"\")\n    s = s.replace(\"\
    (\", \"\")\n    s = s.replace(\")\", \"\")\n    s = s.replace(\"[\", \"\")\n \
    \   s = s.replace(\"]\", \"\")\n    s = s.replace(\"{\", \"\")\n    s = s.replace(\"\
    }\", \"\")\n    s = s.replace(\"'\", \"\")\n    s = s.replace(\"\\\"\", \"\")\n\
    \    s = s.replace(\"`\", \"\")\n    s = s.replace(\"~\", \"\")\n    s = s.replace(\"\
    !\", \"\")\n    s = s.replace(\"@\", \"\")\n    s = s.replace(\"#\", \"\")\n \
    \   s = s.replace(\"$\", \"\")\n    s = s.replace(\"%\", \"\")\n    s = s.replace(\"\
    ^\", \"\")\n    s = s.replace(\"&\", \"\")\n    s = s.replace(\"*\", \"\")\n \
    \   s = s.replace(\"(\", \"\")\n    s = s.replace(\")\", \"\")\n    s = s.replace(\"\
    {\", \"\")\n    s = s.replace(\"}\", \"\")\n    s = s.replace(\"+\", \"\")\n \
    \   s = s.replace(\"=\", \"\")\n    s = s.replace(\"<\", \"\")\n    s = s.replace(\"\
    >\", \"\")\n    s = s.replace(\"?\", \"\")\n    s = s.replace(\"\\\\\", \"\")\n\
    \    s = s.replace(\"|\", \"\")\n    s = s.replace(\";\", \"\")\n    s = s.replace(\"\
    :\", \"\")\n    s = s.replace(\"\\\"\", \"\")\n    s = s.replace(\"'\", \"\")\n\
    \    s = s.replace(\"`\", \"\")\n    s = s.replace(\"~\", \"\")\n    s = s.replace(\"\
    ?\", \"\")\n    s = s.replace(\"\\\\\", \"\")\n    s = s.replace(\"|\", \"\")\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_eke5a8x.py\", line\
    \ 72, in <module>\n    test_check()\n  File \"/tmp/tmp_eke5a8x.py\", line 70,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_eke5a8x.py\", line 60, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c.islower()\
    \ and c.upper() or c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe5iabg85.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpe5iabg85.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpe5iabg85.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.islower()\
    \ or c.isupper() else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0y3xxv89.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp0y3xxv89.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp0y3xxv89.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.islower()\
    \ or c.isupper() else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0y3xxv89.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp0y3xxv89.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp0y3xxv89.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(map(lambda\
    \ x: x.isalpha() and x.lower() if x.isupper() else x, s))\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb0s7ru7f.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpb0s7ru7f.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpb0s7ru7f.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    \n    l = len(s)\n    \n    if not l:\n        return s\n    \n    i\
    \ = 0\n    while i < l:\n        if s[i].isalpha():\n            if s[i].islower():\n\
    \                s = s[:i] + s[i].upper() + s[i+1:]\n            else:\n     \
    \           s = s[:i] + s[i].lower() + s[i+1:]\n        i += 1\n    return s\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkrobiklm.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpkrobiklm.py\", line 44,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkrobiklm.py\", line 35, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s.replace(\"\
    a\",\"A\").replace(\"b\",\"B\").replace(\"c\",\"C\").replace(\"d\",\"D\").replace(\"\
    e\",\"E\").replace(\"f\",\"F\").replace(\"g\",\"G\").replace(\"h\",\"H\").replace(\"\
    i\",\"I\").replace(\"j\",\"J\").replace(\"k\",\"K\").replace(\"l\",\"L\").replace(\"\
    m\",\"M\").replace(\"n\",\"N\").replace(\"o\",\"O\").replace(\"p\",\"P\").replace(\"\
    q\",\"Q\").replace(\"r\",\"R\").replace(\"s\",\"S\").replace(\"t\",\"T\").replace(\"\
    u\",\"U\").replace(\"v\",\"V\").replace(\"w\",\"W\").replace(\"x\",\"X\").replace(\"\
    y\",\"Y\").replace(\"z\",\"Z\").replace(\"#\",\"#\").replace(\"@\",\"@\")))\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphc3dyno2.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphc3dyno2.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmphc3dyno2.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    \n    for i in range(len(s)):\n        if s[i].isalpha():\n         \
    \   if s[i].islower():\n                s = s[:i] + s[i].upper() + s[i+1:]\n \
    \           else:\n                s = s[:i] + s[i].lower() + s[i+1:]\n      \
    \      break\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ge9ijl4.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp3ge9ijl4.py\", line 38,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp3ge9ijl4.py\", line 28, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if s else s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxxc34539.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpxxc34539.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpxxc34539.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if s else s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpewwnxyhw.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpewwnxyhw.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpewwnxyhw.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z').replace('#', '#').replace('@', '@')))\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpishfr78t.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpishfr78t.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpishfr78t.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if s else s\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpewzi1348.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpewzi1348.py\", line 29,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpewzi1348.py\", line 19, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(map(lambda\
    \ x: x.islower() and x.upper() or x.lower(), s))\n\ndef check(candidate):\n  \
    \  assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdi_45p15.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpdi_45p15.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpdi_45p15.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c.islower()\
    \ and c.upper() or c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe5iabg85.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpe5iabg85.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpe5iabg85.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                s[i] = s[i].upper()\n       \
    \     else:\n                s[i] = s[i].lower()\n    return \"\".join(s)\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_rdcnunt.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp_rdcnunt.py\", line 37,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_rdcnunt.py\", line 28, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.lower()\n    s\
    \ = s.replace(\"#\", \"\")\n    s = s.replace(\"@\", \"\")\n    s = s.replace(\"\
    \ \", \"\")\n    s = s.replace(\"-\", \"\")\n    s = s.replace(\".\", \"\")\n\
    \    s = s.replace(\"/\", \"\")\n    s = s.replace(\"(\", \"\")\n    s = s.replace(\"\
    )\", \"\")\n    s = s.replace(\"[\", \"\")\n    s = s.replace(\"]\", \"\")\n \
    \   s = s.replace(\"{\", \"\")\n    s = s.replace(\"}\", \"\")\n    s = s.replace(\"\
    '\", \"\")\n    s = s.replace(\"\\\"\", \"\")\n    s = s.replace(\"\\\\\", \"\"\
    )\n    s = s.replace(\"|\", \"\")\n    s = s.replace(\"?\", \"\")\n    s = s.replace(\"\
    !\", \"\")\n    s = s.replace(\"&\", \"\")\n    s = s.replace(\";\", \"\")\n \
    \   s = s.replace(\":\", \"\")\n    s = s.replace(\"*\", \"\")\n    s = s.replace(\"\
    <\", \"\")\n    s = s.replace(\">\", \"\")\n    s = s.replace(\"\\\"\", \"\")\n\
    \    s = s.replace(\"'\", \"\")\n    s = s.replace(\".\", \"\")\n    s = s.replace(\"\
    ?\", \"\")\n    s = s.replace(\"!\", \"\")\n    s = s.replace(\"&\", \"\")\n \
    \   s = s.replace(\";\", \"\")\n    s = s.replace(\":\", \"\")\n    s = s.replace(\"\
    *\", \"\")\n    s = s.replace(\"<\", \"\")\n    s = s.replace(\">\", \"\")\n \
    \   s = s.replace(\"\\\"\", \"\")\n    s = s.replace(\"'\", \"\")\n    s = s.replace(\"\
    .\", \"\")\n    s = s.replace(\"?\", \"\")\n    s = s.replace(\"!\", \"\")\n \
    \   s = s.replace(\"&\", \"\")\n    s = s.replace(\";\", \"\")\n    s = s.replace(\"\
    :\", \"\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert\
    \ candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert\
    \ candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp8z310bm4.py\", line 58\n    s = s.replace(\":\", \"\n\
    \                       ^\nSyntaxError: unterminated string literal (detected\
    \ at line 58)\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if s else s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpewwnxyhw.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpewwnxyhw.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpewwnxyhw.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(c.islower()\
    \ and c.upper() or c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph4fooo6n.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmph4fooo6n.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph4fooo6n.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    l = len(s)\n    for i in range(l):\n        if s[i].isalpha():\n    \
    \        if s[i].islower():\n                s = s[:i] + s[i].upper() + s[i+1:]\n\
    \            else:\n                s = s[:i] + s[i].lower() + s[i+1:]\n    return\
    \ s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert\
    \ candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert\
    \ candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_9du_f6z.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp_9du_f6z.py\", line 37,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_9du_f6z.py\", line 28, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(c if\
    \ c.isalpha() else c.upper() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvuknkpsq.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvuknkpsq.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpvuknkpsq.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    \n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n    \
    \        if s[i].islower():\n                s = s[:i] + s[i].upper() + s[i+1:]\n\
    \            else:\n                s = s[:i] + s[i].lower() + s[i+1:]\n     \
    \   i += 1\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnuc7rc6d.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpnuc7rc6d.py\", line 39,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpnuc7rc6d.py\", line 30, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c.islower()\
    \ and c.upper() or c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe5iabg85.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpe5iabg85.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpe5iabg85.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.lower()\n    s\
    \ = s.replace('#', '@')\n    s = s.replace('@', '#')\n    return s\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpojqde06e.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpojqde06e.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpojqde06e.py\", line 21, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c.upper()\
    \ if c.islower() else c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoyhpxs52.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpoyhpxs52.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpoyhpxs52.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c.islower()\
    \ and c.upper() or c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe5iabg85.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpe5iabg85.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpe5iabg85.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptdff1u5r.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmptdff1u5r.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmptdff1u5r.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() if c.islower() else c.lower() for c in s)\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu1fpp2f5.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpu1fpp2f5.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpu1fpp2f5.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    result = []\n    for i in range(len(s)):\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                result.append(s[i].upper())\n\
    \            else:\n                result.append(s[i].lower())\n        else:\n\
    \            result.append(s[i])\n    return ''.join(result)\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyn2u3pp6.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpyn2u3pp6.py\", line 39,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpyn2u3pp6.py\", line 30, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    \n    result = []\n    for i in range(len(s)):\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                result.append(s[i].upper())\n\
    \            else:\n                result.append(s[i].lower())\n        else:\n\
    \            result.append(s[i])\n    return \"\".join(result)\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vl5a2ve.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp6vl5a2ve.py\", line 40,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vl5a2ve.py\", line 31, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z').replace('#', '#').replace('@', '@')))\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpishfr78t.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpishfr78t.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpishfr78t.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.replace(\"#\",\
    \ \"\")\n    s = s.replace(\"@\", \"\")\n    s = s.replace(\" \", \"\")\n    s\
    \ = s.replace(\"-\", \"\")\n    s = s.replace(\"_\", \"\")\n    s = s.replace(\"\
    /\", \"\")\n    s = s.replace(\"\\\\\", \"\")\n    s = s.replace(\"|\", \"\")\n\
    \    s = s.replace(\"(\", \"\")\n    s = s.replace(\")\", \"\")\n    s = s.replace(\"\
    [\", \"\")\n    s = s.replace(\"]\", \"\")\n    s = s.replace(\"{\", \"\")\n \
    \   s = s.replace(\"}\", \"\")\n    s = s.replace(\"&\", \"\")\n    s = s.replace(\"\
    %\", \"\")\n    s = s.replace(\"$\", \"\")\n    s = s.replace(\"^\", \"\")\n \
    \   s = s.replace(\"*\", \"\")\n    s = s.replace(\"+\", \"\")\n    s = s.replace(\"\
    =\", \"\")\n    s = s.replace(\"<\", \"\")\n    s = s.replace(\">\", \"\")\n \
    \   s = s.replace(\".\", \"\")\n    s = s.replace(\",\", \"\")\n    s = s.replace(\"\
    ?\", \"\")\n    s = s.replace(\"\\\"\", \"\")\n    s = s.replace(\"'\", \"\")\n\
    \    s = s.replace(\"\\\\\", \"\")\n    s = s.replace(\"/\", \"\")\n    s = s.replace(\"\
    \\\\\", \"\")\n    s = s.replace(\"|\", \"\")\n    s = s.replace(\"-\", \"\")\n\
    \    s = s.replace(\"_\", \"\")\n    s = s.replace(\"/\", \"\")\n    s = s.replace(\"\
    \\\\\", \"\")\n    s = s.replace(\"|\", \"\")\n    s = s.replace(\"(\", \"\")\n\
    \    s = s.replace(\")\", \"\")\n    s = s.replace(\"[\", \"\")\n    s = s.replace(\"\
    ]\", \"\")\n    s = s.replace(\"{\", \"\")\n    s = s.replace(\"}\", \"\")\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8l0b3jve.py\", line\
    \ 71, in <module>\n    test_check()\n  File \"/tmp/tmp8l0b3jve.py\", line 69,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp8l0b3jve.py\", line 59, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if s else s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxxc34539.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpxxc34539.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpxxc34539.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n          \
    \  if s[i].islower():\n                s = s[:i] + s[i].upper() + s[i+1:]\n  \
    \          else:\n                s = s[:i] + s[i].lower() + s[i+1:]\n       \
    \ i += 1\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3nggfxhf.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp3nggfxhf.py\", line 38,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp3nggfxhf.py\", line 29, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s.replace(\"\
    a\", \"A\").replace(\"b\", \"B\").replace(\"c\", \"C\").replace(\"d\", \"D\").replace(\"\
    e\", \"E\").replace(\"f\", \"F\").replace(\"g\", \"G\").replace(\"h\", \"H\").replace(\"\
    i\", \"I\").replace(\"j\", \"J\").replace(\"k\", \"K\").replace(\"l\", \"L\").replace(\"\
    m\", \"M\").replace(\"n\", \"N\").replace(\"o\", \"O\").replace(\"p\", \"P\").replace(\"\
    q\", \"Q\").replace(\"r\", \"R\").replace(\"s\", \"S\").replace(\"t\", \"T\").replace(\"\
    u\", \"U\").replace(\"v\", \"V\").replace(\"w\", \"W\").replace(\"x\", \"X\").replace(\"\
    y\", \"Y\").replace(\"z\", \"Z\").replace(\"#\", \"#\").replace(\"@\", \"@\")))\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2yd1zhb_.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2yd1zhb_.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2yd1zhb_.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    s = s.lower()\n    s\
    \ = s.replace(\"#\", \"\")\n    s = s.replace(\"@\", \"\")\n    s = s.replace(\"\
    \ \", \"\")\n    s = s.replace(\"-\", \"\")\n    s = s.replace(\"_\", \"\")\n\
    \    s = s.replace(\"(\", \"\")\n    s = s.replace(\")\", \"\")\n    s = s.replace(\"\
    [\", \"\")\n    s = s.replace(\"]\", \"\")\n    s = s.replace(\"{\", \"\")\n \
    \   s = s.replace(\"}\", \"\")\n    s = s.replace(\"'\", \"\")\n    s = s.replace(\"\
    \\\"\", \"\")\n    s = s.replace(\"/\", \"\")\n    s = s.replace(\"\\\\\", \"\"\
    )\n    s = s.replace(\"|\", \"\")\n    s = s.replace(\"&\", \"\")\n    s = s.replace(\"\
    <\", \"\")\n    s = s.replace(\">\", \"\")\n    s = s.replace(\"*\", \"\")\n \
    \   s = s.replace(\"?\", \"\")\n    s = s.replace(\"\\\"\", \"\")\n    s = s.replace(\"\
    '\", \"\")\n    s = s.replace(\".\", \"\")\n    s = s.replace(\",\", \"\")\n \
    \   s = s.replace(\";\", \"\")\n    s = s.replace(\"!\", \"\")\n    s = s.replace(\"\
    =\", \"\")\n    s = s.replace(\"+\", \"\")\n    s = s.replace(\"-\", \"\")\n \
    \   s = s.replace(\"%\", \"\")\n    s = s.replace(\"$\", \"\")\n    s = s.replace(\"\
    ^\", \"\")\n    s = s.replace(\"&\", \"\")\n    s = s.replace(\"#\", \"\")\n \
    \   s = s.replace(\"@\", \"\")\n    s = s.replace(\"~\", \"\")\n    s = s.replace(\"\
    `\", \"\")\n    s = s.replace(\"{\", \"\")\n    s = s.replace(\"}\", \"\")\n \
    \   s = s.replace(\"|\", \"\")\n    s = s.replace(\"\\\\\", \"\")\n    s = s\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjsew_8py.py\", line\
    \ 72, in <module>\n    test_check()\n  File \"/tmp/tmpjsew_8py.py\", line 70,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpjsew_8py.py\", line 60, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if s else s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxxc34539.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpxxc34539.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpxxc34539.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s.replace(\"\
    #\", \"\").replace(\"@\", \"\").replace(\"a\", \"A\").replace(\"b\", \"B\").replace(\"\
    c\", \"C\").replace(\"d\", \"D\").replace(\"e\", \"E\").replace(\"f\", \"F\").replace(\"\
    g\", \"G\").replace(\"h\", \"H\").replace(\"i\", \"I\").replace(\"j\", \"J\").replace(\"\
    k\", \"K\").replace(\"l\", \"L\").replace(\"m\", \"M\").replace(\"n\", \"N\").replace(\"\
    o\", \"O\").replace(\"p\", \"P\").replace(\"q\", \"Q\").replace(\"r\", \"R\").replace(\"\
    s\", \"S\").replace(\"t\", \"T\").replace(\"u\", \"U\").replace(\"v\", \"V\").replace(\"\
    w\", \"W\").replace(\"x\", \"X\").replace(\"y\", \"Y\").replace(\"z\", \"Z\")))\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi_v0n318.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpi_v0n318.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpi_v0n318.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() if c.islower() else c.lower() for c in s)\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu1fpp2f5.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpu1fpp2f5.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpu1fpp2f5.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if s else s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpewwnxyhw.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpewwnxyhw.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpewwnxyhw.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if s else s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpewwnxyhw.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpewwnxyhw.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpewwnxyhw.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if s.isalpha() else s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkj0o410b.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkj0o410b.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkj0o410b.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c.islower()\
    \ and c.upper() or c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe5iabg85.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpe5iabg85.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpe5iabg85.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c.islower()\
    \ and c.upper() or c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe5iabg85.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpe5iabg85.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpe5iabg85.py\", line 19, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c.upper()\
    \ if c.isalpha() else c for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjg_dmrgj.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpjg_dmrgj.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpjg_dmrgj.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    \n    l = len(s)\n    for i in range(l):\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                s[i] = s[i].upper()\n       \
    \     else:\n                s[i] = s[i].lower()\n    return s if l == len(s)\
    \ else s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0eynv370.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp0eynv370.py\", line 38,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp0eynv370.py\", line 28, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\n  File \"/tmp/tmp0eynv370.py\"\
    , line 24, in solve\n    s[i] = s[i].lower()\nTypeError: 'str' object does not\
    \ support item assignment\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    l = len(s)\n    i = 0\n    while i < l:\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                s = s[:i] + s[i].upper() + s[i+1:]\n\
    \            else:\n                s = s[:i] + s[i].lower() + s[i+1:]\n     \
    \   i += 1\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpna4eb3_2.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpna4eb3_2.py\", line 39,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpna4eb3_2.py\", line 30, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if s.isalpha() else \"\".join(reversed(s))\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf09d2xg4.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpf09d2xg4.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpf09d2xg4.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.upper()\
    \ if c.isalpha() else c for c in s))\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpan96dodv.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpan96dodv.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpan96dodv.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if s else s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxxc34539.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpxxc34539.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpxxc34539.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace('a',\
    \ 'A').replace('b', 'B').replace('c', 'C').replace('d', 'D').replace('e', 'E').replace('f',\
    \ 'F').replace('g', 'G').replace('h', 'H').replace('i', 'I').replace('j', 'J').replace('k',\
    \ 'K').replace('l', 'L').replace('m', 'M').replace('n', 'N').replace('o', 'O').replace('p',\
    \ 'P').replace('q', 'Q').replace('r', 'R').replace('s', 'S').replace('t', 'T').replace('u',\
    \ 'U').replace('v', 'V').replace('w', 'W').replace('x', 'X').replace('y', 'Y').replace('z',\
    \ 'Z')))\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n  \
    \  assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n  \
    \  assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfx9lw_zo.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfx9lw_zo.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpfx9lw_zo.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s.replace(\"\
    #\", \"\").replace(\"@\", \"\").replace(\"a\", \"A\").replace(\"b\", \"B\").replace(\"\
    c\", \"C\").replace(\"d\", \"D\").replace(\"e\", \"E\").replace(\"f\", \"F\").replace(\"\
    g\", \"G\").replace(\"h\", \"H\").replace(\"i\", \"I\").replace(\"j\", \"J\").replace(\"\
    k\", \"K\").replace(\"l\", \"L\").replace(\"m\", \"M\").replace(\"n\", \"N\").replace(\"\
    o\", \"O\").replace(\"p\", \"P\").replace(\"q\", \"Q\").replace(\"r\", \"R\").replace(\"\
    s\", \"S\").replace(\"t\", \"T\").replace(\"u\", \"U\").replace(\"v\", \"V\").replace(\"\
    w\", \"W\").replace(\"x\", \"X\").replace(\"y\", \"Y\").replace(\"z\", \"Z\")))\n\
    \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2xfuckz1.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2xfuckz1.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2xfuckz1.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    if not s:\n        return\
    \ s\n    \n    result = []\n    for i in range(len(s)):\n        if s[i].isalpha():\n\
    \            if s[i].islower():\n                result.append(s[i].upper())\n\
    \            else:\n                result.append(s[i].lower())\n        else:\n\
    \            result.append(s[i])\n    return ''.join(result)\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi90fn1kk.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpi90fn1kk.py\", line 40,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpi90fn1kk.py\", line 31, in\
    \ check\n    assert candidate('1234') == '4321'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.islower()\
    \ or c.isupper() else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0y3xxv89.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp0y3xxv89.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp0y3xxv89.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y6hat4k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp1y6hat4k.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1y6hat4k.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984076
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return \"\".join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9zdw8p9g.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9zdw8p9g.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp9zdw8p9g.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if s else s\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpewzi1348.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpewzi1348.py\", line 29,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpewzi1348.py\", line 19, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(c if c.isalpha()\
    \ else c.swapcase() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbdl3k06.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpkbdl3k06.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpkbdl3k06.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1661984077
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if s.isalpha() else ''.join(sorted(s, reverse=True))\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoct9epc7.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpoct9epc7.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpoct9epc7.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941
- exit_code: 1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\") \n    \"4321\"\n    >>> solve(\"ab\") \n    \"AB\"\n\
    \    >>> solve(\"#a@C\") \n    \"#A@c\"\n    \"\"\"\n    return ''.join(sorted(s))\
    \ if any(c.isalpha() for c in s) else s[::-1]\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsc1ff3.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2jsc1ff3.py\", line 28,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp2jsc1ff3.py\", line 18, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1662864941

language: py
name: HumanEval_21_rescale_to_unit
results:
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"Need at least two numbers to rescale\")\n    min_val\
    \ = numbers[0]\n    max_val = numbers[0]\n    for number in numbers:\n       \
    \ if number < min_val:\n            min_val = number\n        if number > max_val:\n\
    \            max_val = number\n    if min_val == max_val:\n        return [0.0]\
    \ * len(numbers)\n    scale = 1.0 / (max_val - min_val)\n    return [number *\
    \ scale - min_val for number in numbers]\n\ndef check(candidate):\n    assert\
    \ candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) ==\
    \ [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5,\
    \ 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0,\
    \ 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0,\
    \ 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqj2ruxak.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqj2ruxak.py\", line 31,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpqj2ruxak.py\", line\
    \ 24, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [x / max(numbers)\
    \ for x in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpitnomusx.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpitnomusx.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpitnomusx.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    numbers = sorted(numbers)\n\
    \    min_value = numbers[0]\n    max_value = numbers[-1]\n    if min_value ==\
    \ max_value:\n        return [0.0] * len(numbers)\n    scale = 1.0 / (max_value\
    \ - min_value)\n    return [n * scale for n in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpagq89uut.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpagq89uut.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpagq89uut.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy2mjgojk.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    numbers = sorted(numbers)\n\
    \    if numbers[0] == numbers[1]:\n        return [0.0] + numbers\n    else:\n\
    \        return [0.0] + [n / (numbers[-1] - numbers[0]) for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc0aqxcb1.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc0aqxcb1.py\", line 23,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpc0aqxcb1.py\", line\
    \ 16, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 0
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"Cannot rescale to unit, list of numbers is too small\"\
    )\n    min_val = min(numbers)\n    max_val = max(numbers)\n    if min_val == max_val:\n\
    \        return [0.0] * len(numbers)\n    return [float(x - min_val) / (max_val\
    \ - min_val) for x in numbers]\n\ndef check(candidate):\n    assert candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n  \
    \  assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n\
    \    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\
    \    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"Need at least two numbers to rescale\")\n    min_val\
    \ = numbers[0]\n    max_val = numbers[0]\n    for number in numbers:\n       \
    \ if number < min_val:\n            min_val = number\n        if number > max_val:\n\
    \            max_val = number\n    if max_val == min_val:\n        return [0.0]\
    \ * len(numbers)\n    scale = 1.0 / (max_val - min_val)\n    return [number *\
    \ scale - min_val for number in numbers]\n\ndef check(candidate):\n    assert\
    \ candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) ==\
    \ [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5,\
    \ 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0,\
    \ 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0,\
    \ 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpma6yh7h_.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpma6yh7h_.py\", line 31,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpma6yh7h_.py\", line\
    \ 24, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk7esaf_k.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmpk7esaf_k.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"Input list must have at least two elements\")\n\n\
    \    min_value = min(numbers)\n    max_value = max(numbers)\n\n    if min_value\
    \ == max_value:\n        return [0.0] * len(numbers)\n\n    return [n / (max_value\
    \ - min_value) for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n  \
    \  assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n\
    \    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\
    \    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppjcqd2cr.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmppjcqd2cr.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmppjcqd2cr.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865427
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy2mjgojk.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"List of numbers must be at least two elements long\"\
    )\n    min_val = min(numbers)\n    max_val = max(numbers)\n    if min_val == max_val:\n\
    \        return [0.0] * len(numbers)\n    return [x - min_val for x in numbers]\n\
    \ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n   \
    \ assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0,\
    \ 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyir8l5sq.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpyir8l5sq.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpyir8l5sq.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk7esaf_k.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmpk7esaf_k.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n / (max_value - min_value) for n in\
    \ numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp23m85b2_.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp23m85b2_.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp23m85b2_.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk7esaf_k.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmpk7esaf_k.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"List of numbers must be at least 2 elements long\"\
    )\n\n    min_val = numbers[0]\n    max_val = numbers[0]\n    for number in numbers:\n\
    \        if number < min_val:\n            min_val = number\n        if number\
    \ > max_val:\n            max_val = number\n\n    if max_val == min_val:\n   \
    \     return [0.0] * len(numbers)\n\n    scale = 1.0 / (max_val - min_val)\n \
    \   return [number * scale - min_val for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_t09bsqe.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp_t09bsqe.py\", line 34,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp_t09bsqe.py\", line\
    \ 27, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk7esaf_k.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmpk7esaf_k.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8zdsb6ja.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp8zdsb6ja.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp8zdsb6ja.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp8zdsb6ja.py\"\
    , line 11, in rescale_to_unit\n    return [n - min_value for n in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk7esaf_k.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmpk7esaf_k.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"List of numbers must be at least 2 elements long\"\
    )\n    min_value = min(numbers)\n    max_value = max(numbers)\n    if min_value\
    \ == max_value:\n        return [0.0] * len(numbers)\n    return [n / (max_value\
    \ - min_value) for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n  \
    \  assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n\
    \    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\
    \    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppy8gq8yb.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmppy8gq8yb.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmppy8gq8yb.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"List of numbers must be at least of size 2\")\n  \
    \  min_value = min(numbers)\n    max_value = max(numbers)\n    if min_value ==\
    \ max_value:\n        return [0.0] * len(numbers)\n    return [value / (max_value\
    \ - min_value) for value in numbers]\n\ndef check(candidate):\n    assert candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n  \
    \  assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n\
    \    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\
    \    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpllifyg6v.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpllifyg6v.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpllifyg6v.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if max_val == min_val:\n        return [0.0] * len(numbers)\n\
    \    return [number - min_val for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphllf69nt.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk7esaf_k.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmpk7esaf_k.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        min_val = min(min_val,\
    \ number)\n        max_val = max(max_val, number)\n    if max_val == min_val:\n\
    \        return numbers\n    return [number - min_val for number in numbers]\n\
    \ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n   \
    \ assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0,\
    \ 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzpjj4b4j.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpzpjj4b4j.py\", line 26,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpzpjj4b4j.py\", line\
    \ 19, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if min_val == max_val:\n        return [0.0] * len(numbers)\n\
    \    return [number / (max_val - min_val) for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2iv2d07d.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2iv2d07d.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp2iv2d07d.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n / (max_val - min_val) for n in numbers]\n\
    \ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n   \
    \ assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0,\
    \ 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcq2v7t_1.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpcq2v7t_1.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpcq2v7t_1.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [x / max(numbers)\
    \ for x in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpitnomusx.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpitnomusx.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpitnomusx.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    numbers = sorted(numbers)\n\
    \    min_value = numbers[0]\n    max_value = numbers[-1]\n    scale = 1.0 / (max_value\
    \ - min_value)\n    return [n * scale - min_value for n in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31c16ber.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp31c16ber.py\", line 23,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31c16ber.py\", line\
    \ 16, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"List of numbers must be at least 2 elements\")\n \
    \   min_val = min(numbers)\n    max_val = max(numbers)\n    if min_val == max_val:\n\
    \        return [0.0] * len(numbers)\n    else:\n        return [x - min_val for\
    \ x in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx5n4k0t2.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpx5n4k0t2.py\", line 26,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpx5n4k0t2.py\", line\
    \ 19, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy2mjgojk.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk7esaf_k.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmpk7esaf_k.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        min_val = min(min_val,\
    \ number)\n        max_val = max(max_val, number)\n    if max_val == min_val:\n\
    \        return [0.0] * len(numbers)\n    scale = 1.0 / (max_val - min_val)\n\
    \    return [number * scale - min_val for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp05pv1hqy.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp05pv1hqy.py\", line 27,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp05pv1hqy.py\", line\
    \ 20, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"List must contain at least two elements\")\n    min_val\
    \ = min(numbers)\n    max_val = max(numbers)\n    if min_val == max_val:\n   \
    \     return [0.0] * len(numbers)\n    return [n / (max_val - min_val) for n in\
    \ numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpth6tl_68.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpth6tl_68.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpth6tl_68.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"Need at least two numbers to rescale\")\n    min_val\
    \ = min(numbers)\n    max_val = max(numbers)\n    if min_val == max_val:\n   \
    \     return numbers\n    return [n - min_val for n in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw0uu9309.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpw0uu9309.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpw0uu9309.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [x / max(numbers)\
    \ for x in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpitnomusx.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpitnomusx.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpitnomusx.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk7esaf_k.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmpk7esaf_k.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"Input list must have at least two elements\")\n  \
    \  min_val = min(numbers)\n    max_val = max(numbers)\n    if min_val == max_val:\n\
    \        return [0.0] * len(numbers)\n    return [n / (max_val - min_val) for\
    \ n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd6v1cxiy.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpd6v1cxiy.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpd6v1cxiy.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    numbers = sorted(numbers)\n\
    \    min_value = numbers[0]\n    max_value = numbers[-1]\n    if min_value ==\
    \ max_value:\n        return [0.0] * len(numbers)\n    scale = 1.0 / (max_value\
    \ - min_value)\n    return [n - min_value for n in numbers] * scale\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps196pcjl.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmps196pcjl.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmps196pcjl.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmps196pcjl.py\"\
    , line 15, in rescale_to_unit\n    return [n - min_value for n in numbers] * scale\n\
    TypeError: can't multiply sequence by non-int of type 'float'\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n / (max_val - min_val) for n in numbers]\n\
    \ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n   \
    \ assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0,\
    \ 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcq2v7t_1.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpcq2v7t_1.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpcq2v7t_1.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if max_val == min_val:\n        return [0.0] * len(numbers)\n\
    \    return [number - min_val for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphllf69nt.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if max_val == min_val:\n        return [0.0] * len(numbers)\n\
    \    return [number - min_val for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphllf69nt.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n / (max_value - min_value) for n in\
    \ numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp23m85b2_.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp23m85b2_.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp23m85b2_.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"List of numbers must be at least of size 2\")\n  \
    \  min_val = min(numbers)\n    max_val = max(numbers)\n    if min_val == max_val:\n\
    \        return [0.0] * len(numbers)\n    return [n / (max_val - min_val) for\
    \ n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcm1qn29l.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpcm1qn29l.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpcm1qn29l.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    numbers = sorted(numbers)\n\
    \    min_value = numbers[0]\n    max_value = numbers[-1]\n    if min_value ==\
    \ max_value:\n        return [0.0] * len(numbers)\n    scale = 1.0 / (max_value\
    \ - min_value)\n    return [n * scale for n in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpagq89uut.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpagq89uut.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpagq89uut.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if max_val == min_val:\n        return [0.0] * len(numbers)\n\
    \    return [number - min_val for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphllf69nt.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"List of numbers must be at least of size 2\")\n  \
    \  min_val = min(numbers)\n    max_val = max(numbers)\n    if min_val == max_val:\n\
    \        return [0.0] * len(numbers)\n    return [n / (max_val - min_val) for\
    \ n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcm1qn29l.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpcm1qn29l.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpcm1qn29l.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    if min_value == max_value:\n        return\
    \ [0.0] * len(numbers)\n    return [x - min_value for x in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9nn3rrmw.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp9nn3rrmw.py\", line 23,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9nn3rrmw.py\", line\
    \ 16, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"List of numbers must be at least two elements long\"\
    )\n    min_value = min(numbers)\n    max_value = max(numbers)\n    if min_value\
    \ == max_value:\n        return [0.0] * len(numbers)\n    scale = 1.0 / (max_value\
    \ - min_value)\n    return [n * scale for n in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkg5p5yrj.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpkg5p5yrj.py\", line 26,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpkg5p5yrj.py\", line\
    \ 19, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy2mjgojk.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if max_val == min_val:\n        return [0.0]\n    else:\n    \
    \    return [number / (max_val - min_val) for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq10mhmy_.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpq10mhmy_.py\", line 29,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpq10mhmy_.py\", line\
    \ 22, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for n in numbers:\n        if n < min_val:\n  \
    \          min_val = n\n        if n > max_val:\n            max_val = n\n   \
    \ if max_val == min_val:\n        return [0.0] * len(numbers)\n    return [n -\
    \ min_val for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n  \
    \  assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n\
    \    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\
    \    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdemes3xj.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpdemes3xj.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpdemes3xj.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk7esaf_k.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmpk7esaf_k.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if max_val == min_val:\n        return [0.0] * len(numbers)\n\
    \    return [number - min_val for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphllf69nt.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ukhwwh4.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp_ukhwwh4.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp_ukhwwh4.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp_ukhwwh4.py\"\
    , line 11, in rescale_to_unit\n    return [n - min_val for n in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy2mjgojk.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy2mjgojk.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if max_val == min_val:\n        return [0.0] * len(numbers)\n\
    \    return [number - min_val for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphllf69nt.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8zdsb6ja.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp8zdsb6ja.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp8zdsb6ja.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp8zdsb6ja.py\"\
    , line 11, in rescale_to_unit\n    return [n - min_value for n in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8zdsb6ja.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp8zdsb6ja.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp8zdsb6ja.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp8zdsb6ja.py\"\
    , line 11, in rescale_to_unit\n    return [n - min_value for n in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy2mjgojk.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n / (max_value - min_value) for n in\
    \ numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp23m85b2_.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp23m85b2_.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp23m85b2_.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for val in numbers:\n        min_val = min(val,\
    \ min_val)\n        max_val = max(val, max_val)\n    if max_val == min_val:\n\
    \        return numbers\n    return [val - min_val for val in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8rg3uqpz.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp8rg3uqpz.py\", line 26,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp8rg3uqpz.py\", line\
    \ 19, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"List of numbers must be at least of size 2\")\n  \
    \  min_value = min(numbers)\n    max_value = max(numbers)\n    if min_value ==\
    \ max_value:\n        return [0.0] * len(numbers)\n    return [n / (max_value\
    \ - min_value) for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n  \
    \  assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n\
    \    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\
    \    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3jxgg7hp.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp3jxgg7hp.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp3jxgg7hp.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if max_val == min_val:\n        return [0.0]\n    return [number\
    \ - min_val for number in numbers]\n\ndef check(candidate):\n    assert candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n  \
    \  assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n\
    \    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\
    \    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6_stgmex.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp6_stgmex.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp6_stgmex.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk7esaf_k.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmpk7esaf_k.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8zdsb6ja.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp8zdsb6ja.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp8zdsb6ja.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp8zdsb6ja.py\"\
    , line 11, in rescale_to_unit\n    return [n - min_value for n in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk7esaf_k.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmpk7esaf_k.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk7esaf_k.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmpk7esaf_k.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"Input list must have at least two elements\")\n  \
    \  min_val = min(numbers)\n    max_val = max(numbers)\n    if min_val == max_val:\n\
    \        return [0.0] * len(numbers)\n    return [n / (max_val - min_val) for\
    \ n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd6v1cxiy.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpd6v1cxiy.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpd6v1cxiy.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if max_val == min_val:\n        return [0.0] * len(numbers)\n\
    \    return [number - min_val for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphllf69nt.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    if min_val == max_val:\n        return [0.0]\
    \ * len(numbers)\n    return [x - min_val for x in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcw__30cs.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpcw__30cs.py\", line 23,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpcw__30cs.py\", line\
    \ 16, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"Need at least two numbers to rescale\")\n    min_val\
    \ = min(numbers)\n    max_val = max(numbers)\n    if min_val == max_val:\n   \
    \     return [0.0] * len(numbers)\n    else:\n        return [x - min_val for\
    \ x in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0h7i3h8b.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp0h7i3h8b.py\", line 26,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp0h7i3h8b.py\", line\
    \ 19, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy2mjgojk.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    numbers = sorted(numbers)\n\
    \    if len(numbers) < 2:\n        raise ValueError(\"List of numbers must be\
    \ at least of size 2\")\n    min_value = numbers[0]\n    max_value = numbers[-1]\n\
    \    if min_value == max_value:\n        return [0.0] * len(numbers)\n    scale\
    \ = 1.0 / (max_value - min_value)\n    return [n - min_value for n in numbers]\
    \ * scale\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2eeviacf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp2eeviacf.py\", line 27,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp2eeviacf.py\", line\
    \ 20, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp2eeviacf.py\"\
    , line 17, in rescale_to_unit\n    return [n - min_value for n in numbers] * scale\n\
    TypeError: can't multiply sequence by non-int of type 'float'\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if max_val == min_val:\n        return [0.0] * len(numbers)\n\
    \    return [number - min_val for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphllf69nt.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if max_val == min_val:\n        return [0.0] * len(numbers)\n\
    \    return [number - min_val for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphllf69nt.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy2mjgojk.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n / (max_val - min_val) for n in numbers]\n\
    \ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n   \
    \ assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0,\
    \ 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcq2v7t_1.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpcq2v7t_1.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpcq2v7t_1.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    if min_val == max_val:\n        return [0.0]\
    \ * len(numbers)\n    return [x - min_val for x in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcw__30cs.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpcw__30cs.py\", line 23,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpcw__30cs.py\", line\
    \ 16, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) ==\
    \ [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk7esaf_k.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpk7esaf_k.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmpk7esaf_k.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_value for x in numbers] / (max_value\
    \ - min_value)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy2mjgojk.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy2mjgojk.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [x / max(numbers)\
    \ for x in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpitnomusx.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpitnomusx.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpitnomusx.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        min_val = min(min_val,\
    \ number)\n        max_val = max(max_val, number)\n    if max_val == min_val:\n\
    \        return [0.0] * len(numbers)\n    scale = 1.0 / (max_val - min_val)\n\
    \    return [number * scale - min_val for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp05pv1hqy.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp05pv1hqy.py\", line 27,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp05pv1hqy.py\", line\
    \ 20, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        min_val = min(min_val,\
    \ number)\n        max_val = max(max_val, number)\n    if max_val == min_val:\n\
    \        return [0.0]\n    else:\n        return [number / (max_val - min_val)\
    \ for number in numbers]\n\ndef check(candidate):\n    assert candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n  \
    \  assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n\
    \    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\
    \    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjjky21eh.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpjjky21eh.py\", line 27,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpjjky21eh.py\", line\
    \ 20, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy2mjgojk.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"Need at least two numbers to rescale\")\n    min_val\
    \ = min(numbers)\n    max_val = max(numbers)\n    if min_val == max_val:\n   \
    \     return [0.0] * len(numbers)\n    return [n / (max_val - min_val) for n in\
    \ numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqnwh0ugh.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpqnwh0ugh.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpqnwh0ugh.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if max_val == min_val:\n        return [0.0]\n    return [number\
    \ - min_val for number in numbers]\n\ndef check(candidate):\n    assert candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n  \
    \  assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n\
    \    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\
    \    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6_stgmex.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp6_stgmex.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp6_stgmex.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_value = min(numbers)\n\
    \    max_value = max(numbers)\n    return [n - min_value for n in numbers]\n\n\
    def check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy2mjgojk.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpy2mjgojk.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    if len(numbers) < 2:\n\
    \        raise ValueError(\"List of numbers must be at least two elements long\"\
    )\n    min_value = min(numbers)\n    max_value = max(numbers)\n    if min_value\
    \ == max_value:\n        return [0.0] * len(numbers)\n    return [i / (max_value\
    \ - min_value) for i in numbers]\n\ndef check(candidate):\n    assert candidate([2.0,\
    \ 49.9]) == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n  \
    \  assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n\
    \    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\
    \    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5,\
    \ 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgj6hzslq.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpgj6hzslq.py\", line 25,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmpgj6hzslq.py\", line\
    \ 18, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    return [n / max(numbers)\
    \ for n in numbers]\n\ndef check(candidate):\n    assert candidate([2.0, 49.9])\
    \ == [0.0, 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert\
    \ candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert\
    \ candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\n\
    def test_check():\n    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9w8i6ugv.py\", line 19,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp9w8i6ugv.py\", line\
    \ 12, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = numbers[0]\n\
    \    max_val = numbers[0]\n    for number in numbers:\n        if number < min_val:\n\
    \            min_val = number\n        if number > max_val:\n            max_val\
    \ = number\n    if max_val == min_val:\n        return [0.0] * len(numbers)\n\
    \    return [number - min_val for number in numbers]\n\ndef check(candidate):\n\
    \    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert candidate([100.0,\
    \ 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25,\
    \ 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0, 15.0, 13.0, 14.0]) ==\
    \ [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n    check(rescale_to_unit)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphllf69nt.py\", line 28,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmphllf69nt.py\", line\
    \ 21, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1662865428
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [n - min_val for n in numbers]\n\ndef\
    \ check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n    assert\
    \ candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0, 1.0, 5.0,\
    \ 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0, 11.0,\
    \ 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n   \
    \ check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnv0w6xj.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmptnv0w6xj.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017
- exit_code: 1
  program: "from typing import List\n\ndef rescale_to_unit(numbers: List[float]) ->\
    \ List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    such that the smallest number will become\
    \ 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0,\
    \ 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n\
    \    max_val = max(numbers)\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\n\ndef check(candidate):\n    assert candidate([2.0, 49.9]) == [0.0,\
    \ 1.0]\n    assert candidate([100.0, 49.9]) == [1.0, 0.0]\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]\n    assert candidate([2.0,\
    \ 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n    assert candidate([12.0,\
    \ 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]\n\ndef test_check():\n\
    \    check(rescale_to_unit)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp31dwk_ty.py\", line 21,\
    \ in test_check\n    check(rescale_to_unit)\n  File \"/tmp/tmp31dwk_ty.py\", line\
    \ 14, in check\n    assert candidate([2.0, 49.9]) == [0.0, 1.0]\n  File \"/tmp/tmp31dwk_ty.py\"\
    , line 11, in rescale_to_unit\n    return [x - min_val for x in numbers] / (max_val\
    \ - min_val)\nTypeError: unsupported operand type(s) for /: 'list' and 'float'\n"
  stdout: ''
  timestamp: 1661984017

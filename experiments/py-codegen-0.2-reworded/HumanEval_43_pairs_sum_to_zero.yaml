name: HumanEval_43_pairs_sum_to_zero
language: py
prompt: "from typing import List\n\ndef pairs_sum_to_zero(l: List[int]) -> bool:\n\
  \    \"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n    it\
  \ returns True if there are two distinct elements in the list that\n    sum to zero,\
  \ and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n    False\n   \
  \ >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
  \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
  \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([1, 3, 5, 0]) == False\n    assert\
  \ candidate([1, 3, -2, 1]) == False\n    assert candidate([1, 2, 3, 7]) == False\n\
  \    assert candidate([2, 4, -5, 3, 5, 7]) == True\n    assert candidate([1]) ==\
  \ False\n    assert candidate([-3, 9, -1, 3, 2, 30]) == True\n    assert candidate([-3,\
  \ 9, -1, 3, 2, 31]) == True\n    assert candidate([-3, 9, -1, 4, 2, 30]) == False\n\
  \    assert candidate([-3, 9, -1, 4, 2, 31]) == False\n\ndef test_check():\n   \
  \ check(pairs_sum_to_zero)\n\ntest_check()\n"
completions: ["    return len(l) >= 2 and sum(l) == 0\n", "    return len(set(l))\
    \ == 2 and sum(l) == 0\n", "    if len(l) < 2:\n        return False\n    return\
    \ len(set(l)) == 2 and sum(l) == 0\n", "    return len(l) >= 2 and l[0] + l[1]\
    \ == 0\n", "    if len(l) < 2:\n        return False\n    if len(l) == 2:\n  \
    \      if l[0] + l[1] == 0:\n            return True\n        else:\n        \
    \    return False\n    for i in range(len(l) - 1):\n        if l[i] + l[i+1] ==\
    \ 0:\n            return True\n    return False\n", "    if len(l) < 2:\n    \
    \    return False\n    \n    #                                               \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                               ", "    if len(l)\
    \ < 2:\n        return False\n    l.sort()\n    for i in range(len(l) - 1):\n\
    \        if l[i] + l[i + 1] == 0:\n            return True\n    return False\n",
  "    return len(l) >= 2 and l[0] + l[1] == 0\n", "    if len(l) < 2:\n        return\
    \ False\n    \n    #                                                         \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                           ", "    for i in range(len(l) - 1):\n\
    \        if l[i] + l[i + 1] == 0:\n            return True\n    return False\n",
  "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return\
    \ False\n    if l[0] == 0:\n        return False\n    if l[-1] == 0:\n       \
    \ return False\n    if l[0] == l[-1]:\n        return False\n    if l[0] > 0:\n\
    \        return False\n    if l[0] < 0:\n        return False\n    if l[-1] >\
    \ 0:\n        return False\n    if l[-1] < 0:\n        return False\n    if l[0]\
    \ == l[-1]:\n        return False\n    if l[0] == l[-1] + 1:\n        return False\n\
    \    if l[0] == l[-1] - 1:\n        return False\n    if l[0] == l[-1] + 2:\n\
    \        return False\n    if l[0] == l[-1] - 2:\n        return False\n    if\
    \ l[0] == l[-1] + 3:\n        return False\n    if l[0] == l[-1] - 3:\n      \
    \  return False\n    if l[0] == l[-1] + 4:\n        return False\n    if l[0]\
    \ == l[-1] - 4:\n        return False\n    if l[0] == l[-1] + 5:\n        return\
    \ False\n    if l[0] == l[-1] - 5:\n        return False\n    if l[0] == l[-1]\
    \ + 6:\n        return False\n    if l[0] == l[-1] - 6:\n        return False\n\
    \    if l[0] == l[-1] + 7:\n        return False\n    if l[0] == l[-1] - 7:\n\
    \        return False\n    if l[0] == l[-1] + 8:\n        return False\n    if\
    \ l[0] == l[-1] - 8:\n        return False\n    if l[0] == l[-1] + 9:\n      \
    \  return False\n    if l[0] == l[-1] - 9:\n        return False\n    if l", " \
    \   for i in range(len(l) - 1):\n        if l[i] + l[i + 1] == 0:\n          \
    \  return True\n    return False\n", "    if len(l) < 2:\n        return False\n\
    \    for i in range(len(l) - 1):\n        if l[i] + l[i + 1] == 0:\n         \
    \   return True\n    return False\n", "    return len(l) >= 2 and l[0] + l[1]\
    \ == 0\n", "    if len(l) < 2:\n        return False\n    pairs = []\n    for\
    \ i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if\
    \ l[i] + l[j] == 0:\n                pairs.append((l[i], l[j]))\n    return len(pairs)\
    \ == 2\n", "    if len(l) < 2:\n        return False\n    \n    #            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                    ", "    if\
    \ len(l) == 0:\n        return False\n    if len(l) == 1:\n        return False\n\
    \    if l[0] == 0:\n        return False\n    if l[0] == -1:\n        return False\n\
    \    if l[0] == 1:\n        return False\n    if l[0] == 2:\n        return False\n\
    \    if l[0] == 3:\n        return False\n    if l[0] == 4:\n        return False\n\
    \    if l[0] == 5:\n        return False\n    if l[0] == 6:\n        return False\n\
    \    if l[0] == 7:\n        return False\n    if l[0] == 8:\n        return False\n\
    \    if l[0] == 9:\n        return False\n    if l[0] == 10:\n        return False\n\
    \    if l[0] == 11:\n        return False\n    if l[0] == 12:\n        return\
    \ False\n    if l[0] == 13:\n        return False\n    if l[0] == 14:\n      \
    \  return False\n    if l[0] == 15:\n        return False\n    if l[0] == 16:\n\
    \        return False\n    if l[0] == 17:\n        return False\n    if l[0] ==\
    \ 18:\n        return False\n    if l[0] == 19:\n        return False\n    if\
    \ l[0] == 20:\n        return False\n    if l[0] == 21:\n        return False\n\
    \    if l[0] == 22:\n        return False\n    if l[0] == 23:\n        return\
    \ False\n    if l[0] == 24:\n        return False\n    if l[0] == 25:\n      \
    \  return False\n    if l[0] == 26:\n        return False\n    if l[0] == 27:\n\
    \        return False\n    if l[0] == 28:\n        return False\n    if l[0] ==\
    \ 29:\n        return False\n    if l[0] == 30:\n        return False\n    if\
    \ l[0] == 31:\n        return False\n    if l[0] == 32:\n        return False\n\
    \    if l[0] ==", "    if len(l) < 2:\n        return False\n    s = 0\n    for\
    \ i in range(len(l)):\n        s += l[i]\n    return s == 0\n", "    return len(set([x\
    \ + y for x, y in l])) == 2\n", "    return len(l) > 1 and sum(l) == 0\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

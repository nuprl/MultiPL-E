name: HumanEval_77_iscube
language: py
prompt: "def iscube(a: int) -> bool:\n    \"\"\"\n    Write a function that takes\
  \ an integer a and returns True \n    if this ingeger is a cube of some integer\
  \ number.\n    Note: you may assume the input is always valid.\n    Examples:\n\
  \    >>> iscube(1)\n    True\n    >>> iscube(2)\n    False\n    >>> iscube(-1)\n\
  \    True\n    >>> iscube(64)\n    True\n    >>> iscube(0)\n    True\n    >>> iscube(180)\n\
  \    False\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(1) == True\n    assert candidate(2)\
  \ == False\n    assert candidate(-1) == True\n    assert candidate(64) == True\n\
  \    assert candidate(180) == False\n    assert candidate(1000) == True\n    assert\
  \ candidate(0) == True\n    assert candidate(1729) == False\n\ndef test_check():\n\
  \    check(iscube)\n\ntest_check()\n"
completions: ["    return a % a == 0\n", "    return a % a == 0\n", "    if a == 0:\n\
    \        return True\n    if a < 0:\n        return False\n    if a % 3 == 0:\n\
    \        return iscube(a // 3)\n    if a % 4 == 0:\n        return iscube(a //\
    \ 4)\n    return False\n", "    return a % a == 0\n", "    if a == 0:\n      \
    \  return True\n    if a % 3 == 0:\n        return False\n    return a % 4 ==\
    \ 0\n", "    return a % a == 0\n", "    if a == 0:\n        return True\n    if\
    \ a < 0:\n        return False\n    if a % 3 == 0:\n        return iscube(a //\
    \ 3)\n    else:\n        return iscube(a // 4)\n", "    return a % a == 0\n",
  "    return a % a == 0\n", "    if a % 3 == 0:\n        return True\n    else:\n\
    \        return False\n", "    return a ** 3 == a * a * a\n", "    return a %\
    \ a == 0\n", "    return a % a == 0\n", "    if a < 0:\n        return True\n\
    \    if a % 3 == 0:\n        return False\n    return a % 4 == 0\n", "    if a\
    \ == 0:\n        return True\n    if a < 0:\n        return False\n    if a %\
    \ 3 == 0:\n        return iscube(a // 3)\n    else:\n        return iscube(a //\
    \ 4)\n", "    if a == 0:\n        return True\n    if a % 3 == 0:\n        return\
    \ False\n    if a % 4 == 0:\n        return True\n    return False\n", "    return\
    \ a % a == 0\n", "    if a % 3 == 0:\n        return True\n    else:\n       \
    \ return False\n", "    return a % a == 0\n", "    return a % a == 0\n", "   \
    \ return a % a == 0\n", "    return a % a == 0\n", "    return a % a == 0\n",
  "    return a % a == 0\n", "    return a % a == 0\n", "    if a == 0:\n        return\
    \ True\n    if a % 3 == 0:\n        return False\n    return a % 4 == 0\n", " \
    \   return a % a == 0\n", "    if a % 3 == 0:\n        return True\n    else:\n\
    \        return False\n", "    return a % a == 0\n", "    return a % a == 0\n",
  "    return a ** 3 == a * a * a\n", "    return a % a == 0\n", "    return a % a\
    \ == 0\n", "    return a % a == 0\n", "    return a % a == 0\n", "    return a\
    \ % a == 0\n", "    if a % 3 == 0:\n        return True\n    else:\n        return\
    \ False\n", "    if a < 0:\n        return True\n    if a % 3 == 0:\n        return\
    \ False\n    return a % 4 == 0\n", "    return a % a == 0\n", "    return a %\
    \ a == 0\n", "    return a % a == 0\n", "    if a == 0:\n        return True\n\
    \    if a < 0:\n        return False\n    if a % 3 == 0:\n        return True\n\
    \    return False\n", "    return a % a == 0\n", "    return a % a == 0\n", " \
    \   return a % a == 0\n", "    return a % a == 0\n", "    return a % a == 0\n",
  "    return a % a == 0\n", "    return a % a == 0\n", "    return a % a == 0\n",
  "    return a % a == 0\n", "    return a % a == 0\n", "    return a % a == 0\n",
  "    return a % a == 0\n", "    return a % a == 0\n", "    return a % a == 0\n",
  "    if a == 0:\n        return True\n    if a < 0:\n        return True\n    if\
    \ a % 3 == 0:\n        return False\n    return True\n", "    return a % a ==\
    \ 0\n", "    if a == 0:\n        return True\n    if a < 0:\n        return False\n\
    \    if a % 3 == 0:\n        return iscube(a // 3)\n    return iscube(a // 4)\n",
  "    return a % a == 0\n", "    return a % a == 0\n", "    return a % a == 0\n",
  "    return a % a == 0\n", "    return a % a == 0\n", "    return a % a == 0\n",
  "    return a % a == 0\n", "    return a % a == 0\n", "    return a % a == 0\n",
  "    return a % a == 0\n", "    return a % a == 0\n", "    return a % a == 0\n",
  "    return a % a == 0\n", "    return a % a == 0\n", "    return a % a == 0\n",
  "    return a % a == 0\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

language: py
name: HumanEval_133_sum_squares
results:
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(math.ceil(x))**2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpdnf94w9_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdnf94w9_.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    \  File \"/tmp/tmpdnf94w9_.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))**2\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x*x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpyk3fb_11.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x))**2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphz5oe0w0.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmphz5oe0w0.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmphz5oe0w0.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x*x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpyk3fb_11.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(math.ceil(x))**2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpdnf94w9_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdnf94w9_.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    \  File \"/tmp/tmpdnf94w9_.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))**2\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(i**2) for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsyi91oew.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpsyi91oew.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpsyi91oew.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(i)**2 for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2set4usc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(i**2) for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsyi91oew.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpsyi91oew.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpsyi91oew.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x)**2, lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7zai4e0d.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp7zai4e0d.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7zai4e0d.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x ** 2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptj7gzhe_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmptj7gzhe_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmptj7gzhe_.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1662863156
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x ** 2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptj7gzhe_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmptj7gzhe_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmptj7gzhe_.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1662863156
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x)**2, lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7zai4e0d.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp7zai4e0d.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7zai4e0d.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x*x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpyk3fb_11.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x*x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpyk3fb_11.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x ** 2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptj7gzhe_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmptj7gzhe_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmptj7gzhe_.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1662863156
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(i)**2 for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2set4usc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(math.ceil(x))**2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpdnf94w9_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdnf94w9_.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    \  File \"/tmp/tmpdnf94w9_.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))**2\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x*x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpyk3fb_11.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: x*x, lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnj5ldpc6.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpnj5ldpc6.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpnj5ldpc6.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1662863156
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x*x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpyk3fb_11.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(math.ceil(x))**2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpdnf94w9_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdnf94w9_.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    \  File \"/tmp/tmpdnf94w9_.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))**2\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(math.ceil(x))**2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpdnf94w9_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdnf94w9_.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    \  File \"/tmp/tmpdnf94w9_.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))**2\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(math.ceil(x))**2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpdnf94w9_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdnf94w9_.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    \  File \"/tmp/tmpdnf94w9_.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))**2\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: x*x, lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnj5ldpc6.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpnj5ldpc6.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpnj5ldpc6.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1662863156
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(math.ceil(x))**2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpdnf94w9_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdnf94w9_.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    \  File \"/tmp/tmpdnf94w9_.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))**2\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x*x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpyk3fb_11.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(math.ceil(x))**2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpdnf94w9_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdnf94w9_.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    \  File \"/tmp/tmpdnf94w9_.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))**2\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(i)**2 for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2set4usc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(i)**2 for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2set4usc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(i)**2 for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2set4usc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x)**2, lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7zai4e0d.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp7zai4e0d.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7zai4e0d.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(i)**2 for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2set4usc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(math.ceil(x))**2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpdnf94w9_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdnf94w9_.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    \  File \"/tmp/tmpdnf94w9_.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))**2\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(i)**2 for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2set4usc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x*x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpyk3fb_11.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x*x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpyk3fb_11.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(i)**2 for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2set4usc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x*x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpyk3fb_11.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(i)**2 for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2set4usc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp2set4usc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(math.ceil(x))**2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpdnf94w9_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdnf94w9_.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdnf94w9_.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    \  File \"/tmp/tmpdnf94w9_.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))**2\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x*x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpyk3fb_11.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x * x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpi5xuazcr.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpi5xuazcr.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([int(round(x**2)) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp993a2p4s.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp993a2p4s.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum(map(lambda x: int(x*x), lst))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpyk3fb_11.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyk3fb_11.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032
- exit_code: 1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0,2.0,3.0])\n    14\n\
    \    >>> lst([1.0,4.0,9.0])\n    98\n    >>> lst([1.0,3.0,5.0,7.0])\n    84\n\
    \    >>> lst([1.4,4.2,0.0])\n    29\n    >>> lst([-2.4,1.0,1.0])\n    6\n    \n\
    \n    \"\"\"\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpb7s92grc.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb7s92grc.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1661984032

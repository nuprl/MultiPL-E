name: HumanEval_39_prime_fib
language: py
prompt: "def prime_fib(n: int) -> int:\n    \"\"\"\n    prime_fib returns n-th number\
  \ that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n\
  \    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n\
  \    13\n    >>> prime_fib(5)\n    89\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(1) == 2\n    assert candidate(2)\
  \ == 3\n    assert candidate(3) == 5\n    assert candidate(4) == 13\n    assert\
  \ candidate(5) == 89\n    assert candidate(6) == 233\n    assert candidate(7) ==\
  \ 1597\n    assert candidate(8) == 28657\n    assert candidate(9) == 514229\n  \
  \  assert candidate(10) == 433494437\n\ndef test_check():\n    check(prime_fib)\n\
  \ntest_check()\n"
completions: ["    if n == 1:\n        return 2\n    if n == 2:\n        return 3\n\
    \    if n == 3:\n        return 5\n    if n == 4:\n        return 13\n    if n\
    \ == 5:\n        return 89\n    return prime_fib(n - 1) + prime_fib(n - 2)\n\n",
  "    if n == 1:\n        return 2\n    if n == 2:\n        return 3\n    if n ==\
    \ 3:\n        return 5\n    if n == 4:\n        return 13\n    if n == 5:\n  \
    \      return 89\n    if n == 6:\n        return 13 * 13 + 5\n    if n == 7:\n\
    \        return 13 * 13 + 5 * 5 + 3\n    if n == 8:\n        return 13 * 13 +\
    \ 5 * 5 + 3 * 3 + 1\n    if n == 9:\n        return 13 * 13 + 5 * 5 + 3 * 3 +\
    \ 1 * 1 + 2\n    if n == 10:\n        return 13 * 13 + 5 * 5 + 3 * 3 + 1 * 1 +\
    \ 2 * 2 + 1\n    if n == 11:\n        return 13 * 13 + 5 * 5 + 3 * 3 + 1 * 1 +\
    \ 2 * 2 + 1 * 1 + 4\n    if n == 12:\n        return 13 * 13 + 5 * 5 + 3 * 3 +\
    \ 1 * 1 + 2 * 2 + 1 * 1 + 4 * 4 + 2\n    if n == 13:\n        return 13 * 13 +\
    \ 5 * 5 + 3 * 3 + 1 * 1 + 2 * 2 + 1 * 1 + 4 * 4 + 2 * 2 + 1\n    if n == 14:\n\
    \        return 13 * 13 + 5 * 5 + 3 * 3 + 1 * 1 + 2 * 2 + 1 * 1 + 4 * 4 + 2 *\
    \ 2 + 1 * 1 + 6\n    if n == 15:\n        return 13 * 13 + 5 * 5 + 3 * 3 + 1 *\
    \ 1 + 2 * 2 + 1 * 1 + 4 * 4 + 2 * 2 + 1 * 1 + 6 * 6 + 1\n    if n == 16:\n   \
    \     return 13 * 13 + 5 * 5 + 3 * 3 + 1 * 1 + 2 * 2 + 1 * 1 + 4 * 4 + 2 * 2 +\
    \ 1 * 1 + 6 * 6 + 1 * 1 + 8\n    if n == 17:\n        return 13 * 13 + 5 * 5 +\
    \ 3 * 3 + 1 * 1 + 2 * 2 + 1 * 1 + 4 * 4 + 2 * 2 + 1 * 1 + 6 * 6 + 1 * 1 + 8 *\
    \ 8 + 2\n    if n == 18:\n        return 13 * 13 +", "    if n == 1:\n       \
    \ return 2\n    elif n == 2:\n        return 3\n    else:\n        a, b = 1, 1\n\
    \        while b < n:\n            a, b = b, a + b\n        return a\n\n", " \
    \   if n < 2:\n        return n\n    if n == 2:\n        return 3\n    if n ==\
    \ 3:\n        return 5\n    if n == 4:\n        return 13\n    if n == 5:\n  \
    \      return 89\n    return prime_fib(n - 1) + prime_fib(n - 2)\n\n", "    if\
    \ n == 1:\n        return 2\n    elif n == 2:\n        return 3\n    elif n ==\
    \ 3:\n        return 5\n    elif n == 4:\n        return 13\n    else:\n     \
    \   return fib(n - 1) + fib(n - 2)\n\n", "    if n == 1:\n        return 2\n \
    \   if n == 2:\n        return 3\n    if n == 3:\n        return 5\n    if n ==\
    \ 4:\n        return 13\n    if n == 5:\n        return 89\n    if n % 2 == 0:\n\
    \        return prime_fib(n // 2) * prime_fib(n // 2)\n    else:\n        return\
    \ prime_fib(n // 2) * prime_fib(n // 2) + prime_fib(n // 2)\n\n", "    if n ==\
    \ 1:\n        return 2\n    if n == 2:\n        return 3\n    if n == 3:\n   \
    \     return 5\n    if n == 4:\n        return 13\n    if n == 5:\n        return\
    \ 89\n    if n % 2 == 0:\n        return prime_fib(n // 2) * prime_fib(n // 2\
    \ + 1)\n    else:\n        return prime_fib(n // 2) * prime_fib(n // 2 + 1) +\
    \ prime_fib(n // 2 + 2)\n\n", "    if n == 1:\n        return 2\n    elif n ==\
    \ 2:\n        return 3\n    else:\n        a, b = 1, 1\n        while b < n:\n\
    \            a, b = b, a + b\n        return a\n\n", "    if n == 1:\n       \
    \ return 2\n    if n == 2:\n        return 3\n    if n == 3:\n        return 5\n\
    \    if n == 4:\n        return 13\n    if n == 5:\n        return 89\n    if\
    \ n % 2 == 0:\n        return prime_fib(n // 2) * prime_fib(n // 2 + 1)\n    else:\n\
    \        return prime_fib(n // 2) * prime_fib(n // 2 + 1) + prime_fib(n // 2)\n\
    <|endoftext|><|python|>#", "    if n == 1:\n        return 2\n    if n == 2:\n\
    \        return 3\n    if n == 3:\n        return 5\n    if n == 4:\n        return\
    \ 13\n    if n == 5:\n        return 89\n    if n % 2 == 0:\n        return prime_fib(n\
    \ // 2) * prime_fib(n // 2 + 1)\n    else:\n        return prime_fib(n // 2) *\
    \ prime_fib(n // 2 + 1) + prime_fib(n // 2)\n<|endoftext|><|python|>#", "    if\
    \ n == 1:\n        return 2\n    elif n == 2:\n        return 3\n    else:\n \
    \       a, b = 1, 1\n        while b < n:\n            a, b = b, a + b\n     \
    \   return a\n\n", "    if n == 1:\n        return 2\n    if n == 2:\n       \
    \ return 3\n    if n == 3:\n        return 5\n    if n == 4:\n        return 13\n\
    \    if n == 5:\n        return 89\n    if n == 6:\n        return 13 * 13 + 5\n\
    \    if n == 7:\n        return 13 * 13 * 13 + 13 * 5\n    if n == 8:\n      \
    \  return 13 * 13 * 13 * 13 + 13 * 13 * 5\n    if n == 9:\n        return 13 *\
    \ 13 * 13 * 13 * 13 + 13 * 13 * 13 * 5\n    if n == 10:\n        return 13 * 13\
    \ * 13 * 13 * 13 * 13 + 13 * 13 * 13 * 13 * 5\n    if n == 11:\n        return\
    \ 13 * 13 * 13 * 13 * 13 * 13 * 13 + 13 * 13 * 13 * 13 * 13 * 5\n    if n == 12:\n\
    \        return 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 + 13 * 13 * 13 * 13 * 13\
    \ * 13 * 5\n    if n == 13:\n        return 13 * 13 * 13 * 13 * 13 * 13 * 13 *\
    \ 13 * 13 + 13 * 13 * 13 * 13 * 13 * 13 * 13 * 5\n    if n == 14:\n        return\
    \ 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 + 13 * 13 * 13 * 13 * 13 * 13\
    \ * 13 * 13 * 5\n    if n == 15:\n        return 13 * 13 * 13 * 13 * 13 * 13 *\
    \ 13 * 13 * 13 * 13 * 13 + 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 5\n  \
    \  if n == 16:\n        return 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13\
    \ * 13 * 13 + 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 5\n    if n ==\
    \ 17:\n        return 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13\
    \ * 13 + 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 5\n    if n ==\
    \ 18:\n        return 13 * 13 *", "    if n == 1:\n        return 2\n    if n\
    \ == 2:\n        return 3\n    if n == 3:\n        return 5\n    if n == 4:\n\
    \        return 13\n    if n == 5:\n        return 89\n    if n == 6:\n      \
    \  return 13 * 13\n    if n == 7:\n        return 13 * 13 * 13\n    if n == 8:\n\
    \        return 13 * 13 * 13 * 13\n    if n == 9:\n        return 13 * 13 * 13\
    \ * 13 * 13\n    if n == 10:\n        return 13 * 13 * 13 * 13 * 13 * 13\n   \
    \ if n == 11:\n        return 13 * 13 * 13 * 13 * 13 * 13 * 13\n    if n == 12:\n\
    \        return 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13\n    if n == 13:\n     \
    \   return 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13\n    if n == 14:\n     \
    \   return 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13\n    if n == 15:\n\
    \        return 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13\n    if n\
    \ == 16:\n        return 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13\
    \ * 13\n    if n == 17:\n        return 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13\
    \ * 13 * 13 * 13 * 13 * 13\n    if n == 18:\n        return 13 * 13 * 13 * 13\
    \ * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13\n    if n == 19:\n       \
    \ return 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 *\
    \ 13\n    if n == 20:\n        return 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 *\
    \ 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13\n    if n == 21:\n        return 13 *\
    \ 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13 * 13\n\
    \    if n == 22:\n        return", "    if n == 1:\n        return 2\n    elif\
    \ n == 2:\n        return 3\n    else:\n        a, b = 1, 1\n        while b <\
    \ n:\n            a, b = b, a + b\n        return a\n\n", "    if n == 1:\n  \
    \      return 2\n    elif n == 2:\n        return 3\n    else:\n        a, b =\
    \ 1, 1\n        while b < n:\n            a, b = b, a + b\n        return a\n\n",
  "    if n == 1:\n        return 2\n    elif n == 2:\n        return 3\n    else:\n\
    \        a, b = 1, 1\n        while b < n:\n            a, b = b, a + b\n    \
    \    return a\n\n", "    if n == 1:\n        return 2\n    elif n == 2:\n    \
    \    return 3\n    else:\n        a, b = 1, 1\n        while b < n:\n        \
    \    a, b = b, a + b\n        return a\n\n", "    if n == 1:\n        return 2\n\
    \    elif n == 2:\n        return 3\n    else:\n        a, b = 1, 1\n        while\
    \ b < n:\n            a, b = b, a + b\n        return a\n\n", "    if n == 1:\n\
    \        return 2\n    elif n == 2:\n        return 3\n    elif n == 3:\n    \
    \    return 5\n    else:\n        a, b = 1, 1\n        while b < n:\n        \
    \    a, b = b, a + b\n        return a\n\n", "    if n == 1:\n        return 2\n\
    \    elif n == 2:\n        return 3\n    elif n == 3:\n        return 5\n    else:\n\
    \        a, b = 1, 1\n        while b < n:\n            a, b = b, a + b\n    \
    \    return a\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

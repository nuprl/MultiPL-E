language: py
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort()\n    return ' '.join(numbers)\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpxwgyxril.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 15, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort()\n    return ' '.join(numbers)\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpxwgyxril.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 15, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort()\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3pidd55f.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp3pidd55f.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp3pidd55f.py\", line\
    \ 16, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort()\n    return ' '.join(numbers)\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpxwgyxril.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 15, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort()\n    return ' '.join(numbers)\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpxwgyxril.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 15, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqr7jr4g9.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpqr7jr4g9.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqr7jr4g9.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpqr7jr4g9.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1662863426
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqr7jr4g9.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpqr7jr4g9.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqr7jr4g9.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpqr7jr4g9.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1662863426
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort()\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3pidd55f.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp3pidd55f.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp3pidd55f.py\", line\
    \ 16, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqr7jr4g9.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpqr7jr4g9.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqr7jr4g9.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpqr7jr4g9.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1662863426
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqr7jr4g9.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpqr7jr4g9.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqr7jr4g9.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpqr7jr4g9.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1662863426
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort()\n    return ' '.join(numbers)\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpxwgyxril.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 15, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort()\n    return ' '.join(numbers)\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpxwgyxril.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 15, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort()\n    return ' '.join(numbers)\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpxwgyxril.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 15, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort()\n    return ' '.join(numbers)\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpxwgyxril.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 15, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqr7jr4g9.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpqr7jr4g9.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqr7jr4g9.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpqr7jr4g9.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1662863426
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort()\n    return ' '.join(numbers)\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpxwgyxril.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 15, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort()\n    return ' '.join(numbers)\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpxwgyxril.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 15, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort()\n    return ' '.join(numbers)\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpxwgyxril.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxwgyxril.py\", line\
    \ 15, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=int)\n    return ' '.join(numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfnr_wps1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfnr_wps1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfnr_wps1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1661984000

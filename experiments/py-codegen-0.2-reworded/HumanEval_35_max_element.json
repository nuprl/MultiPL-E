{
  "name": "HumanEval_35_max_element",
  "language": "py",
  "prompt": "from typing import List\n\ndef max_element(l: List[int]) -> int:\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n",
  "tests": "def check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n",
  "completions": [
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    elif len(l) == 2:\n        return max(l)\n    else:\n        return max(l[0:len(l)//2], key=l.__getitem__)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n            max_index = i\n    return l[max_index]\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n            max_index = i\n    return l[max_index]\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n            max_index = i\n    return l[max_index]\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n            max_index = i\n    return l[max_index]\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n            max_index = i\n    return l[max_index]\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    elif len(l) == 2:\n        return max(l)\n    else:\n        return max(l[0:len(l)//2], key=l.__getitem__)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n            max_index = i\n    return l[max_index]\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    elif len(l) == 2:\n        return max(l)\n    else:\n        return max(l[:len(l)//2], key=l.__getitem__)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value\n",
    "    return max(l)\n",
    "    max_value = l[0]\n    for i in l:\n        if i > max_value:\n            max_value = i\n    return max_value\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    max_element_left = max_element(l[0:len(l)//2])\n    max_element_right = max_element(l[len(l)//2:])\n    return max(max_element_left, max_element_right)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        max_value = l[0]\n        for i in range(1, len(l)):\n            if l[i] > max_value:\n                max_value = l[i]\n        return max_value\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n            max_index = i\n    return l[max_index]\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n            max_index = i\n    return l[max_index]\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n            max_index = i\n    return l[max_index]\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n            max_index = i\n    return l[max_index]\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    max_element_index = 0\n    max_element_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_element_value:\n            max_element_value = l[i]\n            max_element_index = i\n    return l[max_element_index]\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n            max_index = i\n    return l[max_index]\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n            max_index = i\n    return l[max_index]\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        max_index = 0\n        max_value = l[0]\n        for i in range(1, len(l)):\n            if l[i] > max_value:\n                max_value = l[i]\n                max_index = i\n        return l[max_index]\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)\n",
    "    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n"
  ],
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ]
}
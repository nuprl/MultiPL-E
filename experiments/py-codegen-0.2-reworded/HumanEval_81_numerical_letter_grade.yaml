name: HumanEval_81_numerical_letter_grade
language: py
prompt: "from typing import List\n\ndef numerical_letter_grade(grades: List[float])\
  \ -> List[str]:\n    \"\"\"It is the last week of the semester and the teacher has\
  \ to give the grades\n    to students. The teacher has been making her own algorithm\
  \ for grading.\n    The only problem is, she has lost the code she used for grading.\n\
  \    She has given you a list of GPAs for some students and you have to write \n\
  \    a function that can output a list of letter grades using the following table:\n\
  \             GPA       |    Letter grade\n              4.0                A+\n\
  \            > 3.7                A \n            > 3.3                A- \n   \
  \         > 3.0                B+\n            > 2.7                B \n       \
  \     > 2.3                B-\n            > 2.0                C+\n           \
  \ > 1.7                C\n            > 1.3                C-\n            > 1.0\
  \                D+ \n            > 0.7                D \n            > 0.0   \
  \             D-\n              0.0                E\n    \n\n    Example:\n   \
  \ >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    ['A+', 'B', 'C-', 'C', 'A-']\n\
  \    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([4.0, 3, 1.7, 2, 3.5]) == ['A+',\
  \ 'B', 'C-', 'C', 'A-']\n    assert candidate([1.2]) == ['D+']\n    assert candidate([0.5])\
  \ == ['D-']\n    assert candidate([0.0]) == ['E']\n    assert candidate([1.0, 0.3,\
  \ 1.5, 2.8, 3.3]) == ['D', 'D-', 'C-', 'B', 'B+']\n    assert candidate([0.0, 0.7])\
  \ == ['E', 'D-']\n\ndef test_check():\n    check(numerical_letter_grade)\n\ntest_check()\n"
completions: ["    grades = sorted(grades)\n    if grades[0] < 0.0:\n        return\
    \ ['E']\n    if grades[0] < 0.7:\n        return ['D']\n    if grades[0] < 1.3:\n\
    \        return ['C']\n    if grades[0] < 2.0:\n        return ['B']\n    if grades[0]\
    \ < 3.0:\n        return ['A']\n    return ['A+']\n", "    pass\n", "    grades\
    \ = sorted(grades)\n    if grades[-1] >= 4.0:\n        return ['A+']\n    elif\
    \ grades[-1] >= 3.7:\n        return ['A']\n    elif grades[-1] >= 3.3:\n    \
    \    return ['A-']\n    elif grades[-1] >= 3.0:\n        return ['B+']\n    elif\
    \ grades[-1] >= 2.7:\n        return ['B']\n    elif grades[-1] >= 2.3:\n    \
    \    return ['B-']\n    elif grades[-1] >= 2.0:\n        return ['C+']\n    elif\
    \ grades[-1] >= 1.7:\n        return ['C']\n    elif grades[-1] >= 1.3:\n    \
    \    return ['C-']\n    elif grades[-1] >= 1.0:\n        return ['D+']\n    elif\
    \ grades[-1] >= 0.7:\n        return ['D']\n    elif grades[-1] >= 0.0:\n    \
    \    return ['D-']\n    else:\n        return ['E']\n", "    pass\n", "    pass\n",
  "    grades = sorted(grades)\n    if grades[0] >= 4.0:\n        return ['A+']\n\
    \    elif grades[0] >= 3.7:\n        return ['A']\n    elif grades[0] >= 3.3:\n\
    \        return ['A-']\n    elif grades[0] >= 3.0:\n        return ['B+']\n  \
    \  elif grades[0] >= 2.7:\n        return ['B']\n    elif grades[0] >= 2.3:\n\
    \        return ['B-']\n    elif grades[0] >= 2.0:\n        return ['C+']\n  \
    \  elif grades[0] >= 1.7:\n        return ['C']\n    elif grades[0] >= 1.3:\n\
    \        return ['C-']\n    elif grades[0] >= 1.0:\n        return ['D+']\n  \
    \  elif grades[0] >= 0.7:\n        return ['D']\n    elif grades[0] >= 0.0:\n\
    \        return ['D-']\n    else:\n        return ['E']\n<|endoftext|><|python|>#",
  "    pass\n", "    pass\n", "    pass\n", "    pass\n", "    grades.sort()\n   \
    \ if grades[-1] > 3.0:\n        return ['A+', 'B', 'C-', 'C', 'A-']\n    elif\
    \ grades[-1] > 2.7:\n        return ['A', 'B', 'C-', 'C', 'A-']\n    elif grades[-1]\
    \ > 2.3:\n        return ['A', 'B', 'C', 'C-', 'A-']\n    elif grades[-1] > 2.0:\n\
    \        return ['A', 'B', 'C', 'C-', 'B-']\n    elif grades[-1] > 1.7:\n    \
    \    return ['A', 'B', 'C', 'C-', 'B-', 'A-']\n    elif grades[-1] > 1.3:\n  \
    \      return ['A', 'B', 'C', 'C-', 'B-', 'A-']\n    elif grades[-1] > 1.0:\n\
    \        return ['A', 'B', 'C', 'C-', 'B-', 'A-']\n    elif grades[-1] > 0.7:\n\
    \        return ['A', 'B', 'C', 'C-', 'B-', 'A-']\n    elif grades[-1] > 0.3:\n\
    \        return ['A', 'B', 'C', 'C-', 'B-', 'A-']\n    elif grades[-1] > 0.0:\n\
    \        return ['A', 'B', 'C', 'C-', 'B-', 'A-']\n    else:\n        return ['E']\n",
  "    pass\n", "    grades = sorted(grades)\n    if grades[0] < 0:\n        return\
    \ ['E']\n    if grades[0] < 0.7:\n        return ['E']\n    if grades[0] < 1.3:\n\
    \        return ['C']\n    if grades[0] < 2.0:\n        return ['B']\n    if grades[0]\
    \ < 3.0:\n        return ['A']\n    if grades[0] < 4.0:\n        return ['A+']\n\
    \    return ['A']\n", "    pass\n", "    grades = sorted(grades)\n    if grades[0]\
    \ >= 4.0:\n        return ['A+']\n    elif grades[0] >= 3.7:\n        return ['A']\n\
    \    elif grades[0] >= 3.3:\n        return ['A-']\n    elif grades[0] >= 3.0:\n\
    \        return ['B+']\n    elif grades[0] >= 2.7:\n        return ['B']\n   \
    \ elif grades[0] >= 2.3:\n        return ['B-']\n    elif grades[0] >= 2.0:\n\
    \        return ['C+']\n    elif grades[0] >= 1.7:\n        return ['C']\n   \
    \ elif grades[0] >= 1.3:\n        return ['C-']\n    elif grades[0] >= 1.0:\n\
    \        return ['D+']\n    elif grades[0] >= 0.7:\n        return ['D']\n   \
    \ elif grades[0] >= 0.0:\n        return ['D-']\n    else:\n        return ['E']\n",
  "    pass\n", "    pass\n", "    pass\n", "    pass\n", "    grades = sorted(grades)\n\
    \    if grades[0] > 4.0:\n        return ['A+']\n    elif grades[0] > 3.7:\n \
    \       return ['A']\n    elif grades[0] > 3.3:\n        return ['A-']\n    elif\
    \ grades[0] > 3.0:\n        return ['B+', 'B']\n    elif grades[0] > 2.7:\n  \
    \      return ['B']\n    elif grades[0] > 2.3:\n        return ['B-']\n    elif\
    \ grades[0] > 2.0:\n        return ['C+', 'C']\n    elif grades[0] > 1.7:\n  \
    \      return ['C']\n    elif grades[0] > 1.3:\n        return ['C-']\n    elif\
    \ grades[0] > 1.0:\n        return ['D+', 'D']\n    elif grades[0] > 0.7:\n  \
    \      return ['D']\n    elif grades[0] > 0.0:\n        return ['D-']\n    else:\n\
    \        return ['E']\n", "    pass\n", "    grades = sorted(grades)\n    if grades[0]\
    \ < 0:\n        return ['E']\n    if grades[0] < 0.7:\n        return ['E']\n\
    \    if grades[0] < 1.3:\n        return ['D']\n    if grades[0] < 2.0:\n    \
    \    return ['C']\n    if grades[0] < 2.7:\n        return ['B']\n    if grades[0]\
    \ < 3.0:\n        return ['A']\n    if grades[0] < 3.3:\n        return ['A-']\n\
    \    if grades[0] < 3.7:\n        return ['A']\n    return ['A+']\n", "    pass\n",
  "    pass\n", "    pass\n", "    \n    grades.sort()\n    \n    if grades[-1] >=\
    \ 4.0:\n        return ['A+']\n    elif grades[-1] >= 3.7:\n        return ['A']\n\
    \    elif grades[-1] >= 3.3:\n        return ['A-']\n    elif grades[-1] >= 3.0:\n\
    \        return ['B+']\n    elif grades[-1] >= 2.7:\n        return ['B']\n  \
    \  elif grades[-1] >= 2.3:\n        return ['B-']\n    elif grades[-1] >= 2.0:\n\
    \        return ['C+']\n    elif grades[-1] >= 1.7:\n        return ['C']\n  \
    \  elif grades[-1] >= 1.3:\n        return ['C-']\n    elif grades[-1] >= 1.0:\n\
    \        return ['D+']\n    elif grades[-1] >= 0.7:\n        return ['D']\n  \
    \  elif grades[-1] >= 0.0:\n        return ['D-']\n    else:\n        return ['E']\n",
  "    pass\n", "    grades = sorted(grades)\n    if grades[0] >= 4.0:\n        return\
    \ ['A+']\n    elif grades[0] >= 3.7:\n        return ['A']\n    elif grades[0]\
    \ >= 3.3:\n        return ['A-']\n    elif grades[0] >= 3.0:\n        return ['B+',\
    \ 'B']\n    elif grades[0] >= 2.7:\n        return ['B']\n    elif grades[0] >=\
    \ 2.3:\n        return ['B-']\n    elif grades[0] >= 2.0:\n        return ['C+',\
    \ 'C']\n    elif grades[0] >= 1.7:\n        return ['C']\n    elif grades[0] >=\
    \ 1.3:\n        return ['C-']\n    elif grades[0] >= 1.0:\n        return ['D+',\
    \ 'D']\n    elif grades[0] >= 0.7:\n        return ['D']\n    elif grades[0] >=\
    \ 0.0:\n        return ['D-']\n    else:\n        return ['E']\n", "    grades\
    \ = sorted(grades)\n    if grades[0] < 0:\n        return ['E'] * len(grades)\n\
    \    if grades[0] < 0.7:\n        return ['D'] * len(grades)\n    if grades[0]\
    \ < 1.3:\n        return ['C'] * len(grades)\n    if grades[0] < 2.0:\n      \
    \  return ['B'] * len(grades)\n    if grades[0] < 3.0:\n        return ['A'] *\
    \ len(grades)\n    if grades[0] < 4.0:\n        return ['A+'] * len(grades)\n\
    \    return ['A'] * len(grades)\n", "    pass\n", "    pass\n", "    pass\n",
  "    pass\n", "    pass\n", "    pass\n", "    pass\n", "    pass\n", "    pass\n",
  "    pass\n", "    pass\n", "    pass\n", "    pass\n", "    pass\n", "    \n  \
    \  grade_table = {\n        4.0: 'A+',\n        3.7: 'A',\n        3.3: 'A-',\n\
    \        3.0: 'B+',\n        2.7: 'B',\n        2.3: 'B-',\n        2.0: 'C+',\n\
    \        1.7: 'C',\n        1.3: 'C-',\n        1.0: 'D+',\n        0.7: 'D',\n\
    \        0.0: 'D-'\n    }\n\n    return [grade_table[gpa] for gpa in grades]\n",
  "    pass\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

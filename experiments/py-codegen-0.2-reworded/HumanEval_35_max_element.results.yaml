language: py
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n\
    \        return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n\
    \        return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeko8y98f.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpeko8y98f.py\", line 23,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpeko8y98f.py\", line\
    \ 19, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    elif len(l) == 2:\n        return max(l)\n    else:\n\
    \        return max(l[0:len(l)//2], key=l.__getitem__)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi10n4m3q.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpi10n4m3q.py\", line 24,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpi10n4m3q.py\", line\
    \ 20, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1,\
    \ len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n     \
    \       max_index = i\n    return l[max_index]\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeko8y98f.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpeko8y98f.py\", line 23,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpeko8y98f.py\", line\
    \ 19, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n    \
    \    return l[0]\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeko8y98f.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpeko8y98f.py\", line 23,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpeko8y98f.py\", line\
    \ 19, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    elif l[0] > l[1]:\n        return l[0]\n    else:\n  \
    \      return l[1]\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) ==\
    \ 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\n\
    def test_check():\n    check(max_element)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfe3kqh6u.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpfe3kqh6u.py\", line 24,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpfe3kqh6u.py\", line\
    \ 20, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in l:\n        if i > max_value:\n\
    \            max_value = i\n    return max_value\n\ndef check(candidate):\n  \
    \  assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in l:\n        if i > max_value:\n\
    \            max_value = i\n    return max_value\n\ndef check(candidate):\n  \
    \  assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n\
    \        return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1,\
    \ len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n     \
    \       max_index = i\n    return max_value\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in l:\n        if i > max_value:\n\
    \            max_value = i\n    return max_value\n\ndef check(candidate):\n  \
    \  assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n    \
    \    return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1,\
    \ len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n     \
    \       max_index = i\n    return l[max_index]\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in l:\n        if i > max_value:\n\
    \            max_value = i\n    return max_value\n\ndef check(candidate):\n  \
    \  assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n    \
    \    return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n\n\
    def check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_odc9uni.py\", line 23,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 19, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    elif l[0] > l[1]:\n        return l[0]\n    else:\n  \
    \      return l[1]\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) ==\
    \ 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\n\
    def test_check():\n    check(max_element)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfe3kqh6u.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpfe3kqh6u.py\", line 24,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpfe3kqh6u.py\", line\
    \ 20, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    elif len(l) == 2:\n        return max(l)\n    else:\n\
    \        return max(l[0:len(l)//2], key=l.__getitem__)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi10n4m3q.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpi10n4m3q.py\", line 24,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpi10n4m3q.py\", line\
    \ 20, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n\
    \        return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1,\
    \ len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n     \
    \       max_index = i\n    return l[max_index]\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1,\
    \ len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n     \
    \       max_index = i\n    return l[max_index]\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    elif len(l) == 2:\n        return max(l)\n    else:\n\
    \        return max(l[0:len(l)//2], key=l.__getitem__)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi10n4m3q.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpi10n4m3q.py\", line 24,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpi10n4m3q.py\", line\
    \ 20, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1,\
    \ len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n     \
    \       max_index = i\n    return l[max_index]\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n    \
    \    return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n\n\
    def check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_odc9uni.py\", line 23,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 19, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n\
    \        return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n\
    \        return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in l:\n        if i > max_value:\n\
    \            max_value = i\n    return max_value\n\ndef check(candidate):\n  \
    \  assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    max_value = l[0]\n    for i in range(1, len(l)):\n  \
    \      if l[i] > max_value:\n            max_value = l[i]\n    return max_value\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    max_element_idx = 0\n    max_element_value = l[0]\n \
    \   for i in range(1, len(l)):\n        if l[i] > max_element_value:\n       \
    \     max_element_value = l[i]\n            max_element_idx = i\n    return l[max_element_idx]\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460458
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n    \
    \    return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n\n\
    def check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_odc9uni.py\", line 23,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 19, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeko8y98f.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpeko8y98f.py\", line 23,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpeko8y98f.py\", line\
    \ 19, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in l:\n        if i > max_value:\n\
    \            max_value = i\n    return max_value\n\ndef check(candidate):\n  \
    \  assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n    \
    \    return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n\n\
    def check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_odc9uni.py\", line 23,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 19, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n    \
    \    return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n\n\
    def check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_odc9uni.py\", line 23,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 19, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n\
    \        return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n\
    \        return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    elif len(l) == 2:\n        return max(l)\n    else:\n\
    \        return max(l[:len(l) // 2], key=l.__getitem__)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9v3d1uw7.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp9v3d1uw7.py\", line 24,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmp9v3d1uw7.py\", line\
    \ 20, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1662460458
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n    \
    \    return l[0]\n    max_value = l[0]\n    for i in range(1, len(l)):\n     \
    \   if l[i] > max_value:\n            max_value = l[i]\n    return max_value\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460458
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in l:\n        if i > max_value:\n\
    \            max_value = i\n    return max_value\n\ndef check(candidate):\n  \
    \  assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in l:\n        if i > max_value:\n\
    \            max_value = i\n    return max_value\n\ndef check(candidate):\n  \
    \  assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    elif len(l) == 2:\n        return max(l[0], l[1])\n  \
    \  else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460458
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in l:\n        if i > max_value:\n\
    \            max_value = i\n    return max_value\n\ndef check(candidate):\n  \
    \  assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n\
    \        return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in l:\n        if i > max_value:\n\
    \            max_value = i\n    return max_value\n\ndef check(candidate):\n  \
    \  assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in l:\n        if i > max_value:\n\
    \            max_value = i\n    return max_value\n\ndef check(candidate):\n  \
    \  assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    elif len(l) == 2:\n        return max(l)\n    else:\n\
    \        return max(l[0:len(l)//2], key=l.__getitem__)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi10n4m3q.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpi10n4m3q.py\", line 24,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpi10n4m3q.py\", line\
    \ 20, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        max_index = 0\n        max_value = l[0]\n\
    \        for i in range(1, len(l)):\n            if l[i] > max_value:\n      \
    \          max_index = i\n                max_value = l[i]\n        return l[max_index]\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460458
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n\
    \        return l[0]\n    elif len(l) == 2:\n        return max(l)\n    else:\n\
    \        return max(l[0:len(l)//2], key=l.__getitem__)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplgiu3u1v.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmplgiu3u1v.py\", line 24,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmplgiu3u1v.py\", line\
    \ 20, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1662460458
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in l:\n        if i > max_value:\n\
    \            max_value = i\n    return max_value\n\ndef check(candidate):\n  \
    \  assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n    \
    \    return l[0]\n    max_index = 0\n    max_value = l[0]\n    for i in range(1,\
    \ len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n     \
    \       max_index = i\n    return l[max_index]\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n\
    \        return l[0]\n    elif len(l) == 2:\n        return max(l)\n    else:\n\
    \        return max(l[0:len(l)//2], key=l.__getitem__)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplgiu3u1v.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmplgiu3u1v.py\", line 24,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmplgiu3u1v.py\", line\
    \ 20, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1662460458
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeko8y98f.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpeko8y98f.py\", line 23,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpeko8y98f.py\", line\
    \ 19, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n    \
    \    return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n\n\
    def check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_odc9uni.py\", line 23,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 19, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 1
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n    \
    \    return l[0]\n    if l[0] > l[1]:\n        return l[0]\n    return l[1]\n\n\
    def check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_odc9uni.py\", line 23,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmp_odc9uni.py\", line\
    \ 19, in check\n    assert candidate([1, 2, 3]) == 3\nAssertionError\n"
  stdout: ''
  timestamp: 1662460457
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return 0\n    elif len(l) == 1:\n  \
    \      return l[0]\n    else:\n        return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984038

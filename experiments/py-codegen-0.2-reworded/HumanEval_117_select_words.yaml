name: HumanEval_117_select_words
language: py
prompt: "from typing import List\n\ndef select_words(s: str, n: int) -> List[str]:\n\
  \    \"\"\"Given a string s and a natural number n, you have been tasked to implement\
  \ \n    a function that returns a list of all words from string s that contain exactly\
  \ \n    n consonants, in order these words appear in the string s.\n    If the string\
  \ s is empty then the function should return an empty list.\n    Note: you may assume\
  \ the input string contains only letters and spaces.\n    Examples:\n    >>> select_words(\"\
  Mary had a little lamb\", 4)\n    [\"little\"]\n    >>> select_words(\"Mary had\
  \ a little lamb\", 3)\n    [\"Mary\", \"lamb\"]\n    >>> select_words(\"simple white\
  \ space\", 2)\n    []\n    >>> select_words(\"Hello world\", 4)\n    [\"world\"\
  ]\n    >>> select_words(\"Uncle sam\", 3)\n    [\"Uncle\"]\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('Mary had a little lamb', 4) ==\
  \ ['little']\n    assert candidate('Mary had a little lamb', 3) == ['Mary', 'lamb']\n\
  \    assert candidate('simple white space', 2) == []\n    assert candidate('Hello\
  \ world', 4) == ['world']\n    assert candidate('Uncle sam', 3) == ['Uncle']\n \
  \   assert candidate('', 4) == []\n    assert candidate('a b c d e f', 1) == ['b',\
  \ 'c', 'd', 'f']\n\ndef test_check():\n    check(select_words)\n\ntest_check()\n"
completions: ["    words = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n\
    \            continue\n        if s[i] in 'aeiou':\n            if len(words)\
    \ == n:\n                return words\n            words.append(s[i])\n      \
    \  else:\n            if len(words) == n:\n                return words\n    \
    \        words.append(s[i])\n    return words\n", "    words = []\n    for i in\
    \ range(len(s)):\n        if s[i] == ' ':\n            if len(words) == n:\n \
    \               return words\n            words = []\n        else:\n        \
    \    words.append(s[i])\n    return words\n", "    \n    #                   \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \         ", "    words = []\n    for i in range(len(s)):\n        if s[i] ==\
    \ ' ':\n            continue\n        words.append(s[i:i+n])\n    return words\n",
  "    \n    words = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n  \
    \          continue\n        if s[i] in 'aeiou':\n            words.append(s[i:i+n])\n\
    \            i += n - 1\n        else:\n            words.append(s[i:i+n])\n \
    \           i += n\n    return words\n", "    words = []\n    for i in range(len(s)):\n\
    \        if s[i] == ' ':\n            if len(words) > 0:\n                words\
    \ = [w for w in words if len(w) > 0]\n            continue\n        if s[i] in\
    \ 'aeiou':\n            if len(words) > 0:\n                words = [w for w in\
    \ words if len(w) > 0]\n            continue\n        if len(words) > 0:\n   \
    \         words = [w for w in words if len(w) > 0]\n        words.append(s[i:i+1])\n\
    \    if len(words) > 0:\n        words = [w for w in words if len(w) > 0]\n  \
    \  return words\n", "    return [s[i:i+n] for i in range(len(s) - n + 1)]\n",
  "    words = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n        \
    \    if len(words) == n:\n                return words\n            words = []\n\
    \        else:\n            words.append(s[i])\n    return words\n", '    #',
  '    #', "    return [s[i:i+n] for i in range(len(s)-n+1)]\n", "    words = []\n\
    \    if len(s) == 0:\n        return words\n    for i in range(len(s)):\n    \
    \    if s[i] == ' ':\n            continue\n        if s[i] in 'abcdefghijklmnopqrstuvwxyz':\n\
    \            if len(words) == n:\n                return words\n            words.append(s[i:i+1])\n\
    \    return words\n", "    words = []\n    for i in range(len(s)):\n        if\
    \ s[i] == ' ':\n            continue\n        if len(words) == n:\n          \
    \  return words\n        if s[i] not in 'abcdefghijklmnopqrstuvwxyz':\n      \
    \      continue\n        words.append(s[i])\n        for j in range(i+1, len(s)):\n\
    \            if s[j] not in 'abcdefghijklmnopqrstuvwxyz':\n                break\n\
    \            words.append(s[j])\n    return words\n", "    words = []\n    for\
    \ i in range(len(s)):\n        if s[i] == ' ':\n            if len(words) == n:\n\
    \                words.pop()\n            continue\n        if s[i] not in 'aeiou':\n\
    \            continue\n        if len(words) == n:\n            words.pop()\n\
    \        words.append(s[i])\n    return words\n", "    \n    words = []\n    for\
    \ i in range(len(s)):\n        if s[i] == ' ':\n            continue\n       \
    \ \n        if s[i] in 'aeiou':\n            if len(words) < n:\n            \
    \    words.append(s[i])\n            else:\n                break\n        else:\n\
    \            if len(words) < n:\n                words.append(s[i])\n        \
    \    else:\n                break\n    return words\n", "    words = []\n    for\
    \ i in range(len(s)):\n        if s[i] == ' ':\n            continue\n       \
    \ words.append(s[i:i+n])\n        if i + n >= len(s):\n            break\n   \
    \ return words\n
  "    return [word for word in s.split() if len(word) == n and len(set(word)) ==\
    \ n]\n", "    words = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n\
    \            if len(words) == n:\n                return words\n            words\
    \ = []\n        else:\n            words.append(s[i])\n    return words\n", " \
    \   return [s[i:i+n] for i in range(len(s) - n + 1)]\n", "    words = []\n   \
    \ for i in range(len(s)):\n        if s[i] == ' ':\n            if len(words)\
    \ == n:\n                return words\n            else:\n                words\
    \ = []\n        else:\n            words.append(s[i])\n    return words\n", " \
    \   words = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n       \
    \     if len(words) == n:\n                return words\n            words = []\n\
    \        else:\n            words.append(s[i])\n    return words\n", "    return\
    \ [word for word in s.split() if len(set(word)) == n]\n", "    # Your code here\n\
    \    return []\n", "    return [word for word in s.split() if len(set(word)) ==\
    \ n]\n", "    # Your code here\n    return []\n", "    words = []\n    for i in\
    \ range(len(s)):\n        if s[i] == ' ':\n            if len(words) == n:\n \
    \               return words\n            words = []\n        else:\n        \
    \    words.append(s[i])\n    return words\n", "    words = []\n    for i in range(len(s)):\n\
    \        if s[i] == ' ':\n            continue\n        if s[i] in 'abcdefghijklmnopqrstuvwxyz':\n\
    \            if len(words) < n:\n                words.append(s[i:i+1])\n    \
    \        else:\n                break\n    return words\n", "    words = []\n\
    \    for i in range(len(s)):\n        if s[i] == ' ':\n            continue\n\
    \        if len(words) == n:\n            return words\n        if s[i] in 'aeiou':\n\
    \            words.append(s[i])\n        else:\n            for j in range(i,\
    \ len(s)):\n                if s[j] in 'aeiou':\n                    words.append(s[j])\n\
    \                    break\n    return words\n", "    words = []\n    for i in\
    \ range(len(s)):\n        if s[i] == ' ':\n            if len(words) == n:\n \
    \               return words\n            words = []\n        else:\n        \
    \    words.append(s[i])\n    return words\n", "    return [s for s in s.split()\
    \ if len(s) == n and len(set(s)) == n]\n", "    words = []\n    for i in range(len(s)):\n\
    \        if s[i] == ' ':\n            if len(words) == n:\n                return\
    \ words\n            words = []\n        else:\n            words.append(s[i])\n\
    \    return words\n", "    # Your code here\n    return []\n", "    words = []\n\
    \    for i in range(len(s)):\n        if s[i] == ' ':\n            continue\n\
    \        if s[i] in 'aeiou':\n            if len(words) == n:\n              \
    \  break\n            words.append(s[i])\n        else:\n            if len(words)\
    \ == n:\n                break\n            words.append(s[i])\n    return words\n",
  "    words = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n        \
    \    continue\n        if s[i:i+n] in words:\n            continue\n        words.append(s[i:i+n])\n\
    \    return words\n", "    words = []\n    for i in range(len(s)):\n        if\
    \ s[i] == ' ':\n            continue\n        if i + n < len(s):\n           \
    \ if s[i:i+n] in ['a', 'e', 'i', 'o', 'u']:\n                words.append(s[i:i+n])\n\
    \            else:\n                words.append(s[i])\n        else:\n      \
    \      words.append(s[i])\n    return words\n", "    words = []\n    for i in\
    \ range(len(s)):\n        if s[i] == ' ':\n            if len(words) == n:\n \
    \               return words\n            else:\n                words = []\n\
    \        else:\n            words.append(s[i])\n    return words\n", "    words\
    \ = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n            if len(words)\
    \ > 0:\n                words.append(s[i:i+n])\n            words = []\n     \
    \   else:\n            if len(words) < n:\n                words.append(s[i:i+n])\n\
    \    return words\n", "    words = []\n    for i in range(len(s)):\n        if\
    \ s[i] == ' ':\n            if len(words) == n:\n                return words\n\
    \            words = []\n        else:\n            words.append(s[i])\n    return\
    \ words\n", "    words = []\n    for i in range(len(s)):\n        if s[i] == '\
    \ ':\n            if len(words) == n:\n                return words\n        \
    \    else:\n                words = []\n        else:\n            words.append(s[i])\n\
    \    return words\n", "    words = []\n    for i in range(len(s)):\n        if\
    \ s[i] == ' ':\n            continue\n        if len(words) < n:\n           \
    \ words.append(s[i:i+1])\n        else:\n            break\n    return words\n",
  "    \n    words = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n  \
    \          continue\n        if s[i] in 'aeiou':\n            if len(words) <\
    \ n:\n                words.append(s[i])\n        else:\n            if len(words)\
    \ < n:\n                words.append(s[i])\n            else:\n              \
    \  break\n    return words\n", "    words = []\n    for i in range(len(s)):\n\
    \        if s[i] == ' ':\n            continue\n        if s[i] in 'aeiou':\n\
    \            words.append(s[i:i+n])\n            i += n - 1\n        else:\n \
    \           words.append(s[i:i+n])\n            i += n\n    return words\n", " \
    \   words = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n       \
    \     if len(words) == n:\n                words.pop()\n            continue\n\
    \        words.append(s[i])\n        if len(words) == n:\n            words.pop()\n\
    \    return words\n", "    words = []\n    for i in range(len(s)):\n        if\
    \ s[i] == ' ':\n            continue\n        words.append(s[i:i+n])\n    return\
    \ words\n", "    words = []\n    if len(s) == 0:\n        return words\n    for\
    \ i in range(len(s)):\n        if s[i] == ' ':\n            continue\n       \
    \ if s[i] in 'abcdefghijklmnopqrstuvwxyz':\n            if len(words) == n:\n\
    \                return words\n            words.append(s[i:i+1])\n    return\
    \ words\n", "    words = []\n    for i in range(len(s)):\n        if s[i] == '\
    \ ':\n            continue\n        words.append(s[i:i+n])\n    return words\n",
  "    words = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n        \
    \    if len(words) == n:\n                break\n            else:\n         \
    \       continue\n        else:\n            if len(words) == n:\n           \
    \     words.append(s[i:i+n])\n                break\n            else:\n     \
    \           words.append(s[i:i+n])\n    return words\n", "    words = []\n   \
    \ for i in range(len(s)):\n        if s[i] == ' ':\n            if len(words)\
    \ == n:\n                return words\n            words = []\n        else:\n\
    \            words.append(s[i])\n    return words\n", "    words = []\n    for\
    \ i in range(len(s)):\n        if s[i] == ' ':\n            if len(words) == n:\n\
    \                return words\n            words = []\n        else:\n       \
    \     words.append(s[i])\n    return words\n", "    words = []\n    for i in range(len(s)):\n\
    \        if s[i] == ' ':\n            if len(words) == n:\n                return\
    \ words\n            words = []\n        else:\n            words.append(s[i])\n\
    \    return words\n", "    words = []\n    for i in range(len(s)):\n        if\
    \ s[i] == ' ':\n            continue\n        if s[i:i+n] in words:\n        \
    \    continue\n        words.append(s[i:i+n])\n    return words\n", "    words\
    \ = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n            if len(words)\
    \ == n:\n                return words\n            words = []\n        else:\n\
    \            words.append(s[i])\n    return words\n", "    # Your code here\n\
    \    words = []\n    if len(s) == 0:\n        return words\n    for i in range(len(s)):\n\
    \        if s[i] == ' ':\n            continue\n        else:\n            if\
    \ s[i:i+n] in words:\n                continue\n            else:\n          \
    \      words.append(s[i:i+n])\n    return words\n", "    words = []\n    for i\
    \ in range(len(s)):\n        if s[i] == ' ':\n            if len(words) == n:\n\
    \                return words\n            words = []\n        else:\n       \
    \     words.append(s[i])\n    return words\n", "    return [s[i:i+n] for i in\
    \ range(len(s)-n+1)]\n", "    words = []\n    for i in range(len(s)):\n      \
    \  if s[i] == ' ':\n            if len(words) == n:\n                return words\n\
    \            words = []\n        else:\n            words.append(s[i])\n    return\
    \ words\n", "    # Your code here\n    words = []\n    for i in range(len(s)):\n\
    \        if s[i] == ' ':\n            continue\n        if s[i] in 'abcdefghijklmnopqrstuvwxyz':\n\
    \            if len(words) == n:\n                break\n            words.append(s[i])\n\
    \    return words\n", "    words = []\n    for i in range(len(s)):\n        if\
    \ s[i] == ' ':\n            if len(words) == n:\n                return words\n\
    \            words = []\n        else:\n            words.append(s[i])\n    return\
    \ words\n", "    words = []\n    for i in range(len(s)):\n        if s[i] == '\
    \ ':\n            if len(words) == n:\n                return words\n        \
    \    words = []\n        else:\n            words.append(s[i])\n    return words\n",
  "    words = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n        \
    \    continue\n        if len(words) == n:\n            break\n        if s[i]\
    \ in 'aeiou':\n            words.append(s[i])\n        if s[i] in 'bcdfghjklmnpqrstvwxyz':\n\
    \            words.append(s[i])\n    return words\n", "    \n    # Your code here\n\
    \    \n    return []\n", "    words = []\n    for i in range(len(s)):\n      \
    \  if s[i] == ' ':\n            if len(words) == n:\n                return words\n\
    \            words = []\n        else:\n            words.append(s[i])\n    return\
    \ words\n", "    words = []\n    for i in range(len(s)):\n        if s[i] == '\
    \ ':\n            if len(words) == n:\n                return words\n        \
    \    words = []\n        else:\n            words.append(s[i])\n    return words\n",
  "    words = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n        \
    \    continue\n        if s[i] in 'aeiou':\n            if len(words) == n:\n\
    \                return words\n            words.append(s[i])\n        else:\n\
    \            if len(words) == n:\n                return words\n            words.append(s[i])\n\
    \    return words\n", "    # Your code here\n    return []\n", "    words = []\n\
    \    for i in range(len(s)):\n        if s[i] == ' ':\n            continue\n\
    \        if s[i:i+n] in words:\n            continue\n        words.append(s[i:i+n])\n\
    \    return words\n", "    words = []\n    for i in range(len(s)):\n        if\
    \ s[i] == ' ':\n            continue\n        words.append(s[i:i+n])\n    return\
    \ words\n", "    words = []\n    for i in range(len(s)):\n        if s[i] == '\
    \ ':\n            continue\n        if len(words) == n:\n            return words\n\
    \        if s[i] in 'aeiou':\n            words.append(s[i])\n        else:\n\
    \            for j in range(i, len(s)):\n                if s[j] in 'aeiou':\n\
    \                    words.append(s[j])\n                    break\n    return\
    \ words\n", "    words = []\n    for i in range(len(s)):\n        if s[i] == '\
    \ ':\n            continue\n        if s[i:i+n] in words:\n            continue\n\
    \        words.append(s[i:i+n])\n    return words\n", "    return [s[i:i+n] for\
    \ i in range(len(s) - n + 1)]\n", "    return [s[i:i+n] for i in range(len(s)-n+1)]\n",
  "    words = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n        \
    \    if len(words) == n:\n                return words\n            words = []\n\
    \        else:\n            words.append(s[i])\n    return words\n", "    words\
    \ = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n            if len(words)\
    \ == n:\n                return words\n            words = []\n        else:\n\
    \            words.append(s[i])\n    return words\n", "    return [s[i:i+n] for\
    \ i in range(len(s) - n + 1)]\n", "    words = []\n    for i in range(len(s)):\n\
    \        if s[i] == ' ':\n            if len(words) == n:\n                return\
    \ words\n            words = []\n        else:\n            words.append(s[i])\n\
    \    return words\n", "    words = []\n    for i in range(len(s)):\n        if\
    \ s[i] == ' ':\n            if len(words) == n:\n                return words\n\
    \            words = []\n        else:\n            words.append(s[i])\n    return\
    \ words\n", "    words = []\n    for i in range(len(s)):\n        if s[i] == '\
    \ ':\n            if len(words) == n:\n                return words\n        \
    \    words = []\n        else:\n            words.append(s[i])\n    return words\n",
  "    words = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n        \
    \    if len(words) == n:\n                return words\n            words = []\n\
    \        else:\n            words.append(s[i])\n    return words\n", "    words\
    \ = []\n    for i in range(len(s)):\n        if s[i] == ' ':\n            continue\n\
    \        if s[i] in 'abcdefghijklmnopqrstuvwxyz':\n            if n == 0:\n  \
    \              words.append(s[i:])\n                break\n            n -= 1\n\
    \        else:\n            if n == 0:\n                words.append(s[i:])\n\
    \                break\n            n -= 1\n    return words\n", "    words =\
    \ []\n    for i in range(len(s)):\n        if s[i] == ' ':\n            continue\n\
    \        if s[i] in 'abcdefghijklmnopqrstuvwxyz':\n            if len(words) ==\
    \ n:\n                return words\n            words.append(s[i:i+1])\n    return\
    \ words\n", "    return [s[i:i+n] for i in range(len(s)-n+1)]\n", "    # Your\
    \ code here\n    return []\n", "    words = []\n    for i in range(len(s)):\n\
    \        if s[i] == ' ':\n            if len(words) == n:\n                return\
    \ words\n            else:\n                words = []\n        else:\n      \
    \      words.append(s[i])\n    return words\n", "    words = []\n    for i in\
    \ range(len(s)):\n        if s[i] == ' ':\n            if len(words) == n:\n \
    \               return words\n            words = []\n        else:\n        \
    \    words.append(s[i])\n    return words\n", "    words = []\n    for i in range(len(s)):\n\
    \        if s[i] == ' ':\n            if len(words) > 0:\n                words\
    \ = []\n            continue\n        if s[i] == ' ':\n            continue\n\
    \        if len(words) == 0:\n            words.append(s[i])\n        else:\n\
    \            if len(words) == n:\n                words.append(s[i])\n       \
    \     else:\n                words.append(s[i])\n    return words\n", "    # Your\
    \ code here\n    words = []\n    if len(s) == 0:\n        return words\n    for\
    \ i in range(len(s)):\n        if s[i] == ' ':\n            continue\n       \
    \ if s[i] in 'abcdefghijklmnopqrstuvwxyz':\n            if len(words) == 0:\n\
    \                words.append(s[i])\n            else:\n                if len(words)\
    \ < n:\n                    words.append(s[i])\n                else:\n      \
    \              break\n        else:\n            if len(words) < n:\n        \
    \        words.append(s[i])\n            else:\n                break\n    return\
    \ words\n", "    words = []\n    for i in range(len(s)):\n        if s[i] == '\
    \ ':\n            if len(words) > 0:\n                words = []\n           \
    \ continue\n        if s[i] == ' ':\n            continue\n        if len(words)\
    \ == n:\n            break\n        words.append(s[i])\n    return words\n", " \
    \   return [s[i:i+n] for i in range(len(s)-n+1)]\n", "    words = []\n    for\
    \ i in range(len(s)):\n        if s[i] == ' ':\n            if len(words) == n:\n\
    \                return words\n            words = []\n        else:\n       \
    \     words.append(s[i])\n    return words\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

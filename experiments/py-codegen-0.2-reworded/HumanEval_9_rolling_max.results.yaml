language: py
name: HumanEval_9_rolling_max
results:
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    for i in range(len(numbers)):\n        result.append(max(numbers[i:i+numbers.count(numbers[i])]))\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7wb4j2yi.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7wb4j2yi.py\", line 21,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp7wb4j2yi.py\", line\
    \ 17, in check\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984054
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_list = []\n\
    \    for i in range(len(numbers)):\n        max_list.append(max(numbers[i:i+numbers.index(i)+1]))\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyyoxumtt.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpyyoxumtt.py\", line 21,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpyyoxumtt.py\", line\
    \ 16, in check\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  File \"\
    /tmp/tmpyyoxumtt.py\", line 11, in rolling_max\n    max_list.append(max(numbers[i:i+numbers.index(i)+1]))\n\
    ValueError: 0 is not in list\n"
  stdout: ''
  timestamp: 1661984054
- exit_code: 0
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    if len(numbers)\
    \ == 0:\n        return []\n    max_so_far = numbers[0]\n    result = [max_so_far]\n\
    \    for i in range(1, len(numbers)):\n        max_so_far = max(max_so_far, numbers[i])\n\
    \        result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984054
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    for i in range(len(numbers)):\n        result.append(max(numbers[i:i+numbers.index(i)]))\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpww3w9_j0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpww3w9_j0.py\", line 21,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpww3w9_j0.py\", line\
    \ 16, in check\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  File \"\
    /tmp/tmpww3w9_j0.py\", line 11, in rolling_max\n    result.append(max(numbers[i:i+numbers.index(i)]))\n\
    ValueError: 0 is not in list\n"
  stdout: ''
  timestamp: 1661984054
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    for i in range(len(numbers)):\n        result.append(max(numbers[i:i+numbers.index(i)]))\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpww3w9_j0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpww3w9_j0.py\", line 21,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpww3w9_j0.py\", line\
    \ 16, in check\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  File \"\
    /tmp/tmpww3w9_j0.py\", line 11, in rolling_max\n    result.append(max(numbers[i:i+numbers.index(i)]))\n\
    ValueError: 0 is not in list\n"
  stdout: ''
  timestamp: 1661984054
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    for i in range(len(numbers)):\n        result.append(max(numbers[i:i+numbers.count(numbers[i])]))\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7wb4j2yi.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7wb4j2yi.py\", line 21,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp7wb4j2yi.py\", line\
    \ 17, in check\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984054
- exit_code: 0
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    if len(numbers)\
    \ == 0:\n        return []\n    else:\n        return [max(numbers[:i + 1]) for\
    \ i in range(len(numbers))]\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984054
- exit_code: 0
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    if len(numbers)\
    \ == 0:\n        return []\n    max_so_far = numbers[0]\n    result = [max_so_far]\n\
    \    for number in numbers[1:]:\n        max_so_far = max(max_so_far, number)\n\
    \        result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984054
- exit_code: 0
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_list = []\n\
    \    for i in range(len(numbers)):\n        if i == 0:\n            max_list.append(numbers[i])\n\
    \        else:\n            max_list.append(max(numbers[i], max_list[i-1]))\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984055
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    for i in range(len(numbers)):\n        result.append(max(numbers[i:i+numbers.index(i)]))\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpww3w9_j0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpww3w9_j0.py\", line 21,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpww3w9_j0.py\", line\
    \ 16, in check\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  File \"\
    /tmp/tmpww3w9_j0.py\", line 11, in rolling_max\n    result.append(max(numbers[i:i+numbers.index(i)]))\n\
    ValueError: 0 is not in list\n"
  stdout: ''
  timestamp: 1661984054
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_list = []\n\
    \    for i in range(len(numbers)):\n        max_list.append(max(numbers[i:i+numbers[i]]))\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj36i0yw6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpj36i0yw6.py\", line 21,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpj36i0yw6.py\", line\
    \ 16, in check\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984055
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    for i in range(len(numbers)):\n        result.append(max(numbers[i:i+numbers.index(max(numbers[i:]))+1]))\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3tzt2mku.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp3tzt2mku.py\", line 21,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3tzt2mku.py\", line\
    \ 16, in check\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984055
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    if not numbers:\n\
    \        return []\n    result = []\n    for i in range(len(numbers)):\n     \
    \   result.append(max(numbers[i:i+numbers.index(numbers[i])+1]))\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1euug7_7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp1euug7_7.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp1euug7_7.py\", line\
    \ 18, in check\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984055
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    for i in range(len(numbers)):\n        result.append(max(numbers[i:i+numbers.index(i)]))\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpww3w9_j0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpww3w9_j0.py\", line 21,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpww3w9_j0.py\", line\
    \ 16, in check\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  File \"\
    /tmp/tmpww3w9_j0.py\", line 11, in rolling_max\n    result.append(max(numbers[i:i+numbers.index(i)]))\n\
    ValueError: 0 is not in list\n"
  stdout: ''
  timestamp: 1661984054
- exit_code: 0
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    if len(numbers)\
    \ == 0:\n        return []\n    max_so_far = numbers[0]\n    result = [max_so_far]\n\
    \    for number in numbers[1:]:\n        max_so_far = max(max_so_far, number)\n\
    \        result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984054
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    for i in range(len(numbers)):\n        result.append(max(numbers[i:i+numbers.count(numbers[i])]))\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7wb4j2yi.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7wb4j2yi.py\", line 21,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp7wb4j2yi.py\", line\
    \ 17, in check\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984054
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    for i in range(len(numbers)):\n        result.append(max(numbers[i:i+numbers.index(i)]))\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpww3w9_j0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpww3w9_j0.py\", line 21,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpww3w9_j0.py\", line\
    \ 16, in check\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  File \"\
    /tmp/tmpww3w9_j0.py\", line 11, in rolling_max\n    result.append(max(numbers[i:i+numbers.index(i)]))\n\
    ValueError: 0 is not in list\n"
  stdout: ''
  timestamp: 1661984054
- exit_code: 0
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    if len(numbers)\
    \ == 0:\n        return []\n    max_so_far = numbers[0]\n    result = [max_so_far]\n\
    \    for i in range(1, len(numbers)):\n        max_so_far = max(max_so_far, numbers[i])\n\
    \        result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1661984054
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    if len(numbers)\
    \ == 0:\n        return []\n    max_list = []\n    for i in range(len(numbers)):\n\
    \        max_list.append(max(numbers[i:], key=lambda x: x))\n    return max_list\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmdnok2_c.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmdnok2_c.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpmdnok2_c.py\", line\
    \ 18, in check\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\nAssertionError\n"
  stdout: ''
  timestamp: 1661984055
- exit_code: 1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    for i in range(len(numbers)):\n        result.append(max(numbers[i:i+numbers.index(i)+1]))\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa80m970j.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpa80m970j.py\", line 21,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpa80m970j.py\", line\
    \ 16, in check\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n  File \"\
    /tmp/tmpa80m970j.py\", line 11, in rolling_max\n    result.append(max(numbers[i:i+numbers.index(i)+1]))\n\
    ValueError: 0 is not in list\n"
  stdout: ''
  timestamp: 1661984055

{
  "name": "mbpp_415_max_Product",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max(max * max2, min * min2)",
    "        var max = arr(0)\n        var max2 = arr(0)\n        var min = arr(0)\n        var min2 = arr(0)\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            } else if (i > max2) {\n                max2 = i\n            }\n            if (i < min) {\n                min2 = min\n                min = i\n            } else if (i < min2) {\n                min2 = i\n            }\n        }\n        max(max * max2, min * min2)",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            }\n            else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            }\n            else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            } else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > result) result = max\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(0) * sorted(1), sorted(n - 1) * sorted(n - 2))",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        max(a * b * c * d * e * f * g * h * i * j, a * b * c * d * e * f * g * h * i * sorted(0))",
    "        val sorted = arr.sorted\n        val last = sorted.last\n        val secondLast = sorted(sorted.length - 2)\n        last * secondLast",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = arr(0)\n        var max2 = arr(1)\n        if (max2 > max) {\n            val temp = max\n            max = max2\n            max2 = temp\n        }\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n        }\n        max * max2",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = arr(0)\n        var secondMax = arr(1)\n        var min = arr(0)\n        var secondMin = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            } else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)",
    "        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) {\n                maxProduct = maxProduct.max(arr(i) * min)\n                max = arr(i)\n            }\n            else if (arr(i) < min) {\n                maxProduct = maxProduct.max(arr(i) * max)\n                min = arr(i)\n            }\n        }\n        maxProduct",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        val sorted = arr.sorted\n        val n = arr.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val n1 = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        return max",
    "        val sorted = arr.sorted\n        val n = arr.length\n        val max = sorted(n - 1) * sorted(n - 2)\n        val min = sorted(0) * sorted(1)\n        max max min",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val n = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44)",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val product1 = sorted(n - 1) * sorted(n - 2)\n        val product2 = sorted(0) * sorted(1)\n        if (product1 > product2) product1 else product2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        (sorted(n - 1) * sorted(n - 2)) max (sorted(0) * sorted(1))",
    "        val sorted = arr.sorted\n        val n = arr.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val secondFirst = sorted(1)\n        val first = sorted(0)\n        if (last < 0) last * secondLast\n        else if (first < 0 && secondFirst < 0) last * secondLast\n        else last * secondFirst",
    "        var max1 = Long.MinValue\n        var max2 = Long.MinValue\n        for (i <- arr) {\n            if (i > max1) {\n                max2 = max1\n                max1 = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max1 * max2",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(0)\n        val e = sorted(1)\n        max(a * b * c, a * d * e)",
    "        var max = arr(0)\n        var secondMax = arr(1)\n        var maxProduct = max * secondMax\n        for (i <- 2 until arr.length) {\n            val product = max * arr(i)\n            if (product > maxProduct) {\n                maxProduct = product\n                secondMax = max\n                max = arr(i)\n            } else if (product > secondMax * arr(i)) {\n                secondMax = arr(i)\n            }\n        }\n        maxProduct",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val penultimate = sorted(n - 3)\n        val antepenultimate = sorted(n - 4)\n        val lastProduct = last * secondLast\n        val penultimateProduct = penultimate * antepenultimate\n        if (lastProduct > penultimateProduct) lastProduct else penultimateProduct",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = arr(0)\n        var min = arr(0)\n        var maxProduct = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            maxProduct = max(maxProduct, max)\n        }\n        maxProduct",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val o = sorted(n - 14)\n        val p = sorted(n - 15)\n        val q = sorted(n - 16)\n        val r = sorted(n - 17)\n        val s = sorted(n - 18)\n        val t = sorted(n - 19)\n        val u = sorted(n - 20)\n        val v = sorted(n - 21)\n        val w = sorted(n - 22)\n        val x = sorted(n - 23)\n        val y = sorted(n - 24)\n        val z = sorted(n - 25)\n        val aa = sorted(n - 26)\n        val bb = sorted(n - 27)\n        val cc = sorted(n - 28)\n        val dd = sorted(n - 29)\n        val ee = sorted(n - 30)\n        val ff = sorted(n - 31)\n        val gg = sorted(n - 32)\n        val hh = sorted(n - 33)\n        val ii = sorted(n - 34)\n        val jj = sorted(n - 35)\n        val kk = sorted(n - 36)\n        val ll = sorted(n - 37)\n        val mm = sorted(n - 38)\n        val oo = sorted(n - 39)\n        val pp = sorted(n - 40)\n        val qq = sorted(n - 41)\n        val rr = sorted(n - 42)\n        val ss = sorted(n - 43)\n        val tt = sorted(n - 44)",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val n = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44)",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = arr(0)\n        var max2 = arr(0)\n        var min = arr(0)\n        var min2 = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max(max * max2, min * min2)",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = arr.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        a * b",
    "        var max = arr(0)\n        var secondMax = arr(1)\n        var min = arr(0)\n        var secondMin = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            } else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            }\n            else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > result) result = max\n        }\n        result",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(0)\n        val d = sorted(1)\n        max(a * b, c * d)",
    "        var max = arr.max\n        var max2 = arr.filter(_ != max).max\n        max * max2",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(0)\n        val e = sorted(1)\n        max(a * b * c, a * d * e)",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            val a = arr(i)\n            val b = max * a\n            val c = min * a\n            max = max(max(b, c), a)\n            min = min(min(b, c), a)\n            result = max(result, max)\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        max(a * b * c, a * b * d)",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val n = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val ab = sorted(n - 28)\n        val ac = sorted(n - 29)\n        val ad = sorted(n - 30)\n        val ae = sorted(n - 31)\n        val af = sorted(n - 32)\n        val ag = sorted(n - 33)\n        val ah = sorted(n - 34)\n        val ai = sorted(n - 35)\n        val aj = sorted(n - 36)\n        val ak = sorted(n - 37)\n        val al = sorted(n - 38)\n        val am = sorted(n - 39)\n        val an = sorted(n - 40)\n        val ao = sorted(n - 41)\n        val ap = sorted(n - 42)\n        val aq = sorted(n - 43)\n        val ar = sorted(n - 44)\n        val as =",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = arr.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = result(max, min)\n        }\n        result",
    "        var max = arr(0)\n        var max2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n        }\n        max * max2",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))",
    "        var max = arr.max\n        var max2 = arr.filter(_ != max).max\n        max * max2",
    "        val sorted = arr.sorted\n        val n = arr.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        max(a * b * c, a * d * e, a * d * f, a * e * f, a * b * d, a * b * e, a * b * f, a * c * d, a * c * e, a * c * f)",
    "        var max = arr(0) * arr(1)\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val penultimate = sorted(n - 3)\n        val antepenultimate = sorted(n - 4)\n        val max1 = last * secondLast\n        val max2 = penultimate * antepenultimate\n        if (max1 > max2) max1 else max2",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))",
    "        var max = arr(0)\n        var secondMax = arr(1)\n        var min = arr(0)\n        var secondMin = arr(1)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            } else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            val a = max * arr(i)\n            val b = min * arr(i)\n            max = max(a, b, arr(i))\n            min = min(a, b, arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            val temp = max\n            max = max(max * arr(i), min * arr(i), arr(i))\n            min = min(temp * arr(i), min * arr(i), arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val max = sorted(n - 1)\n        val secondMax = sorted(n - 2)\n        val min = sorted(0)\n        val secondMin = sorted(1)\n        if (max < 0) max * secondMax\n        else if (min > 0) max * secondMax\n        else max * secondMin",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        val sorted = arr.sorted\n        return max(sorted(0) * sorted(1), sorted(sorted.length - 1) * sorted(sorted.length - 2))",
    "        var max = arr(0)\n        var max2 = arr(0)\n        var min = arr(0)\n        var min2 = arr(0)\n        for (i <- 1 until arr.length) {\n            val a = arr(i)\n            if (a > max) {\n                max2 = max\n                max = a\n            } else if (a > max2) {\n                max2 = a\n            }\n            if (a < min) {\n                min2 = min\n                min = a\n            } else if (a < min2) {\n                min2 = a\n            }\n        }\n        max(max * max2, min * min2)",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            }\n            else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            }\n            else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2",
    "        val sorted = arr.sorted\n        max(sorted.last * sorted(sorted.length - 2), sorted.head * sorted(1))",
    "        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            }\n            else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            maxProduct = max(maxProduct, max)\n        }\n        maxProduct",
    "        val sorted = arr.sorted\n        val len = arr.length\n        val a = sorted(len - 1)\n        val b = sorted(len - 2)\n        a * b",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(0)\n        val d = sorted(1)\n        max(a * b, c * d)",
    "        val sorted = arr.sorted\n        val n = arr.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            val temp = max\n            max = max(max * arr(i), min * arr(i), arr(i))\n            min = min(temp * arr(i), min * arr(i), arr(i))\n            result = max(result, max)\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = arr(0)\n        var max2 = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n        }\n        max * max2",
    "        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            var product = arr(i) * max\n            if (product > maxProduct) {\n                maxProduct = product\n                max = arr(i)\n            }\n            product = arr(i) * min\n            if (product > maxProduct) {\n                maxProduct = product\n                min = arr(i)\n            }\n        }\n        return maxProduct",
    "        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) {\n                maxProduct = maxProduct.max(arr(i) * min)\n                max = arr(i)\n            }\n            else if (arr(i) < min) {\n                maxProduct = maxProduct.max(arr(i) * max)\n                min = arr(i)\n            }\n        }\n        return maxProduct",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            val a = max * arr(i)\n            val b = min * arr(i)\n            max = max(a, b, arr(i))\n            min = min(a, b, arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = arr(0)\n        var max2 = arr(0)\n        var min = arr(0)\n        var min2 = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max(max * max2, min * min2)",
    "        var max = arr(0)\n        var secondMax = arr(1)\n        var min = arr(0)\n        var secondMin = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            }\n            else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            }\n            else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        return max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        max(a * b * c, a * d * e, a * d * f, a * e * f, a * b * d, a * b * e, a * b * f, a * c * d, a * c * e, a * c * f, b * c * d, b * c * e, b * c * f, b * d * e, b * d * f, b * e * f, c * d * e, c * d * f, c * e * f, d * e * f)",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val product1 = sorted(n - 1) * sorted(n - 2)\n        val product2 = sorted(0) * sorted(1)\n        max(product1, product2)",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            } else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > result) result = max\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        (sorted(n - 1) * sorted(n - 2)) max (sorted(0) * sorted(1))",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = arr(0)\n        var min = arr(0)\n        var maxProduct = arr(0)\n        for (i <- 1 until arr.length) {\n            val curr = arr(i)\n            val tempMax = max\n            max = max(max * curr, min * curr, curr)\n            min = min(tempMax * curr, min * curr, curr)\n            maxProduct = max(maxProduct, max)\n        }\n        maxProduct",
    "        var max = arr(0)\n        var secondMax = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n        }\n        max * secondMax",
    "        var max1 = Long.MinValue\n        var max2 = Long.MinValue\n        for (i <- arr) {\n            if (i > max1) {\n                max2 = max1\n                max1 = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max1 * max2",
    "        var max = 0L\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        return max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))",
    "        var max = arr.max\n        var maxIndex = arr.indexOf(max)\n        arr.remove(maxIndex)\n        var max2 = arr.max\n        max * max2",
    "        var max = arr(0) * arr(1)\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max1 = Long.MinValue\n        var max2 = Long.MinValue\n        for (i <- arr) {\n            if (i > max1) {\n                max2 = max1\n                max1 = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max1 * max2",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length - 1\n        max(sorted(n) * sorted(n - 1), sorted(0) * sorted(1))",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val lastTwo = last * secondLast\n        val first = sorted(0)\n        val second = sorted(1)\n        val firstTwo = first * second\n        if (lastTwo > firstTwo) lastTwo else firstTwo",
    "        val sorted = arr.sorted\n        val last = sorted.last\n        val secondLast = sorted(sorted.length - 2)\n        val first = sorted.head\n        val second = sorted(1)\n        max(last * secondLast, first * second)",
    "        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        return max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(0)\n        val e = sorted(1)\n        max(a * b * c, a * d * e)",
    "        val sorted = arr.sorted\n        val len = sorted.length\n        val a = sorted(len - 1)\n        val b = sorted(len - 2)\n        val c = sorted(len - 3)\n        val d = sorted(len - 4)\n        val e = sorted(len - 5)\n        val f = sorted(len - 6)\n        val g = sorted(len - 7)\n        val h = sorted(len - 8)\n        val i = sorted(len - 9)\n        val j = sorted(len - 10)\n        val k = sorted(len - 11)\n        val l = sorted(len - 12)\n        val m = sorted(len - 13)\n        val n = sorted(len - 14)\n        val o = sorted(len - 15)\n        val p = sorted(len - 16)\n        val q = sorted(len - 17)\n        val r = sorted(len - 18)\n        val s = sorted(len - 19)\n        val t = sorted(len - 20)\n        val u = sorted(len - 21)\n        val v = sorted(len - 22)\n        val w = sorted(len - 23)\n        val x = sorted(len - 24)\n        val y = sorted(len - 25)\n        val z = sorted(len - 26)\n        val aa = sorted(len - 27)\n        val bb = sorted(len - 28)\n        val cc = sorted(len - 29)\n        val dd = sorted(len - 30)\n        val ee = sorted(len - 31)\n        val ff = sorted(len - 32)\n        val gg = sorted(len - 33)\n        val hh = sorted(len - 34)\n        val ii = sorted(len - 35)\n        val jj = sorted(len - 36)\n        val kk = sorted(len - 37)\n        val ll = sorted(len - 38)\n        val mm = sorted(len - 39)\n        val nn = sorted(len - 40)\n        val oo = sorted(len - 41)\n        val pp = sorted(len - 42)\n        val qq = sorted(len - 43)\n        val rr = sorted(len - 44)",
    "        var max = arr(0)\n        var secondMax = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n        }\n        max * secondMax",
    "        val sorted = arr.sorted\n        val last = sorted.last\n        val secondLast = sorted(sorted.length - 2)\n        last * secondLast",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(0)\n        val d = sorted(1)\n        max(a * b, c * d)",
    "        var max = arr(0)\n        var secondMax = arr(0)\n        var min = arr(0)\n        var secondMin = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            } else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val secondFirst = sorted(1)\n        val first = sorted(0)\n        if (last * secondLast > secondFirst * first) last * secondLast else secondFirst * first",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            val a = arr(i)\n            val b = max * a\n            val c = min * a\n            max = max(max(b, c), a)\n            min = min(min(b, c), a)\n            result = max(result, max)\n        }\n        result",
    "        var max = arr(0)\n        var min = arr(0)\n        var maxProduct = arr(0)\n        for (i <- 1 until arr.length) {\n            val a = max * arr(i)\n            val b = min * arr(i)\n            max = max(a, b, arr(i))\n            min = min(a, b, arr(i))\n            maxProduct = max(maxProduct, max)\n        }\n        maxProduct",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))",
    "        arr.sortWith(_ > _).take(2).product",
    "        arr.sortWith(_ > _).take(2).product",
    "        var max = 0L\n        var max1 = 0L\n        var max2 = 0L\n        var min1 = 0L\n        var min2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max1\n                max1 = max\n                max = i\n            } else if (i > max1) {\n                max2 = max1\n                max1 = i\n            } else if (i > max2) {\n                max2 = i\n            }\n            if (i < min1) {\n                min2 = min1\n                min1 = i\n            } else if (i < min2) {\n                min2 = i\n            }\n        }\n        max(max1 * max2, min1 * min2)",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        return max",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = arr(0)\n        var secondMax = arr(1)\n        var min = arr(0)\n        var secondMin = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            } else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)",
    "        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > maxProduct) {\n                    maxProduct = product\n                    max = max(arr(i), arr(j))\n                    min = min(arr(i), arr(j))\n                }\n            }\n        }\n        maxProduct",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = arr(0)\n        var max2 = arr(0)\n        var min = arr(0)\n        var min2 = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        return max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = result(max, min)\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(0) * sorted(1), sorted(n - 1) * sorted(n - 2))",
    "        var max = arr(0)\n        var max2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n        }\n        max * max2",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val o = sorted(n - 14)\n        val p = sorted(n - 15)\n        val q = sorted(n - 16)\n        val r = sorted(n - 17)\n        val s = sorted(n - 18)\n        val t = sorted(n - 19)\n        val u = sorted(n - 20)\n        val v = sorted(n - 21)\n        val w = sorted(n - 22)\n        val x = sorted(n - 23)\n        val y = sorted(n - 24)\n        val z = sorted(n - 25)\n        val aa = sorted(n - 26)\n        val bb = sorted(n - 27)\n        val cc = sorted(n - 28)\n        val dd = sorted(n - 29)\n        val ee = sorted(n - 30)\n        val ff = sorted(n - 31)\n        val gg = sorted(n - 32)\n        val hh = sorted(n - 33)\n        val ii = sorted(n - 34)\n        val jj = sorted(n - 35)\n        val kk = sorted(n - 36)\n        val ll = sorted(n - 37)\n        val mm = sorted(n - 38)\n        val nn = sorted(n - 39)\n        val oo = sorted(n - 40)\n        val pp = sorted(n - 41)\n        val qq = sorted(n - 42)\n        val rr = sorted(n - 43)\n        val ss = sorted(n - 44)",
    "        if (arr.length == 0) return 0\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            val a = arr(i)\n            val b = max * a\n            val c = min * a\n            max = max(max(b, c), a)\n            min = min(min(b, c), a)\n            result = max(result, max)\n        }\n        result",
    "        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            }\n            else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            }\n            else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = arr(0)\n        var secondMax = arr(1)\n        if (arr(1) > arr(0)) {\n            max = arr(1)\n            secondMax = arr(0)\n        }\n        for (i <- 2 to arr.length - 1) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            }\n            else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n        }\n        max * secondMax",
    "        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) {\n                maxProduct = maxProduct.max(arr(i) * min)\n                max = arr(i)\n            } else if (arr(i) < min) {\n                maxProduct = maxProduct.max(arr(i) * max)\n                min = arr(i)\n            }\n        }\n        maxProduct",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        (sorted(n - 1) * sorted(n - 2)) max (sorted(0) * sorted(1))",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            if (arr(i) > 0) {\n                maxProduct = max(maxProduct, maxProduct / min * arr(i))\n                min = min(min, arr(i))\n            } else {\n                maxProduct = max(maxProduct, maxProduct / max * arr(i))\n                max = max(max, arr(i))\n            }\n        }\n        maxProduct",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val n1 = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = 0L\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) {\n                maxProduct = maxProduct.max(min * arr(i))\n                max = arr(i)\n            }\n            else if (arr(i) < min) {\n                maxProduct = maxProduct.max(max * arr(i))\n                min = arr(i)\n            }\n        }\n        return maxProduct",
    "        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            }\n            else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            }\n            else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        max(a * b, c * d)",
    "        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max(max * max2, min * min2)",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val secondFirst = sorted(1)\n        val first = sorted(0)\n        if (last * secondLast > secondFirst * first) last * secondLast else secondFirst * first",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        arr.sortWith(_ > _).take(2).product",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val max = sorted(n - 1)\n        val secondMax = sorted(n - 2)\n        val min = sorted(0)\n        val secondMin = sorted(1)\n        max(max * secondMax, max * min * secondMin)",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        sorted(n - 1) * sorted(n - 2)",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        return max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            var product = arr(i) * max\n            if (product > maxProduct) maxProduct = product\n            product = arr(i) * min\n            if (product > maxProduct) maxProduct = product\n        }\n        return maxProduct",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            }\n            else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n        }\n        max * max2",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44",
    "        var max1 = Long.MinValue\n        var max2 = Long.MinValue\n        for (i <- arr) {\n            if (i > max1) {\n                max2 = max1\n                max1 = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max1 * max2",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val thirdLast = sorted(n - 3)\n        val first = sorted(0)\n        val second = sorted(1)\n        val third = sorted(2)\n        val a = last * secondLast * thirdLast\n        val b = first * second * third\n        if (a > b) a else b",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(0)\n        val d = sorted(1)\n        max(a * b, c * d)",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(0)\n        val e = sorted(1)\n        max(a * b * c, a * d * e)",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        max(a * b * c * d * e * f * g * h * i * j, a * b * c * d * e * f * g * h * i * sorted(0))",
    "        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2",
    "        val sorted = arr.sorted\n        max(sorted(0) * sorted(1), sorted(arr.length - 1) * sorted(arr.length - 2))",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(0)\n        val e = sorted(1)\n        val f = sorted(2)\n        max(a * b * c, a * d * e)",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))",
    "        var max = arr(0)\n        var max2 = arr(0)\n        var min = arr(0)\n        var min2 = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max(max * max2, min * min2)",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val o = sorted(n - 14)\n        val p = sorted(n - 15)\n        val q = sorted(n - 16)\n        val r = sorted(n - 17)\n        val s = sorted(n - 18)\n        val t = sorted(n - 19)\n        val u = sorted(n - 20)\n        val v = sorted(n - 21)\n        val w = sorted(n - 22)\n        val x = sorted(n - 23)\n        val y = sorted(n - 24)\n        val z = sorted(n - 25)\n        val aa = sorted(n - 26)\n        val bb = sorted(n - 27)\n        val cc = sorted(n - 28)\n        val dd = sorted(n - 29)\n        val ee = sorted(n - 30)\n        val ff = sorted(n - 31)\n        val gg = sorted(n - 32)\n        val hh = sorted(n - 33)\n        val ii = sorted(n - 34)\n        val jj = sorted(n - 35)\n        val kk = sorted(n - 36)\n        val ll = sorted(n - 37)\n        val mm = sorted(n - 38)\n        val oo = sorted(n - 39)\n        val pp = sorted(n - 40)\n        val qq = sorted(n - 41)\n        val rr = sorted(n - 42)\n        val ss = sorted(n - 43)\n        val tt = sorted(n - 44)",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            } else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > result) result = max\n        }\n        result",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val secondFirst = sorted(1)\n        val first = sorted(0)\n        if (last * secondLast > secondFirst * first) last * secondLast else secondFirst * first"
  ]
}
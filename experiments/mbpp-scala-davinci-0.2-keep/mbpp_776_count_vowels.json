{
  "name": "mbpp_776_count_vowels",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count those characters which have vowels as their neighbors in the given string.\n    def countVowels(test_str : String) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_776_count_vowels.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countVowels((\"bestinstareels\")) == (7l));\n    assert(countVowels((\"partofthejourneyistheend\")) == (12l));\n    assert(countVowels((\"amazonprime\")) == (5l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            }\n            else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (vowels.contains(test_str_arr(i))) {\n                if (i > 0 && vowels.contains(test_str_arr(i - 1))) count += 1\n                if (i < test_str_arr.length - 1 && vowels.contains(test_str_arr(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0 && vowels.contains(test_str(i + 1))) count += 1\n            else if (i == test_str.length - 1 && vowels.contains(test_str(i - 1))) count += 1\n            else if (vowels.contains(test_str(i - 1)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        val n = str.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < n - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i > 0 && vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            if (i < str.length - 1 && vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else if (i == test_str.length - 1) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0 && vowels.contains(test_str(i + 1))) count += 1\n            else if (i == test_str.length - 1 && vowels.contains(test_str(i - 1))) count += 1\n            else if (vowels.contains(test_str(i - 1)) || vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1))) count += 1\n            }\n        }\n        return count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n            }\n            else if (i == test_str.length - 1) {\n                if (vowels.contains(test_str(i)) && vowels.contains(test_str(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(test_str(i)) && (vowels.contains(test_str(i + 1)) || vowels.contains(test_str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            }\n            else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i + 1)) || vowels.contains(test_str_arr(i - 1)))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                }\n            }\n            else if (i == test_str.length - 1) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                }\n            }\n            else {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i'",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 1 until test_str_arr.length - 1) {\n            if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1)) && vowels.contains(test_str_arr(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0 && vowels.contains(test_str(i + 1))) count += 1\n            else if (i == test_str.length - 1 && vowels.contains(test_str(i - 1))) count += 1\n            else if (vowels.contains(test_str(i - 1)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i + 1))) count += 1\n            } else if (i == test_str.length - 1) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i - 1))) count += 1\n            } else {\n                if (isVowel(test_str(i)) && (isVowel(test_str(i + 1)) || isVowel(test_str(i - 1)))) count += 1\n            }\n        }\n        return count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            }\n            else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i + 1)) || vowels.contains(test_str_arr(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (vowels.contains(test_str(i))) {\n                if (i > 0 && vowels.contains(test_str(i - 1))) count += 1\n                if (i < test_str.length - 1 && vowels.contains(test_str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            }\n            else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0 && vowels.contains(test_str_arr(i + 1))) count += 1\n            else if (i == test_str_arr.length - 1 && vowels.contains(test_str_arr(i - 1))) count += 1\n            else if (vowels.contains(test_str_arr(i - 1)) && vowels.contains(test_str_arr(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (vowels.contains(test_str(i))) {\n                if (i > 0 && vowels.contains(test_str(i - 1))) count += 1\n                if (i < test_str.length - 1 && vowels.contains(test_str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n            } else if (i == test_str.length - 1) {\n                if (vowels.contains(test_str(i)) && vowels.contains(test_str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str(i)) && (vowels.contains(test_str(i + 1)) || vowels.contains(test_str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i + 1))) count += 1\n            } else if (i == test_str.length - 1) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i - 1))) count += 1\n            } else {\n                if (isVowel(test_str(i)) && isVowel(test_str(i - 1)) && isVowel(test_str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n            } else if (i == test_str.length - 1) {\n                if (vowels.contains(test_str(i)) && vowels.contains(test_str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str(i)) && (vowels.contains(test_str(i - 1)) || vowels.contains(test_str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0 && (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u')) {\n                count += 1\n            }\n            else if (i == test_str.length - 1 && (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u')) {\n                count += 1\n            }\n            else if ((test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') && (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u' || test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u')) {\n                count += 1\n            }\n        }\n        return count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val vowel_count = test_str.toLowerCase.zipWithIndex.filter(x => vowels.contains(x._1) && vowels.contains(test_str.toLowerCase(x._2 + 1))).size\n        vowel_count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (vowels.contains(test_str_arr(i))) {\n                if (i > 0 && vowels.contains(test_str_arr(i - 1))) count += 1\n                if (i < test_str_arr.length - 1 && vowels.contains(test_str_arr(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 1 until str.length - 1) {\n            if (vowels.contains(str(i)) && vowels.contains(str(i - 1)) || vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0 && vowels.contains(str(i + 1))) count += 1\n            else if (i == str.length - 1 && vowels.contains(str(i - 1))) count += 1\n            else if (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i > 0 && vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            if (i < str.length - 1 && vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (vowels.contains(test_str(i))) {\n                if (i > 0 && vowels.contains(test_str(i - 1))) count += 1\n                if (i < test_str.length - 1 && vowels.contains(test_str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length - 1) {\n            if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n        }\n        return count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i + 1)) || vowels.contains(str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else if (i == test_str.length - 1) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase()\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i > 0 && i < str.length - 1) {\n                if (vowels.contains(str(i - 1)) && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0 && vowels.contains(str(i + 1))) count += 1\n            else if (i == str.length - 1 && vowels.contains(str(i - 1))) count += 1\n            else if (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length - 1) {\n            if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        val n = str.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < n - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i + 1))) count += 1\n            } else if (i == test_str.length - 1) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i - 1))) count += 1\n            } else {\n                if (isVowel(test_str(i)) && (isVowel(test_str(i - 1)) || isVowel(test_str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            }\n            else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i + 1)) || vowels.contains(str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i > 0 && i < test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i - 1)) && vowels.contains(test_str_arr(i + 1))) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length - 1) {\n            if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i + 1))) count += 1\n            }\n            else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        return count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i > 0 && i < str.length - 1) {\n                if (vowels.contains(str(i - 1)) && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        test_str.toLowerCase.toList.sliding(3).filter(x => vowels.contains(x(0)) && vowels.contains(x(2))).size",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase()\n        var count = 0\n        for (i <- 0 until str.length - 1) {\n            if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i + 1)) || vowels.contains(str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = \"aeiou\"\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (vowels.contains(test_str(i))) {\n                if (i == 0) {\n                    if (vowels.contains(test_str(i + 1))) count += 1\n                } else if (i == test_str.length - 1) {\n                    if (vowels.contains(test_str(i - 1))) count += 1\n                } else {\n                    if (vowels.contains(test_str(i - 1)) || vowels.contains(test_str(i + 1))) count += 1\n                }\n            }\n        }\n        count",
    "        val vowels = \"aeiou\"\n        val vowels_set = vowels.toSet\n        val test_str_set = test_str.toSet\n        val test_str_set_intersect = test_str_set.intersect(vowels_set)\n        val test_str_set_intersect_size = test_str_set_intersect.size\n        val test_str_set_intersect_size_double = test_str_set_intersect_size * 2\n        val test_str_set_intersect_size_double_minus_one = test_str_set_intersect_size_double - 1\n        val test_str_set_intersect_size_double_minus_one_half = test_str_set_intersect_size_double_minus_one / 2\n        val test_str_set_intersect_size_double_minus_one_half_long = test_str_set_intersect_size_double_minus_one_half.toLong\n        test_str_set_intersect_size_double_minus_one_half_long",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i + 1))) count += 1\n            }\n            else if (i == test_str.length - 1) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i - 1))) count += 1\n            }\n            else {\n                if (isVowel(test_str(i)) && (isVowel(test_str(i + 1)) || isVowel(test_str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i > 0 && vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            if (i < str.length - 1 && vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        test_str.zipWithIndex.filter(x => vowels.contains(x._1) && vowels.contains(test_str(x._2 + 1))).length",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (vowels.contains(test_str(i))) {\n                if (i == 0) {\n                    if (vowels.contains(test_str(i + 1))) count += 1\n                } else if (i == test_str.length - 1) {\n                    if (vowels.contains(test_str(i - 1))) count += 1\n                } else {\n                    if (vowels.contains(test_str(i - 1)) || vowels.contains(test_str(i + 1))) count += 1\n                }\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase()\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i == 0 && vowels.contains(str(i + 1))) count += 1\n                else if (i == str.length - 1 && vowels.contains(str(i - 1))) count += 1\n                else if (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i > 0 && vowels.contains(test_str(i)) && vowels.contains(test_str(i - 1))) count += 1\n            if (i < test_str.length - 1 && vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n            } else if (i == test_str.length - 1) {\n                if (vowels.contains(test_str(i)) && vowels.contains(test_str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str(i)) && (vowels.contains(test_str(i + 1)) || vowels.contains(test_str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i + 1))) count += 1\n            }\n            else if (i == test_str.length - 1) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i - 1))) count += 1\n            }\n            else {\n                if (isVowel(test_str(i)) && (isVowel(test_str(i + 1)) || isVowel(test_str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length - 1) {\n            if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until str_arr.length - 1) {\n            if (vowels.contains(str_arr(i)) && vowels.contains(str_arr(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i > 0 && vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            if (i < str.length - 1 && vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            }\n            else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i + 1)) || vowels.contains(str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length - 1) {\n            if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i + 1)) || vowels.contains(str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0 && isVowel(test_str(i + 1))) count += 1\n            else if (i == test_str.length - 1 && isVowel(test_str(i - 1))) count += 1\n            else if (isVowel(test_str(i - 1)) && isVowel(test_str(i + 1))) count += 1\n        }\n        return count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i < str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            }\n            if (i > 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else if (i == test_str.length - 1) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        test_str.toLowerCase.zipWithIndex.filter(x => vowels.contains(x._1) && (x._2 == 0 || x._2 == test_str.length - 1 || vowels.contains(test_str(x._2 - 1)) || vowels.contains(test_str(x._2 + 1)))).length",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            }\n            else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n            }\n            else if (i == test_str.length - 1) {\n                if (vowels.contains(test_str(i)) && vowels.contains(test_str(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(test_str(i)) && (vowels.contains(test_str(i - 1)) || vowels.contains(test_str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else if (i == test_str.length - 1) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            }\n            else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else if (i == test_str.length - 1) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until str_arr.length - 1) {\n            if (vowels.contains(str_arr(i)) && vowels.contains(str_arr(i + 1))) {\n                count += 1\n            }\n        }\n        count",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0 && vowels.contains(test_str(i + 1))) count += 1\n            else if (i == test_str.length - 1 && vowels.contains(test_str(i - 1))) count += 1\n            else if (vowels.contains(test_str(i - 1)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n            }\n            else if (i == test_str.length - 1) {\n                if (vowels.contains(test_str(i)) && vowels.contains(test_str(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(test_str(i)) && (vowels.contains(test_str(i - 1)) || vowels.contains(test_str(i + 1)))) count += 1\n            }\n        }\n        return count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1)) && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase()\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else if (i == test_str.length - 1) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str",
    "        var count = 0\n        for (i <- 0 to test_str.length - 1) {\n            if (i == 0) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i + 1))) count += 1\n            } else if (i == test_str.length - 1) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i - 1))) count += 1\n            } else {\n                if (isVowel(test_str(i)) && (isVowel(test_str(i - 1)) || isVowel(test_str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            }\n            else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            }\n            else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i + 1)) || vowels.contains(str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        test_str.zipWithIndex.filter(x => vowels.contains(x._1) && vowels.contains(test_str(x._2 + 1))).size",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length - 1) {\n            if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase()\n        var count = 0\n        for (i <- 0 to str.length - 1) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str_arr = test_str.toArray\n        var count = 0\n        for (i <- 0 until str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(str_arr(i)) && vowels.contains(str_arr(i + 1))) count += 1\n            } else if (i == str_arr.length - 1) {\n                if (vowels.contains(str_arr(i)) && vowels.contains(str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str_arr(i)) && (vowels.contains(str_arr(i + 1)) || vowels.contains(str_arr(i - 1)))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                }\n            }\n            else if (i == test_str.length - 1) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                }\n            }\n            else {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i'",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0 && vowels.contains(test_str_arr(i + 1))) count += 1\n            else if (i == test_str_arr.length - 1 && vowels.contains(test_str_arr(i - 1))) count += 1\n            else if (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1))) count += 1\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else if (i == test_str.length - 1) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length - 1) {\n            if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i > 0 && vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            if (i < str.length - 1 && vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        return count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase()\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        val n = str.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (i == 0 && vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            else if (i == n - 1 && vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            else if (i > 0 && i < n - 1 && vowels.contains(str(i)) && (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1)))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        val str_len = str.length\n        var count = 0\n        for (i <- 0 until str_len) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str_len - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else if (i == test_str.length - 1) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i + 1)) || vowels.contains(test_str_arr(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i > 0 && vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            if (i < str.length - 1 && vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val vowels_count = test_str.filter(vowels.contains(_)).length\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i > 0 && i < test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i - 1)) && vowels.contains(test_str_arr(i + 1))) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else if (i == test_str.length - 1) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i + 1)) || vowels.contains(test_str_arr(i - 1))) count += 1\n            }\n        }\n        return count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0 && vowels.contains(test_str(i + 1))) count += 1\n            else if (i == test_str.length - 1 && vowels.contains(test_str(i - 1))) count += 1\n            else if (vowels.contains(test_str(i - 1)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i > 0 && vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            if (i < str.length - 1 && vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0 && vowels.contains(test_str_arr(i + 1))) count += 1\n            else if (i == test_str_arr.length - 1 && vowels.contains(test_str_arr(i - 1))) count += 1\n            else if (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1))) count += 1\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else if (i == test_str.length - 1) {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_str(i - 1) == 'u') {\n                        count += 1\n                    }\n                }\n            } else {\n                if (test_str(i) == 'a' || test_str(i) == 'e' || test_str(i) == 'i' || test_str(i) == 'o' || test_str(i) == 'u') {\n                    if (test_str(i + 1) == 'a' || test_str(i + 1) == 'e' || test_str(i + 1) == 'i' || test_str(i + 1) == 'o' || test_str(i + 1) == 'u' || test_str(i - 1) == 'a' || test_str(i - 1) == 'e' || test_str(i - 1) == 'i' || test_str(i - 1) == 'o' || test_",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length - 1) {\n            if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until str_arr.length) {\n            if (i == 0 && vowels.contains(str_arr(i + 1))) count += 1\n            else if (i == str_arr.length - 1 && vowels.contains(str_arr(i - 1))) count += 1\n            else if (vowels.contains(str_arr(i - 1)) && vowels.contains(str_arr(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 1 until str.length - 1) {\n            if (vowels.contains(str(i)) && vowels.contains(str(i - 1)) || vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i + 1))) count += 1\n            } else if (i == test_str.length - 1) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i - 1))) count += 1\n            } else {\n                if (isVowel(test_str(i)) && (isVowel(test_str(i + 1)) || isVowel(test_str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i > 0 && vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            if (i < str.length - 1 && vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (vowels.contains(test_str(i))) {\n                if (i > 0 && vowels.contains(test_str(i - 1))) count += 1\n                if (i < test_str.length - 1 && vowels.contains(test_str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (vowels.contains(test_str(i))) {\n                if (i > 0 && vowels.contains(test_str(i - 1))) count += 1\n                if (i < test_str.length - 1 && vowels.contains(test_str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        val n = str.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < n - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0 && vowels.contains(test_str(i + 1))) count += 1\n            else if (i == test_str.length - 1 && vowels.contains(test_str(i - 1))) count += 1\n            else if (vowels.contains(test_str(i - 1)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i > 0 && vowels.contains(test_str_arr(i - 1)) && vowels.contains(test_str_arr(i))) count += 1\n            if (i < test_str_arr.length - 1 && vowels.contains(test_str_arr(i + 1)) && vowels.contains(test_str_arr(i))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        val str_len = str.length\n        var count = 0\n        for (i <- 0 until str_len) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str_len - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(str_arr(i)) && vowels.contains(str_arr(i + 1))) count += 1\n            } else if (i == str_arr.length - 1) {\n                if (vowels.contains(str_arr(i)) && vowels.contains(str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str_arr(i)) && (vowels.contains(str_arr(i - 1)) || vowels.contains(str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val test_str_chars = test_str.toList\n        val test_str_chars_with_neighbors = test_str_chars.zip(test_str_chars.tail)\n        test_str_chars_with_neighbors.count(x => vowels.contains(x._1) || vowels.contains(x._2))",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length - 1) {\n            if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) {\n                count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0 && vowels.contains(str(i + 1))) count += 1\n            else if (i == str.length - 1 && vowels.contains(str(i - 1))) count += 1\n            else if (vowels.contains(str(i - 1)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (isVowel(test_str(i)) && isVowel(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i + 1)) || vowels.contains(str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = \"aeiou\"\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        return count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i + 1)) || vowels.contains(str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i > 0 && vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            if (i < test_str_arr.length - 1 && vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i + 1)) || vowels.contains(test_str_arr(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_chars = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_chars.length - 1) {\n            if (vowels.contains(test_str_chars(i)) && vowels.contains(test_str_chars(i + 1))) count += 1\n        }\n        return count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i + 1)) || vowels.contains(str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i - 1)) || vowels.contains(str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i > 0 && vowels.contains(test_str(i - 1)) && vowels.contains(test_str(i))) count += 1\n            if (i < test_str.length - 1 && vowels.contains(test_str(i + 1)) && vowels.contains(test_str(i))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (vowels.contains(test_str(i))) {\n                if (i > 0 && vowels.contains(test_str(i - 1))) count += 1\n                if (i < test_str.length - 1 && vowels.contains(test_str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0 && vowels.contains(test_str(i + 1))) count += 1\n            else if (i == test_str.length - 1 && vowels.contains(test_str(i - 1))) count += 1\n            else if (vowels.contains(test_str(i - 1)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i > 0 && vowels.contains(test_str_arr(i - 1))) count += 1\n            if (i < test_str_arr.length - 1 && vowels.contains(test_str_arr(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(str_arr(i + 1))) count += 1\n            } else if (i == str_arr.length - 1) {\n                if (vowels.contains(str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str_arr(i - 1)) || vowels.contains(str_arr(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = \"aeiou\"\n        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0 && vowels.contains(test_str(i + 1))) count += 1\n            else if (i == test_str.length - 1 && vowels.contains(test_str(i - 1))) count += 1\n            else if (vowels.contains(test_str(i - 1)) || vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i > 0 && vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            if (i < str.length - 1 && vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        test_str.zipWithIndex.filter(x => vowels.contains(x._1) && vowels.contains(test_str(x._2 + 1))).size",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(str_arr(i)) && vowels.contains(str_arr(i + 1))) count += 1\n            } else if (i == str_arr.length - 1) {\n                if (vowels.contains(str_arr(i)) && vowels.contains(str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str_arr(i)) && (vowels.contains(str_arr(i - 1)) || vowels.contains(str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) {\n                    count += 1\n                }\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) {\n                    count += 1\n                }\n            } else {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1)) && vowels.contains(str(i + 1))) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            } else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            } else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i + 1)) || vowels.contains(test_str_arr(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val test_str_arr = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until test_str_arr.length) {\n            if (i == 0) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i + 1))) count += 1\n            }\n            else if (i == test_str_arr.length - 1) {\n                if (vowels.contains(test_str_arr(i)) && vowels.contains(test_str_arr(i - 1))) count += 1\n            }\n            else {\n                if (vowels.contains(test_str_arr(i)) && (vowels.contains(test_str_arr(i - 1)) || vowels.contains(test_str_arr(i + 1)))) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i + 1))) count += 1\n            } else if (i == test_str.length - 1) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i - 1))) count += 1\n            } else {\n                if (isVowel(test_str(i)) && (isVowel(test_str(i - 1)) || isVowel(test_str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val chars = test_str.toCharArray\n        var count = 0\n        for (i <- 0 until chars.length) {\n            if (i == 0) {\n                if (vowels.contains(chars(i)) && vowels.contains(chars(i + 1))) count += 1\n            } else if (i == chars.length - 1) {\n                if (vowels.contains(chars(i)) && vowels.contains(chars(i - 1))) count += 1\n            } else {\n                if (vowels.contains(chars(i)) && (vowels.contains(chars(i - 1)) || vowels.contains(chars(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i + 1))) count += 1\n            } else if (i == str.length - 1) {\n                if (vowels.contains(str(i)) && vowels.contains(str(i - 1))) count += 1\n            } else {\n                if (vowels.contains(str(i)) && (vowels.contains(str(i + 1)) || vowels.contains(str(i - 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (i == 0 && vowels.contains(str(i + 1))) count += 1\n            else if (i == str.length - 1 && vowels.contains(str(i - 1))) count += 1\n            else if (vowels.contains(str(i - 1)) && vowels.contains(str(i + 1))) count += 1\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var count = 0\n        for (i <- 0 until test_str.length - 1) {\n            if (vowels.contains(test_str(i)) && vowels.contains(test_str(i + 1))) count += 1\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until test_str.length) {\n            if (i == 0) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i + 1))) count += 1\n            } else if (i == test_str.length - 1) {\n                if (isVowel(test_str(i)) && isVowel(test_str(i - 1))) count += 1\n            } else {\n                if (isVowel(test_str(i)) && (isVowel(test_str(i - 1)) || isVowel(test_str(i + 1)))) count += 1\n            }\n        }\n        count",
    "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val str = test_str.toLowerCase\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (vowels.contains(str(i))) {\n                if (i > 0 && vowels.contains(str(i - 1))) count += 1\n                if (i < str.length - 1 && vowels.contains(str(i + 1))) count += 1\n            }\n        }\n        count"
  ]
}
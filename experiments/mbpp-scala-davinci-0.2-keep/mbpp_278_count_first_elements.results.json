{
  "name": "mbpp_278_count_first_elements",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_278_count_first_elements.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        if (test_tup.isLeft) {\n            return test_tup.left.get\n        }\n        else {\n            return test_tup.right.get\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz2bs6dho.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz2bs6dho.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz2bs6dho.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        var count = 0\n        for (i <- 1 to tup.toInt) {\n            if (i * i <= tup) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6xvm2bgr.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6xvm2bgr.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6xvm2bgr.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n        val n = tup.toString.length\n        val num = tup.toString.toList.map(_.asDigit.toLong)\n        val sum = num.map(x => x * pow(10, n - 1).toLong).sum\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptmd1kgdp.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptmd1kgdp.scala:17:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptmd1kgdp.scala:18:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val k = tup._2\n        val result = (n - k + 1) * (n - k) / 2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpswgf7elx.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpswgf7elx.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpswgf7elx.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpswgf7elx.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpswgf7elx.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, L",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup match {\n            case Left(x) => (x, 0)\n            case Right(x) => (0, x)\n        }\n        val (a, b) = tup\n        val c = a + b\n        val d = abs(a - b)\n        val e = c - d\n        val f = e / 2\n        val g = c - f\n        f\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1ob4bx0z.scala:11:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mc\u001b[0m = a + b\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of AnyVal, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1ob4bx0z.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = abs(a - b)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue - is not a member of AnyVal, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ob4bx0z.scala:19:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ob4bx0z.scala:20:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val tup_len = tup.productArity\n        var count = 0\n        for (i <- 0 until tup_len) {\n            if (tup.productElement(i) == tup_len) return count\n            count += 1\n        }\n        return -1\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp77jp7jeh.scala:7:26 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup_len\u001b[0m = tup.productArity\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      value productArity is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp77jp7jeh.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (tup.productElement(i) == tup_len) \u001b[33mreturn\u001b[0m count\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value productElement is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp77jp7jeh.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp77jp7jeh.scala:17:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp77jp7jeh.scala:18:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val k = tup._2\n        val p = tup._3\n        val q = tup._4\n        val r = tup._5\n        val s = tup._6\n        val a = Array.ofDim[Long](n)\n        for (i <- 0 until n) {\n            a(i) = (i * k + p) % r + s\n        }\n        var sum = 0L\n        for (i <- 0 until n) {\n            sum += a(i)\n        }\n        var count = 0L\n        var left = 0L\n        var right = 0L\n        for (i <- 0 until n) {\n            if (left < sum - right) {\n                count += 1\n                left += a(i)\n            } else {\n                right += a(i)\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123417,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc0sb1043.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc0sb1043.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc0sb1043.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mp\u001b[0m = tup._3\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _3 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc0sb1043.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mq\u001b[0m = tup._4\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _4 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc0sb1043.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mr\u001b[0m = tup._5\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _5 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc0sb1043.scala:12:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36ms\u001b[0m = tup._6\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _6 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0sb1043.scala:35:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(a) => a\n            case Right(a) => a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123414,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5nmn_ebh.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5nmn_ebh.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5nmn_ebh.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val test_tup_list = test_tup.right.toOption.get.toList\n        val test_tup_list_set = test_tup_list.toSet\n        val test_tup_list_set_size = test_tup_list_set.size\n        val test_tup_list_set_max = test_tup_list_set.max\n        val test_tup_list_set_min = test_tup_list_set.min\n        val test_tup_list_set_range = test_tup_list_set_max - test_tup_list_set_min + 1\n        if (test_tup_list_set_size == test_tup_list_set_range) {\n            test_tup_list_set_size\n        } else {\n            test_tup_list_set_size - 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgosvwf3n.scala:6:56 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtest_tup_list\u001b[0m = test_tup.right.toOption.get.toList\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m           value toList is not a member of Long - did you mean Long.toInt?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgosvwf3n.scala:19:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgosvwf3n.scala:20:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgosvwf3n.scala:21:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val k = tup._2\n        val result = (n - k + 1) * (n - k) / 2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpswgf7elx.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpswgf7elx.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpswgf7elx.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpswgf7elx.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpswgf7elx.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, L",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val m = tup._2\n        val k = tup._3\n        val x = tup._4\n        val y = tup._5\n        val z = tup._6\n        val a = Array(x, y, z)\n        val b = Array.fill(n)(0L)\n        for (i <- 0 until n) {\n            b(i) = a(i % 3)\n            a(i % 3) = (a(i % 3) + b(i)) % m\n        }\n        var count = 0L\n        for (i <- 0 until n) {\n            if (b(i) < k) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4on_81mz.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4on_81mz.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mm\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4on_81mz.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._3\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _3 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4on_81mz.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mx\u001b[0m = tup._4\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _4 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4on_81mz.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36my\u001b[0m = tup._5\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _5 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4on_81mz.scala:12:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mz\u001b[0m = tup._6\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _6 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4on_81mz.scala:26:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val (a, b) = test_tup match {\n            case Left(a) => (a, 0)\n            case Right(b) => (0, b)\n        }\n        a + b\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi5425mzh.scala:10:10 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        a + b\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of AnyVal, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi5425mzh.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi5425mzh.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi5425mzh.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val k = tup._2\n        val result = (n - k + 1) * (n - k) / 2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpswgf7elx.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpswgf7elx.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpswgf7elx.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpswgf7elx.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpswgf7elx.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, L",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val num = tup._1\n        val den = tup._2\n        val num_digits = num.toString.length\n        val den_digits = den.toString.length\n        val num_zeros = den_digits - num_digits\n        val num_zeros_pow = pow(10, num_zeros).toLong\n        val num_zeros_pow_minus_1 = num_zeros_pow - 1\n        val num_zeros_pow_minus_1_digits = num_zeros_pow_minus_1.toString.length\n        val num_zeros_pow_minus_1_digits_pow = pow(10, num_zeros_pow_minus_1_digits).toLong\n        val num_zeros_pow_minus_1_digits_pow_minus_1 = num_zeros_pow_minus_1_digits_pow - 1\n        val num_zeros_pow_minus_1_digits_pow_minus_1_digits = num_zeros_pow_minus_1_digits_pow_minus_1.toString.length\n        val num_zeros_pow_minus_1_digits_pow_minus_1_digits_pow = pow(10, num_zeros_pow_minus_1_digits_pow_minus_1_digits).toLong\n        val num_zeros_pow_minus_1_digits_pow_minus_1_digits_pow_minus_1 = num_zeros_pow_minus_1_digits_pow_minus_1_digits_pow - 1\n        val num_zeros_pow_minus_1_digits_pow_minus_1_digits_pow_minus_1_digits = num_zeros_pow_minus_1_digits_pow_minus_1_digits_pow_minus_1.toString.length\n        val num_zeros_pow_minus_1_\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfsirrp4s.scala:22:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfsirrp4s.scala:7:22 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mnum\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfsirrp4s.scala:8:22 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mden\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfsirrp4s.scala:22:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfsirrp4s.scala:24:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfsirrp4s.scala:25:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        var count = 0\n        test_tup match {\n            case Left(x) => count = x\n            case Right(x) => count = x\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi53diq7.scala:8:36 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m Left(x) => count = x\n\u001b[31m\u001b[31m  |\u001b[0m                                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                                    Found:    (x : Long)\n\u001b[31m  |\u001b[0m                                    Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi53diq7.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m Right(x) => count = x\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    (x : Long)\n\u001b[31m  |\u001b[0m                                     Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi53diq7.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi53diq7.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi53diq7.s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        var count = 0\n        test_tup match {\n            case Left(x) => count = x\n            case Right(x) => count = x\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123415,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi53diq7.scala:8:36 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m Left(x) => count = x\n\u001b[31m\u001b[31m  |\u001b[0m                                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                                    Found:    (x : Long)\n\u001b[31m  |\u001b[0m                                    Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi53diq7.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m Right(x) => count = x\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    (x : Long)\n\u001b[31m  |\u001b[0m                                     Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi53diq7.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi53diq7.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi53diq7.s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        var count = 0\n        test_tup match {\n            case Left(x) => count += 1\n            case Right(x) => count += 0\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6vz7mc5l.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6vz7mc5l.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6vz7mc5l.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        if (test_tup.isLeft) {\n            return test_tup.left.get\n        }\n        else {\n            return countFirstElements(test_tup.right.get) + 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuysyka30.scala:10:53 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mreturn\u001b[0m countFirstElements(test_tup.right.get) + \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    Long\n\u001b[31m   |\u001b[0m                                      Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuysyka30.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuysyka30.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuysyka30.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val m = tup._2\n        val k = min(n, m)\n        val l = max(n, m)\n        val a = (1 to k).toList\n        val b = (1 to l).toList\n        val c = a.map(x => b.map(y => (x, y)))\n        val d = c.flatten\n        val e = d.filter(x => x._1 == x._2)\n        val f = e.length\n        f\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv_udbj23.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv_udbj23.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mm\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_udbj23.scala:20:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_udbj23.scala:21:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_udbj23.scala:22:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, L",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        val tup = test_tup.right.get\n        val n = tup._1\n        val k = tup._2\n        val p = tup._3\n        val q = tup._4\n        val r = tup._5\n        val s = tup._6\n        val a = Array.fill(n)(0L)\n        for (i <- 0 until n) {\n            a(i) = (i * k + p) % r + s\n        }\n        val sum = a.sum\n        val left = Array.fill(n)(0L)\n        val right = Array.fill(n)(0L)\n        for (i <- 0 until n) {\n            left(i) = a(i) + (if (i == 0) 0 else left(i - 1))\n            right(n - 1 - i) = a(n - 1 - i) + (if (i == 0) 0 else right(n - i))\n        }\n        var count = 0L\n        for (i <- 0 until n) {\n            if (left(i) <= sum - right(i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkp4eqp60.scala:7:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = tup._1\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkp4eqp60.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = tup._2\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkp4eqp60.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mp\u001b[0m = tup._3\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value _3 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkp4eqp60.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mq\u001b[0m = tup._4\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _4 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkp4eqp60.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mr\u001b[0m = tup._5\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _5 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkp4eqp60.scala:12:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36ms\u001b[0m = tup._6\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value _6 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkp4eqp60.scala:31:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        var count = 0\n        test_tup match {\n            case Left(x) => count += 1\n            case Right(x) => count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpstpc1mfo.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpstpc1mfo.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpstpc1mfo.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_tup.length) {\n            if (test_tup(i).isLeft) count += 1\n            else return count\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666123416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpucppry4f.scala:7:35 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tup.length) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue length is not a member of Either[Long, Long] - did you mean test_tup.left?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpucppry4f.scala:8:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mif\u001b[0m (test_tup(i).isLeft) count += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mtest_tup\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucppry4f.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucppry4f.scala:15:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucppry4f.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the number of elements that occurs before the tuple element in the given tuple.\n    def countFirstElements(test_tup : Either[Long, Long]) : Long = {\n        test_tup match {\n            case Left(x) => x\n            case Right(x) => x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(countFirstElements((1l, 5l, 7l, (4l, 6l), 10l)) == (3l));\n    assert(countFirstElements((2l, 9l, (5l, 7l), 11l)) == (2l));\n    assert(countFirstElements((11l, 15l, 5l, 8l, (2l, 3l), 8l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:12:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(countFirstElements((\u001b[31m1l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, (\u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m), \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Found:    (Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                        Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countFirstElements((\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m, (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m), \u001b[31m11l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                              Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0ehg_hn.scala:14:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countFirstElements((\u001b[31m11l\u001b[0m, \u001b[31m15l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m8l\u001b[0m, (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), \u001b[31m8l\u001b[0m)) == (\u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, (Long, Long), Long)\n\u001b[31m   |\u001b[0m                  Required: Either[Long, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
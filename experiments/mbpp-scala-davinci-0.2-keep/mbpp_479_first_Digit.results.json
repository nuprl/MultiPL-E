{
  "name": "mbpp_479_first_Digit",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m > 9) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        val s = n.toString\n        s.charAt(0).asDigit\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while(m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = abs(n)\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m > 9) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var x = n\n        while (x >= 10) x /= 10\n        x\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var n2 = n\n        while (n2 >= 10) {\n            n2 /= 10\n        }\n        n2\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        if (n < 0) firstDigit(-n)\n        else if (n < 10) n\n        else firstDigit(n / 10)\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while(m >= 10) m /= 10\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        x\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var nn = n\n        while (nn >= 10) nn /= 10\n        return nn\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m > 9) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        if (n < 0) firstDigit(-n)\n        else if (n < 10) n\n        else firstDigit(n / 10)\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m > 9) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m > 9) m /= 10\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m > 9) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m > 9) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m > 9) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) m /= 10\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m > 9) m /= 10\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while(m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1665510682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        x\n    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
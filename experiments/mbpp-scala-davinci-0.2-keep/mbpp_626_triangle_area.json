{
  "name": "mbpp_626_triangle_area",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius.\n    def triangleArea(r : Long) : Option[Long] = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_626_triangle_area.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((-1l)).equals(None));\n    assert(triangleArea((0l)).equals(0l));\n    assert(triangleArea((2l)).equals(4l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val h = r\n        val a = r\n        val b = r\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        Some(area)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a.isValidLong) Some(a.toLong) else None",
    "        val a = r * 2\n        val b = a * a\n        val c = b / 2\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        Some(area.toLong)",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area > 0) Some(area.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a > 0) Some(a.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a > 0) Some(a.toLong) else None",
    "        val a = r * 2\n        val b = a\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val a = r / 2\n        val b = r\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val a = r * r * sqrt(3) / 4\n        if (a > 0) Some(a.toLong) else None",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a > 0) Some(a.toLong) else None",
    "        val a = r * 2\n        val b = a\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        Some(area)",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a <= 0) None else Some(a.toLong)",
    "        if (r < 0) None\n        else {\n            val h = r * sqrt(3) / 2\n            val a = h * r / 2\n            Some(a.toLong)\n        }",
    "        val a = r * r * sqrt(3) / 4\n        if (a > 0) Some(a.toLong) else None",
    "        val h = r\n        val a = r\n        val b = r\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        Some(area)",
    "        val a = r * 2\n        val b = a\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        val area = (h * r) / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r\n        val a = r\n        val b = r\n        val c = sqrt(r * r + r * r).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        Some(area)",
    "        val a = r\n        val b = r\n        val c = sqrt(2 * r * r).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val a = r / 2\n        val b = r / 2\n        val c = sqrt(a * a + b * b)\n        if (c > r) None else Some((a * b) / 2)",
    "        val a = r * r * sqrt(3) / 4\n        if (a % 1 == 0) Some(a.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area.isWhole()) Some(area.toLong) else None",
    "        val h = r / 2\n        val a = 2 * r\n        val b = 2 * sqrt(r * r - h * h)\n        if (a + b > 2 * r) None else Some((a * b) / 2)",
    "        val h = r * sqrt(3) / 2\n        val a = h * h / 2\n        if (a % 1 == 0) Some(a.toLong) else None",
    "        val a = r * r * sqrt(3) / 4\n        if (a == a.toLong) Some(a.toLong) else None",
    "        val a = r\n        val b = r\n        val c = sqrt(2 * r * r).toLong\n        if (a + b > c && a + c > b && b + c > a) Some(a * b / 2) else None",
    "        val a = r\n        val b = r\n        val c = sqrt(2 * r * r).toLong\n        if (c * c != 2 * r * r) None else Some((a * b * c) / 2)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a < 0) None else Some(a.toLong)",
    "        val h = r\n        val b = 2 * r\n        val a = sqrt(b * b - h * h)\n        if (a.isNaN) None else Some((a * h) / 2)",
    "        val x = r * sqrt(3) / 2\n        if (x % 1 == 0) Some((x * x * sqrt(3) / 4).toLong) else None",
    "        val h = r / 2\n        val a = 2 * r\n        val b = sqrt(a * a - h * h).toLong\n        val c = sqrt(b * b - h * h).toLong\n        if (a + b + c <= 2 * r) None\n        else Some((a * h) / 2)",
    "        val h = r / 2\n        val a = sqrt(r * r - h * h)\n        if (a.isNaN) None else Some(a.toLong)",
    "        val a = r * 2\n        val b = a / 2\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val a = r\n        val b = r\n        val c = sqrt(2 * r * r).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val h = r / 2\n        val a = r * r - h * h\n        if (a <= 0) None\n        else Some(a)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a > 0) Some(a.toLong) else None",
    "        val a = r / 2\n        val b = r\n        val c = sqrt(a * a + b * b).toLong\n        val p = (a + b + c) / 2\n        val area = sqrt(p * (p - a) * (p - b) * (p - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val a = r * 2\n        val b = a / 2\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val a = r / 2\n        val b = r / 2\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val a = r.toDouble\n        val b = r.toDouble\n        val c = sqrt(2) * r.toDouble\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area == area.toLong) Some(area.toLong) else None",
    "        val a = r\n        val b = r\n        val c = r * 2\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area == area.toLong) Some(area.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area.isWhole()) Some(area.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val area = (h * r) / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a < 0) None else Some(a.toLong)",
    "        val a = r\n        val b = r\n        val c = r * 2\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area == area.toInt) Some(area.toInt) else None",
    "        val h = r\n        val a = r\n        val b = r\n        val c = sqrt(pow(a, 2) + pow(b, 2)).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area % 2 == 0) Some(area / 2) else None",
    "        val h = r * sqrt(3) / 2\n        val area = h * h / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val a = r * 2\n        val b = a\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val h = r * 2\n        val a = h * h\n        val b = r * r\n        val c = sqrt(a - b)\n        val s = c / 2\n        val area = (r * s) / 2\n        if (area % 1 == 0) Some(area.toLong) else None",
    "        val area = r * r * sqrt(3) / 4\n        if (area > 0) Some(area.toLong) else None",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area % 1 == 0) Some(area.toLong) else None",
    "        val h = r\n        val a = r\n        val b = r\n        val c = sqrt(2 * r * r).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        Some(area)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area.isValidLong) Some(area.toLong) else None",
    "        val a = r * 2\n        val b = a\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val h = r * sqrt(3) / 2\n        val a = h * h\n        if (a == 0) None else Some(a.toLong)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a.isWhole()) Some(a.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a <= 0) None else Some(a.toLong)",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val a = r * r * sqrt(3) / 4\n        if (a.isValidLong) Some(a.toLong) else None",
    "        val a = r * r * sqrt(3) / 4\n        val b = r * r * sqrt(3) / 2\n        val c = r * r * sqrt(3)\n        if (a + b + c <= r * r * 2) Some((a + b + c).toLong) else None",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b).toLong\n        if (c % 2 == 0) {\n            val s = (a + b + c) / 2\n            Some((s * (s - a) * (s - b) * (s - c)).toLong)\n        } else None",
    "        val h = r * 2\n        val a = h * h\n        val b = r * r\n        val c = sqrt(a - b).toLong\n        if (c * c + b == a) Some(c * r / 2) else None",
    "        val a = r * r * sqrt(3) / 4\n        if (a.isWhole) Some(a.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a > 0) Some(a.toLong) else None",
    "        val a = r * r * sqrt(3) / 2\n        val b = (a / sqrt(3)).toLong\n        if (a == b * sqrt(3)) Some(b) else None",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        Some(area)",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area > 0) Some(area.toLong) else None",
    "        val a = r / 2\n        val b = r\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val a = r / 2\n        val b = r\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area.isWhole) Some(area.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a % 1 == 0) Some(a.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area.isValidLong) Some(area.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area % 1 == 0) Some(area.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        if (h > r) None else Some((r * h / 2).toLong)",
    "        val h = r * sqrt(2)\n        if (h % 2 == 0) Some((h * h) / 4) else None",
    "        val a = r * 2\n        val b = a / 2\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area == area.toInt) Some(area.toInt) else None",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b)\n        if (c % 1 == 0) Some((a * b) / 2) else None",
    "        val a = r * r * sqrt(3) / 4\n        if (a < 0) None else Some(a.toLong)",
    "        val a = r\n        val b = r\n        val c = sqrt(2.0) * r\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a.isValidLong) Some(a.toLong) else None",
    "        val a = r * r\n        val b = a / 2\n        val c = sqrt(a - b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a > 0) Some(a.toLong) else None",
    "        val h = sqrt(r * r - r * r / 4)\n        if (h.isNaN) None else Some((r * h / 2).toLong)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area < 0) None else Some(area.toLong)",
    "        val a = r * 2\n        val b = a\n        val c = sqrt(a * a + b * b).toLong\n        if (c % 2 == 0) {\n            val p = (a + b + c) / 2\n            Some((p * (p - a) * (p - b) * (p - c)).toLong)\n        } else None",
    "        val a = r * 2\n        val b = a\n        val c = sqrt(a * a + b * b).toLong\n        if (c % 2 == 0) {\n            val s = (a + b + c) / 2\n            Some((s * (s - a) * (s - b) * (s - c)).toLong)\n        } else None",
    "        val h = r\n        val a = r\n        val b = r\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        Some(area)",
    "        val h = r / 2\n        val a = sqrt(r * r - h * h)\n        val area = a * h / 2\n        if (area.isWhole()) Some(area.toLong) else None",
    "        val a = r * r * sqrt(3) / 4\n        if (a == a.toLong) Some(a.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        if (h > r) None else Some((r * h) / 2)",
    "        val h = r * 2\n        val a = h * h\n        val b = r * r\n        val c = sqrt(a - b)\n        val s = (c + r + r) / 2\n        val area = sqrt(s * (s - c) * (s - r) * (s - r))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val s = r * 2\n        val h = sqrt(s * s - r * r)\n        if (h.isNaN) None else Some((h * r / 2).toLong)",
    "        val a = r.toDouble\n        val b = a / sqrt(2)\n        val c = b\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a % 1 == 0) Some(a.toLong) else None",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = a\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r\n        val a = r\n        val b = r\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a.isWhole) Some(a.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a < 0) None else Some(a.toLong)",
    "        val a = r / 2\n        val b = r / 2\n        val c = sqrt(a * a + b * b).toLong\n        if (c * c == a * a + b * b) Some(a * b / 2) else None",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area == area.toLong) Some(area.toLong) else None",
    "        val a = r * 2\n        val b = sqrt(a * a - r * r).toLong\n        val c = sqrt(r * r - b * b).toLong\n        if (c * c + b * b == r * r) {\n            val s = (a + b + c) / 2\n            Some((s * (s - a) * (s - b) * (s - c)).toLong)\n        } else None",
    "        val a = 2 * r\n        val b = 2 * r\n        val c = sqrt(2 * r * r).toLong\n        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2\n            Some((s * (s - a) * (s - b) * (s - c)).toLong)\n        } else None",
    "        val a = r\n        val b = r\n        val c = sqrt(2 * r * r).toLong\n        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2\n            val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n            Some(area)\n        } else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a.isValidLong) Some(a.toLong) else None",
    "        val a = r\n        val b = r\n        val c = sqrt(2 * r * r).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val h = r * 2\n        val a = h * h\n        val b = r * r\n        val c = a - b\n        val d = sqrt(c)\n        val e = d / 2\n        val f = e * h\n        val g = f / 2\n        if (g.isValidLong) Some(g.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a.isValidLong) Some(a.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area.isValidLong) Some(area.toLong) else None",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a > 0) Some(a.toLong) else None",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b).toLong\n        if (c % 2 == 0) {\n            val s = (a + b + c) / 2\n            Some((s * (s - a) * (s - b) * (s - c)).toLong)\n        } else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a > 0) Some(a.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area <= 0) None else Some(area.toLong)",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        if (s < a) None else Some((s * (s - a) * (s - b) * (s - c)).toLong)",
    "        val h = r * 2\n        val a = h * h\n        val b = r * r\n        val c = a - b\n        val s = c / 2\n        val area = sqrt(s * (s - h) * (s - h) * (s - r)).toLong\n        if (area == 0) None else Some(area)",
    "        val a = r\n        val b = r\n        val c = r * 2\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val a = r * 2\n        val b = a\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        Some(area)",
    "        val h = r * sqrt(3) / 2\n        if (h > r) None else Some((r * h) / 2)",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a % 1 == 0) Some(a.toLong) else None",
    "        val x = r * sqrt(3) / 2\n        if (x > r) None else Some((r * x).toLong)",
    "        val a = r\n        val b = r\n        val c = sqrt(2 * r * r).toLong\n        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2\n            Some((s * (s - a) * (s - b) * (s - c)).toLong)\n        } else None",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a > 0) Some(a.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a.isWhole()) Some(a.toLong) else None",
    "        val a = r * 2\n        val b = a\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        Some(area)",
    "        val a = (r * r * sqrt(3)) / 4\n        if (a > 0) Some(a.toLong) else None",
    "        val s = r * 2\n        val h = s / 2\n        val a = sqrt(h * h - r * r)\n        val area = a * r / 2\n        if (area == area.toInt) Some(area.toInt) else None",
    "        val a = r * r * sqrt(3) / 4\n        if (a < 0) None else Some(a.toLong)",
    "        val a = r\n        val b = r\n        val c = sqrt(2 * r * r).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        Some(area)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val a = r / 2\n        val b = r\n        val c = sqrt(a * a + b * b).toLong\n        if (c * c == a * a + b * b) Some(a * b / 2) else None",
    "        val a = r * r * sqrt(3) / 4\n        if (a.isWhole()) Some(a.toLong) else None",
    "        val a = r\n        val b = r\n        val c = r\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area == area.toInt) Some(area.toInt) else None",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area == area.toLong) Some(area.toLong) else None",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val a = r * r * sqrt(3) / 4\n        if (a % 1 == 0) Some(a.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area < 0) None else Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        val a = 2 * h * r / 3\n        if (a > 0) Some(a.toLong) else None",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        if (h > r) None else Some((r * h) / 2)",
    "        val a = r * 2\n        val b = a / 2\n        val c = sqrt(a * a - b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b)\n        if (c % 1 == 0) Some((a * b) / 2) else None",
    "        val a = r * 2\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        if (r < 0) return None\n        val h = r * sqrt(3) / 2\n        Some((h * r) / 2)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a > 0) Some(a.toLong) else None",
    "        val a = r * 2\n        val b = a\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val a = r * 2\n        val b = a\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r\n        val a = r\n        val b = r\n        val c = sqrt(2 * r * r).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        Some(area)",
    "        val a = r\n        val b = r\n        val c = sqrt(2 * r * r).toLong\n        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2\n            Some((s * (s - a) * (s - b) * (s - c)).toLong)\n        } else None",
    "        val a = r\n        val b = r\n        val c = r * 2\n        val p = (a + b + c) / 2\n        val s = sqrt(p * (p - a) * (p - b) * (p - c))\n        if (s.isNaN) None else Some(s.toLong)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a > 0) Some(a.toLong) else None",
    "        val a = r * 2\n        val b = a\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area > 0) Some(area.toLong) else None",
    "        val a = r * r * sqrt(3) / 4\n        if (a < 0) None else Some(a.toLong)",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val a = r * 2\n        val b = a / 2\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area == area.toLong) Some(area.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * h / 4\n        if (a < 0) None else Some(a.toLong)",
    "        val a = r.toDouble\n        val b = a / 2.0\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val s = r * 2\n        val h = sqrt(s * s - r * r).toLong\n        if (h == 0) None else Some(h * r / 2)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val a = r\n        val c = r\n        val b = sqrt(2 * r * r).toLong\n        if (a + b <= c) None else Some((a * b) / 2)",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area > 0) Some(area.toLong) else None",
    "        if (r <= 0) return None\n        val a = r * r\n        val b = r * r\n        val c = 2 * r\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area.isValidLong) Some(area.toLong) else None",
    "        val h = r\n        val a = r\n        val b = r\n        val c = sqrt(a * a + b * b).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        Some(area)",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b)\n        if (c > r * 2) None else Some((a * b) / 2)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area.isValidLong) Some(area.toLong) else None",
    "        val a = r\n        val b = r\n        val c = sqrt(2 * r * r).toLong\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c)).toLong\n        if (area == 0) None else Some(area)",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area < 0) None else Some(area.toLong)",
    "        val a = r * r * sqrt(3) / 4\n        if (a < 0 || a > Long.MaxValue) None else Some(a.toLong)",
    "        val a = r * 2\n        val b = r * 2\n        val c = sqrt(a * a + b * b)\n        if (c % 1 == 0) Some((a * b) / 2) else None",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a > 0) Some(a.toLong) else None",
    "        val h = r * sqrt(3) / 2\n        if (h > r) None else Some((h * r / 2).toLong)",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        if (h > r) None else Some((r * h) / 2)",
    "        val a = r * 2\n        val b = a / 2\n        val c = a / 2\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area == area.toInt) Some(area.toInt) else None",
    "        val h = r * sqrt(3) / 2\n        val area = h * r / 2\n        if (area > 0) Some(area.toLong) else None",
    "        val h = r * 2\n        val a = h * h\n        val b = r * r\n        val c = sqrt(a - b)\n        val s = (c + r + r) / 2\n        val area = sqrt(s * (s - c) * (s - r) * (s - r))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val a = r\n        val b = r\n        val c = r * 2\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)",
    "        val h = r * sqrt(3) / 2\n        val a = h * r / 2\n        if (a > 0) Some(a.toLong) else None",
    "        val a = r.toDouble\n        val b = a / 2\n        val c = sqrt(a * a - b * b)\n        val s = (a + b + c) / 2\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area.isNaN) None else Some(area.toLong)"
  ]
}
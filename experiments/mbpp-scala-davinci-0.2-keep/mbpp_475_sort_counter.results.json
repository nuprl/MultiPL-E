{
  "name": "mbpp_475_sort_counter",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_475_sort_counter.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwo83sgl0.scala:7:140 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwo83sgl0.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwo83sgl0.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3 ++ dict4\n        dict5\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwmqqzu8.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwmqqzu8.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwmqqzu8.scala:13:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpylve_j76.scala:38:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylve_j76.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylve_j76.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylve_j76.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ++ dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpzp_56f23.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzp_56f23.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzp_56f23.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val list = dict1.toList.sortBy(_._2)\n        list.map(x => Right(x._2)).zip(list.map(x => Left(x._1))).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpq3m8phj3.scala:7:80 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        list.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(list.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                           ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3m8phj3.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3m8phj3.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val list = dict1.toList.sortBy(_._2)\n        list.map(x => x._1).map(Left(_)) ::: list.map(x => x._2).map(Right(_))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnqly5y3.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnqly5y3.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsnqly5y3.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict4.zip(dict3)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7xh8d2xw.scala:10:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Found:    Right[Nothing, Long]\n\u001b[31m   |\u001b[0m                                  Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7xh8d2xw.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7xh8d2xw.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortWith((a, b) => a._2 > b._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpheiejyu2.scala:7:141 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpheiejyu2.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpheiejyu2.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwo83sgl0.scala:7:140 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwo83sgl0.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwo83sgl0.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => if (x._1.length > x._2) Left(x._1) else Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn33vz5yj.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn33vz5yj.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn33vz5yj.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList\n        val dict3 = dict2.sortBy(_._2)\n        val dict4 = dict3.map(x => Left(x._1)) ++ dict3.map(x => Right(x._2))\n        dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1x3ub0h7.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1x3ub0h7.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1x3ub0h7.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => x match {\n            case (a, b) => Left(a)\n        }) ::: dict2.map(x => x match {\n            case (a, b) => Right(b)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sz4bg1v.scala:14:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sz4bg1v.scala:14:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sz4bg1v.scala:14:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122467,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxk78tpfl.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxk78tpfl.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxk78tpfl.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.getOrElse(x._2.left.get)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptwxacnhy.scala:7:114 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.getOrElse(x._2.left.get)).reverse\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    List[Matchable]\n\u001b[31m  |\u001b[0m        Required: List[Either[String, Long]]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptwxacnhy.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptwxacnhy.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict4.zip(dict3).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb0ewduhg.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict4.zip(dict3).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb0ewduhg.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb0ewduhg.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpzp_56f23.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzp_56f23.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzp_56f23.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(x => x._2.left.map(x => x))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122467,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpof8qc04r.scala:7:103 ------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36mx\u001b[0m => x._2.left.map(\u001b[36mx\u001b[0m => x))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                     ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                          value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpof8qc04r.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpof8qc04r.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        var result = List[Either[String, Long]]()\n        for (i <- 0 until dict2.length) {\n            result = Left(dict2(i)._1) :: Right(dict2(i)._2) :: result\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmped1np5el.scala:14:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmped1np5el.scala:14:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmped1np5el.scala:14:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122467,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbdqgank.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbdqgank.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbdqgank.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4).map(x => x._1.merge(x._2))\n        dict5\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122467,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppx_00tv3.scala:9:51 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdict5\u001b[0m = dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppx_00tv3.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppx_00tv3.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.getOrElse(x._2.left.get))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oh2rl4t.scala:7:97 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.getOrElse(x._2.left.get))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Matchable\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oh2rl4t.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oh2rl4t.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => if (x._2 % 2 == 0) Right(x._2) else Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122467,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppd0svdbu.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppd0svdbu.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppd0svdbu.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4).map(x => x._1.merge(x._2))\n        dict5\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122467,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppx_00tv3.scala:9:51 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdict5\u001b[0m = dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppx_00tv3.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppx_00tv3.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortWith((a,b) => a._2 > b._2)\n        dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122467,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplix1up4f.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplix1up4f.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplix1up4f.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1.merge(x._2))\n        dict6\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpg1akwl8y.scala:10:40 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdict6\u001b[0m = dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg1akwl8y.scala:14:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg1akwl8y.scala:14:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)) ::: dict2.map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0pf389e.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => Left(x._1))\n        val dict7 = dict5.map(x => Right(x._2))\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9 ::: dict10\n        dict11\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jzanqsa.scala:19:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jzanqsa.scala:19:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jzanqsa.scala:19:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:7:141 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        var dict2 = dict1.toList.sortBy(_._2)\n        var list = List[Either[String, Long]]()\n        for (i <- 0 until dict2.length) {\n            list = list :+ Left(dict2(i)._1)\n            list = list :+ Right(dict2(i)._2)\n        }\n        list\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpveedw73r.scala:15:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpveedw73r.scala:15:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpveedw73r.scala:15:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.getOrElse(x._2.left.get))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oh2rl4t.scala:7:97 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.getOrElse(x._2.left.get))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Matchable\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oh2rl4t.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oh2rl4t.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => if (x._2 % 2 == 0) Left(x._1) else Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4cpq5rq.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4cpq5rq.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4cpq5rq.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => Left(x._1))\n        val dict7 = dict5.map(x => Right(x._2))\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9 ++ dict10\n        dict11\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsiayudtd.scala:19:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsiayudtd.scala:19:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsiayudtd.scala:19:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwo83sgl0.scala:7:140 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwo83sgl0.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwo83sgl0.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:7:141 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        var dict2 = dict1.toList.sortBy(_._2)\n        var list = List[Either[String, Long]]()\n        for (i <- 0 until dict2.length) {\n            list = list :+ Left(dict2(i)._1)\n            list = list :+ Right(dict2(i)._2)\n        }\n        return list\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv3gq3qm_.scala:15:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv3gq3qm_.scala:15:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv3gq3qm_.scala:15:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp33odwpy3.scala:7:82 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp33odwpy3.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp33odwpy3.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.map(x => Left(x))\n        val dict9 = dict7.map(x => Right(x))\n        val dict10 = dict8.zip(dict9)\n        val dict11 = dict10.map(x => x._1)\n        val dict12 = dict10.map(x => x._2)\n        val dict13 = dict11 ::: dict12\n        dict13\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyupjc059.scala:21:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyupjc059.scala:21:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyupjc059.scala:21:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1).map(Left(_)) ++ dict2.map(x => x._2).map(Right(_))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp22trysra.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp22trysra.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp22trysra.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3 zip dict4\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp5bnhqiov.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5bnhqiov.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5bnhqiov.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ++ dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)) ::: dict2.map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.right.getOrElse(x._2.left.get))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiclj3tfd.scala:10:43 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.right.getOrElse(x._2.left.get))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    Matchable\n\u001b[31m   |\u001b[0m                       Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiclj3tfd.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiclj3tfd.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.map(x => Left(x))\n        val dict9 = dict7.map(x => Right(x))\n        val dict10 = dict8.zip(dict9)\n        val dict11 = dict10.map(x => x._1)\n        val dict12 = dict10.map(x => x._2)\n        val dict13 = dict11 ::: dict12\n        dict13\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyupjc059.scala:21:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyupjc059.scala:21:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyupjc059.scala:21:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y))))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpln2hhca_.scala:9:77 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y))))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                  Found:    \u001b[1m\u001b[31m(\u001b[0mString\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0m\u001b[1m\u001b[31mLong\u001b[0m\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                  Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpln2hhca_.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpln2hhca_.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:7:141 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3 zip dict4\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp5bnhqiov.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5bnhqiov.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5bnhqiov.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpzp_56f23.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzp_56f23.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzp_56f23.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y))))\n        dict5.map(x => x.right.getOrElse(x.left.get))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5w0dukj0.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x.right.getOrElse(x.left.get))\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                         Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                         Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5w0dukj0.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5w0dukj0.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122467,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbdqgank.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbdqgank.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbdqgank.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.getOrElse(x._2.left.get))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oh2rl4t.scala:7:97 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.getOrElse(x._2.left.get))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Matchable\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oh2rl4t.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oh2rl4t.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1).toList ::: dict3.zip(dict4).map(x => x._2).toList\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphbl07g4z.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphbl07g4z.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphbl07g4z.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y))))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpln2hhca_.scala:9:77 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y))))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                  Found:    \u001b[1m\u001b[31m(\u001b[0mString\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0m\u001b[1m\u001b[31mLong\u001b[0m\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                  Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpln2hhca_.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpln2hhca_.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y))))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpln2hhca_.scala:9:77 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y))))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                  Found:    \u001b[1m\u001b[31m(\u001b[0mString\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0m\u001b[1m\u001b[31mLong\u001b[0m\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                  Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpln2hhca_.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpln2hhca_.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val list = dict1.toList.sortBy(_._2)\n        list.map(x => Right(x._2)).zip(list.map(x => Left(x._1))).map(x => x._1).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphu_gnwkh.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphu_gnwkh.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphu_gnwkh.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        dict3.zip(dict4).map(x => x._1).zip(dict4).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x._2).map(x => x._1).map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg81pn3u5.scala:10:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpg81pn3u5.scala:9:77 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1).zip(dict4).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x._2).map(\u001b[36mx\u001b[0m => x._1).map(\u001b[36mx\u001b[0m => x\n\u001b[31m\u001b[31m  |\u001b[0m                                                                           ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                          value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpg81pn3u5.scala:9:92 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1).zip(dict4).map(\u001b[36mx\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpzp_56f23.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzp_56f23.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzp_56f23.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortWith((x,y) => x._2 > y._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmm9c4qck.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmm9c4qck.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmm9c4qck.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1.right.getOrElse(x._2.left.get))\n        dict6\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpquv2uy2t.scala:11:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        dict6\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    (dict6 : List[Matchable])\n\u001b[31m   |\u001b[0m        Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpquv2uy2t.scala:14:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpquv2uy2t.scala:14:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.map(x => Left(x))\n        val dict9 = dict7.map(x => Right(x))\n        val dict10 = dict8.zip(dict9)\n        val dict11 = dict10.map(x => x._1)\n        val dict12 = dict10.map(x => x._2)\n        val dict13 = dict11 ::: dict12\n        dict13\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyupjc059.scala:21:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyupjc059.scala:21:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyupjc059.scala:21:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortWith((x,y) => x._2 > y._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa_dgsy_y.scala:7:140 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa_dgsy_y.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa_dgsy_y.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1.merge(x._2))\n        dict6\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpg1akwl8y.scala:10:40 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdict6\u001b[0m = dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg1akwl8y.scala:14:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg1akwl8y.scala:14:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp33odwpy3.scala:7:82 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp33odwpy3.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp33odwpy3.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortWith((x,y) => x._2 > y._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphf9i42bp.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphf9i42bp.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphf9i42bp.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1.right.getOrElse(x._2.left.get))\n        dict6\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpquv2uy2t.scala:11:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        dict6\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    (dict6 : List[Matchable])\n\u001b[31m   |\u001b[0m        Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpquv2uy2t.scala:14:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpquv2uy2t.scala:14:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ++ dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.map(x => Left(x))\n        val dict9 = dict7.map(x => Right(x))\n        val dict10 = dict8.zip(dict9)\n        val dict11 = dict10.map(x => x._1)\n        val dict12 = dict10.map(x => x._2)\n        val dict13 = dict11 ::: dict12\n        dict13\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyupjc059.scala:21:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyupjc059.scala:21:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyupjc059.scala:21:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:7:141 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => if (x._2 % 2 == 0) Right(x._2) else Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => if (x._2 % 2 == 0) Right(x._2) else Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict4.zip(dict3).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb0ewduhg.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict4.zip(dict3).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb0ewduhg.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb0ewduhg.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.getOrElse(x._2.left.get))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oh2rl4t.scala:7:97 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.getOrElse(x._2.left.get))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Matchable\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oh2rl4t.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oh2rl4t.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ++ dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        var dict2 = dict1.toList.sortBy(_._2)\n        var dict3 = List[Either[String, Long]]()\n        for (i <- 0 until dict2.length) {\n            dict3 = dict3 :+ Left(dict2(i)._1)\n            dict3 = dict3 :+ Right(dict2(i)._2)\n        }\n        return dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp9tom2p2.scala:15:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp9tom2p2.scala:15:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp9tom2p2.scala:15:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)) ::: dict2.map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => Left(x._1))\n        val dict7 = dict5.map(x => Right(x._2))\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9 ::: dict10\n        dict11\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jzanqsa.scala:19:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jzanqsa.scala:19:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jzanqsa.scala:19:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:7:141 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict4.zip(dict3).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb0ewduhg.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict4.zip(dict3).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb0ewduhg.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb0ewduhg.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => Left(x._1))\n        val dict7 = dict5.map(x => Right(x._2))\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9 ::: dict10\n        dict11\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jzanqsa.scala:19:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jzanqsa.scala:19:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jzanqsa.scala:19:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122467,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxk78tpfl.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxk78tpfl.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxk78tpfl.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => if (x._2 % 2 == 0) Right(x._2) else Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val list1 = dict1.toList.sortBy(_._2)\n        list1.map(x => if (x._2 % 2 == 0) Right(x._2) else Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0985tvef.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0985tvef.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0985tvef.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3 ::: dict4\n        dict5\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw8owi6a.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw8owi6a.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw8owi6a.scala:13:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val list = dict1.toList\n        list.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwmhoox_p.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwmhoox_p.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwmhoox_p.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122467,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxk78tpfl.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxk78tpfl.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxk78tpfl.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpzp_56f23.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzp_56f23.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzp_56f23.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:7:141 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghl95024.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp33odwpy3.scala:7:82 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp33odwpy3.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp33odwpy3.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => if (x._2 % 2 == 0) Right(x._2) else Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpznqu5xv8.scala:6:72 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        dict1.toList.sortBy(_._2).map(\u001b[36mx\u001b[0m => Right(x._2)).map(\u001b[36mx\u001b[0m => Left(x._1))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value _1 is not a member of Right[Nothing, Long]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpznqu5xv8.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpznqu5xv8.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)) ::: dict2.map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpylve_j76.scala:38:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylve_j76.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylve_j76.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylve_j76.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpzp_56f23.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzp_56f23.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzp_56f23.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => Left(x._1))\n        val dict7 = dict5.map(x => Right(x._2))\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9 ::: dict10\n        dict11\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jzanqsa.scala:19:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jzanqsa.scala:19:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jzanqsa.scala:19:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.map(x => (x._2, x._1))\n        val dict3 = dict2.sortBy(_._1)\n        val dict4 = dict3.map(x => Right(x._1))\n        val dict5 = dict3.map(x => Left(x._2))\n        dict4 ++ dict5\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4jo4747q.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4jo4747q.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4jo4747q.scala:13:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList\n        val dict3 = dict2.sortWith((a,b) => a._2 > b._2)\n        val dict4 = dict3.map(x => Left(x._1))\n        val dict5 = dict3.map(x => Right(x._2))\n        dict4 ::: dict5\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkcyrvqdm.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkcyrvqdm.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkcyrvqdm.scala:13:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        var result = List[Either[String, Long]]()\n        for (i <- 0 until dict2.length) {\n            result = Left(dict2(i)._1) :: Right(dict2(i)._2) :: result\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmped1np5el.scala:14:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmped1np5el.scala:14:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmped1np5el.scala:14:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => if (x._2 % 2 == 0) Right(x._2) else Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.map(x => Left(x))\n        val dict9 = dict7.map(x => Right(x))\n        val dict10 = dict8.zip(dict9)\n        val dict11 = dict10.map(x => x._1)\n        val dict12 = dict10.map(x => x._2)\n        val dict13 = dict11.union(dict12)\n        dict13\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa7v8ivxo.scala:21:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa7v8ivxo.scala:21:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa7v8ivxo.scala:21:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)) ::: dict2.map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => Left(x._1))\n        val dict13 = dict11.map(x => Right(x._2))\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf7gqq9s3.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf7gqq9s3.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf7gqq9s3.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ++ dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeccxdolg.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)) ::: dict2.map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict = dict1.toList.sortBy(_._2)\n        val result = new ListBuffer[Either[String, Long]]\n        for (i <- 0 until dict.length) {\n            result += Left(dict(i)._1)\n            result += Right(dict(i)._2)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ptb7bm1.scala:15:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ptb7bm1.scala:15:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ptb7bm1.scala:15:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(x => x._2.left.map(x => x))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122467,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpof8qc04r.scala:7:103 ------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36mx\u001b[0m => x._2.left.map(\u001b[36mx\u001b[0m => x))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                     ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                          value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpof8qc04r.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpof8qc04r.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpylve_j76.scala:38:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylve_j76.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylve_j76.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylve_j76.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => if (x._2 % 2 == 0) Right(x._2) else Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ++ dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpua9n_fk2.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwo83sgl0.scala:7:140 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwo83sgl0.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwo83sgl0.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortWith((x,y) => x._2 > y._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa_dgsy_y.scala:7:140 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa_dgsy_y.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa_dgsy_y.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpylve_j76.scala:38:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylve_j76.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylve_j76.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylve_j76.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gep3uim.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => if (x._2 % 2 == 0) Right(x._2) else Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvkpcpb9m.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnithuynt.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnithuynt.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)) ::: dict2.map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp79dgtkj.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val list = ListBuffer[Either[String, Long]]()\n        for (i <- 0 until dict2.length) {\n            list += Left(dict2(i)._1)\n            list += Right(dict2(i)._2)\n        }\n        list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk55f92u5.scala:15:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk55f92u5.scala:15:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk55f92u5.scala:15:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4).map(x => x._1.merge(x._2))\n        dict5\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122467,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppx_00tv3.scala:9:51 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdict5\u001b[0m = dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppx_00tv3.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppx_00tv3.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpur030kzk.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a dictionary by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2upg29i0.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_419_round_and_sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_419_round_and_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        list1 match {\n            case list : List[Double] => {\n                for (i <- list) {\n                    sum += round(i)\n                }\n                sum * list.length\n            }\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphf92hw_f.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphf92hw_f.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphf92hw_f.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return (sum * list1.asInstanceOf[List[Double]].length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_0t9sqqf.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_0t9sqqf.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_0t9sqqf.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 to list.length - 1) {\n            sum += round(list(i))\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3lzl1f9_.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3lzl1f9_.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3lzl1f9_.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return (sum * list1.asInstanceOf[List[Double]].length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_0t9sqqf.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_0t9sqqf.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_0t9sqqf.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0\n        var list = list1.asInstanceOf[List[Int]]\n        for (i <- 0 until list.length) {\n            sum += round(list(i))\n        }\n        return sum * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6sl_v1pj.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            sum += round(list(i))\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6sl_v1pj.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6sl_v1pj.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6sl_v1pj.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        val list = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for (i <- list) {\n            sum += round(i)\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4hx_v4o9.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4hx_v4o9.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4hx_v4o9.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list2 = list1.asInstanceOf[List[Double]]\n        for (i <- 0 until list2.length) {\n            sum += round(list2(i))\n        }\n        return (sum * list2.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu8zyi9ho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu8zyi9ho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu8zyi9ho.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        var list2 : List[Int] = List()\n        list1 match {\n            case list : List[Int] => {\n                for (i <- list) {\n                    list2 = list2 :+ round(i).toInt\n                }\n                for (i <- list2) {\n                    sum += i\n                }\n                sum * list2.length\n            }\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp15f4x8t0.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp15f4x8t0.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp15f4x8t0.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 = list1.asInstanceOf[List[Double]]\n        var list3 = List[Double]()\n        for (i <- list2) {\n            list3 = list3 :+ round(i)\n        }\n        return list3.sum.toLong * list3.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdbx1_4b5.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdbx1_4b5.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdbx1_4b5.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        list1 match {\n            case list1 : List[Int] => {\n                for (i <- 0 until list1.length) {\n                    sum += round(list1(i)).toLong\n                }\n                sum * list1.length\n            }\n            case list1 : List[Double] => {\n                for (i <- 0 until list1.length) {\n                    sum += round(list1(i)).toLong\n                }\n                sum * list1.length\n            }\n            case list1 : List[Float] => {\n                for (i <- 0 until list1.length) {\n                    sum += round(list1(i)).toLong\n                }\n                sum * list1.length\n            }\n            case list1 : List[Long] => {\n                for (i <- 0 until list1.length) {\n                    sum += round(list1(i)).toLong\n                }\n                sum * list1.length\n            }\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpekff1py_.scala:36:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpekff1py_.scala:37:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpekff1py_.scala:38:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        list1 match {\n            case list1 : List[Int] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n            }\n            case list1 : List[Double] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n            }\n        }\n        return sum * list1.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpug92mvhr.scala:19:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mreturn\u001b[0m sum * list1.length\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpug92mvhr.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpug92mvhr.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpug92mvhr.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for (i <- list) {\n            sum += round(i)\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8wv0g2i4.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8wv0g2i4.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8wv0g2i4.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        val list = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for (i <- list) {\n            sum += round(i)\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqi_61ru.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqi_61ru.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqi_61ru.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for(i <- list1.asInstanceOf[List[Double]]) {\n            sum = sum + round(i).toLong\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122504,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphzfuyzl_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphzfuyzl_.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphzfuyzl_.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        list1 match {\n            case list1 : List[Int] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n            }\n            case list1 : List[Double] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n            }\n            case list1 : List[Float] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n            }\n            case list1 : List[Long] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n            }\n        }\n        sum * list1.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122507,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo9o0cvjm.scala:29:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m        sum * list1.length\n\u001b[31m\u001b[31m   |\u001b[0m              ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo9o0cvjm.scala:32:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo9o0cvjm.scala:33:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo9o0cvjm.scala:34:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        var list = list1.asInstanceOf[List[Int]]\n        for (i <- 0 until list.length) {\n            sum += round(list(i)).toLong\n        }\n        sum * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122505,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxh4n44cd.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxh4n44cd.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxh4n44cd.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        for (i <- 0 until list1.asInstanceOf[List[Double]].length) {\n            sum += round(list1.asInstanceOf[List[Double]](i))\n        }\n        return sum.toLong * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122505,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd9_t2pap.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd9_t2pap.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd9_t2pap.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        var list : List[Int] = list1.asInstanceOf[List[Int]]\n        for (i <- 0 to list.length - 1) {\n            sum += round(list(i)).toLong\n        }\n        sum * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122505,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc1tlhal2.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc1tlhal2.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc1tlhal2.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        var list2 : List[Int] = List()\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            list2 = list2 :+ round(i).toInt\n        }\n        for (i <- list2) {\n            sum += i\n        }\n        return sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122493,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpva6jegb1.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpva6jegb1.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpva6jegb1.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 : List[Long] = List()\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            list2 = list2 :+ round(i)\n        }\n        list2.sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppnqzw0ow.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppnqzw0ow.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppnqzw0ow.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- 0 until list1.asInstanceOf[List[Int]].length) {\n            sum += round(list1.asInstanceOf[List[Int]].apply(i)).toLong\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeqyscws1.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeqyscws1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeqyscws1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        var list2 : List[Int] = List()\n        for (i <- 0 until list1.asInstanceOf[List[Int]].length) {\n            list2 = list2 :+ round(list1.asInstanceOf[List[Int]](i)).toInt\n        }\n        for (i <- 0 until list2.length) {\n            sum += list2(i)\n        }\n        return sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjwpg2vms.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjwpg2vms.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjwpg2vms.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        val list = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for (i <- 0 until list.length) {\n            sum += round(list(i))\n        }\n        sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122505,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpttx7ay4x.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpttx7ay4x.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpttx7ay4x.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        val list = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for (i <- list) {\n            sum += round(i)\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqi_61ru.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqi_61ru.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqi_61ru.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to list1.asInstanceOf[List[Double]].length - 1) {\n            sum += round(list1.asInstanceOf[List[Double]].apply(i))\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppilrvt_q.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppilrvt_q.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppilrvt_q.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        list1 match {\n            case list1 : List[Int] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case list1 : List[Double] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case list1 : List[Float] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case list1 : List[Long] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122505,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv2n59p_q.scala:35:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv2n59p_q.scala:36:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv2n59p_q.scala:37:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        val list2 = list1.asInstanceOf[List[Double]]\n        val list3 = list2.map(x => round(x))\n        val list4 = list3.map(x => x.toLong)\n        val sum = list4.sum\n        val length = list4.length\n        sum * length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122505,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl7he821e.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl7he821e.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl7he821e.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        val list2 = list1.asInstanceOf[List[Double]]\n        val list3 = list2.map(x => round(x))\n        val list4 = list3.map(x => x.toLong)\n        val sum = list4.sum\n        val length = list4.length\n        val result = sum * length\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122505,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppotyodya.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppotyodya.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppotyodya.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        val list = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for (i <- list) {\n            sum += round(i)\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqi_61ru.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqi_61ru.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqi_61ru.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        var list = list1.asInstanceOf[List[Int]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        sum * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdp5t1xq3.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdp5t1xq3.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdp5t1xq3.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmoo3e6_1.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmoo3e6_1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmoo3e6_1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 to list.length - 1) {\n            sum += round(list(i))\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3lzl1f9_.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3lzl1f9_.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3lzl1f9_.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 = List[Long]()\n        for (x <- list1.asInstanceOf[List[Double]]) {\n            list2 = list2 :+ round(x)\n        }\n        list2.sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122505,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxrzwbre.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxrzwbre.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxrzwbre.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 until list.length) {\n            sum += round(list(i))\n        }\n        sum * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122507,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo8kwljib.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            sum += round(list(i))\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8kwljib.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8kwljib.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8kwljib.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to list1.length - 1) {\n            sum += round(list1(i).asInstanceOf[Double])\n        }\n        return sum * list1.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122507,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmps5x7z8q6.scala:7:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to list1.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmps5x7z8q6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            sum += round(list1(i).asInstanceOf[\u001b[35mDouble\u001b[0m])\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmps5x7z8q6.scala:8:25 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            sum += round(list1(i).asInstanceOf[\u001b[35mDouble\u001b[0m])\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         \u001b[33mparameter\u001b[0m \u001b[35mlist1\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmps5x7z8q6.scala:10:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum * list1.length\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps5x7z8q6.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps5x7z8q6.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list2 = List[Double]()\n        for (i <- 0 to list1.length - 1) {\n            list2 = list2 :+ round(list1(i).toDouble)\n            sum += list2(i)\n        }\n        return (sum * list2.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122507,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnwamydem.scala:8:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to list1.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnwamydem.scala:9:35 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            list2 = list2 :+ round(list1(i).toDouble)\n\u001b[31m\u001b[31m  |\u001b[0m                                   ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                  \u001b[33mparameter\u001b[0m \u001b[35mlist1\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwamydem.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwamydem.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwamydem.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        var list2 = List[Int]()\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            list2 = list2 :+ round(i).toInt\n        }\n        for (i <- list2) {\n            sum = sum + i\n        }\n        return sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122504,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphun1_bxu.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphun1_bxu.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphun1_bxu.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for (i <- list2) {\n            sum += round(i)\n        }\n        return (sum * list2.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0l7jd36b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0l7jd36b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0l7jd36b.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 to list.length - 1) {\n            sum += round(list(i))\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 to list.length - 1) {\n            sum += round(list(i))\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx1ov8pjt.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            sum += round(i)\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1ov8pjt.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1ov8pjt.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1ov8pjt.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 to list.length - 1) {\n            sum += round(list(i))\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        val list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 until list.length) {\n            sum += round(list(i))\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122505,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo1q3_wh1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo1q3_wh1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo1q3_wh1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        for (i <- 0 until list1.length) {\n            sum += round(list1(i))\n        }\n        return sum.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122508,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgayyv8k_.scala:7:32 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until list1.length) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value length is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgayyv8k_.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            sum += round(list1(i))\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value += is not a member of Double - did you mean Double.!=?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpgayyv8k_.scala:8:25 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            sum += round(list1(i))\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         \u001b[33mparameter\u001b[0m \u001b[35mlist1\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgayyv8k_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgayyv8k_.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgayyv8k_.scala:15:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122494,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvby_g528.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvby_g528.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvby_g528.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        var list2 : List[Int] = List()\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            list2 = list2 :+ round(i).toInt\n        }\n        for (i <- list2) {\n            sum = sum + i\n        }\n        sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122504,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp48anft0r.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp48anft0r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp48anft0r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        var list2 : List[Int] = List()\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            list2 = list2 :+ round(i).toInt\n        }\n        for (i <- list2) {\n            sum += i\n        }\n        sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122492,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo9iijdiq.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo9iijdiq.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo9iijdiq.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 = List[Int]()\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            list2 = list2 :+ round(i).toInt\n        }\n        return list2.sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7617zqqn.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7617zqqn.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7617zqqn.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        var count = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n            count += 1\n        }\n        sum * count\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprembksxn.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprembksxn.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprembksxn.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmoo3e6_1.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmoo3e6_1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmoo3e6_1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to list1.asInstanceOf[List[Double]].length - 1) {\n            sum += round(list1.asInstanceOf[List[Double]](i))\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122505,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpye_hdjho.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpye_hdjho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpye_hdjho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 to list.length - 1) {\n            sum += round(list(i))\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3lzl1f9_.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3lzl1f9_.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3lzl1f9_.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 to list.length - 1) {\n            sum += round(list(i))\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3lzl1f9_.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3lzl1f9_.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3lzl1f9_.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        list1 match {\n            case list1 : List[Int] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case list1 : List[Double] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case list1 : List[Long] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case list1 : List[Float] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case list1 : List[Short] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case list1 : List[Byte] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case list1 : List[BigInt] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case list1 : List[BigDecimal] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case _ => {\n                println(\"Invalid input\")\n                0\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122508,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwk11wuy6.scala:46:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m                    sum += round(i)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwk11wuy6.scala:46:27 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m                    sum += round(i)\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mround\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mscala.math\u001b[0m with types\n\u001b[31m   |\u001b[0m (x: Double): Long\n\u001b[31m   |\u001b[0m (x: Float): Int\n\u001b[31m   |\u001b[0m (x: Long): Long\n\u001b[31m   |\u001b[0mmatch arguments ((i : BigInt))\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwk11wuy6.scala:52:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m                    sum += round(i)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwk11wuy6.scala:52:27 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m                    sum += round(i)\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mround\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mscala.math\u001b[0m with types\n\u001b[31m   |\u001b[0m (x: Double): Long\n\u001b[31m   |\u001b[0m (x: Float): Int\n\u001b[31m   |\u001b[0m (x: Long): Long\n\u001b[31m   |\u001b[0mmatch arguments ((i : BigDecimal))\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwk11wuy6.scala:63:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 : List[Long] = List()\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            list2 = list2 :+ round(i).toLong\n        }\n        list2.sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5pf46hge.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5pf46hge.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5pf46hge.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 = List[Double]()\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            list2 = list2 :+ round(i)\n        }\n        list2.sum.toLong * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122505,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyrifbay7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyrifbay7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyrifbay7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 to list.length - 1) {\n            sum += round(list(i))\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i).toLong\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122491,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8jm8pf7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8jm8pf7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8jm8pf7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122505,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfob5bz7j.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfob5bz7j.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfob5bz7j.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmoo3e6_1.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmoo3e6_1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmoo3e6_1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        list1 match {\n            case list1 : List[Int] => {\n                for (i <- 0 to list1.length - 1) {\n                    sum += round(list1(i)).toLong\n                }\n            }\n            case list1 : List[Double] => {\n                for (i <- 0 to list1.length - 1) {\n                    sum += round(list1(i)).toLong\n                }\n            }\n            case list1 : List[Float] => {\n                for (i <- 0 to list1.length - 1) {\n                    sum += round(list1(i)).toLong\n                }\n            }\n            case list1 : List[Long] => {\n                for (i <- 0 to list1.length - 1) {\n                    sum += round(list1(i)).toLong\n                }\n            }\n            case _ => {\n                println(\"Invalid input\")\n            }\n        }\n        sum * list1.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122507,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0jl1rtm2.scala:32:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m        sum * list1.length\n\u001b[31m\u001b[31m   |\u001b[0m              ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0jl1rtm2.scala:35:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0jl1rtm2.scala:36:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0jl1rtm2.scala:37:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 until list.length) {\n            sum += round(list(i))\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2k_9pznl.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2k_9pznl.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2k_9pznl.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        list1 match {\n            case list1 : List[Int] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8pl3o4z1.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8pl3o4z1.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8pl3o4z1.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122511,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp40vhvu02.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp40vhvu02.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp40vhvu02.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        val list = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for (i <- list) {\n            sum += round(i)\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4hx_v4o9.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4hx_v4o9.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4hx_v4o9.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (x <- list1.asInstanceOf[List[Double]]) {\n            sum += round(x)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122511,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfe_ryc_d.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfe_ryc_d.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfe_ryc_d.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        val list = list1.asInstanceOf[List[Double]]\n        var sum : Long = 0\n        for (i <- list) {\n            sum += round(i)\n        }\n        sum * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122512,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvwqpwugu.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvwqpwugu.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvwqpwugu.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 : List[Long] = List()\n        var sum : Long = 0\n        for (i <- 0 to list1.asInstanceOf[List[Double]].length - 1) {\n            list2 = list2 :+ round(list1.asInstanceOf[List[Double]](i)).toLong\n            sum += list2(i)\n        }\n        sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122512,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe42sqr__.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe42sqr__.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe42sqr__.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        val list = list1.asInstanceOf[List[Double]]\n        val roundedList = list.map(x => round(x))\n        val sum = roundedList.sum\n        val length = roundedList.length\n        sum * length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122493,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzxfapnqy.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzxfapnqy.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzxfapnqy.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 to list.length - 1) {\n            sum += round(list(i))\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        list1 match {\n            case list1 : List[Int] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8pl3o4z1.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8pl3o4z1.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8pl3o4z1.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list2 = List[Double]()\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            list2 = list2 :+ round(i)\n            sum += i\n        }\n        return (sum * list2.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122512,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe6who25l.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe6who25l.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe6who25l.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 until list.length) {\n            sum += round(list(i))\n        }\n        return sum * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9wjj91dw.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            sum += round(list(i))\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9wjj91dw.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9wjj91dw.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9wjj91dw.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        list1 match {\n            case list1 : List[Int] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum.toLong * list1.length\n            }\n            case list1 : List[Double] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum.toLong * list1.length\n            }\n            case list1 : List[Float] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum.toLong * list1.length\n            }\n            case list1 : List[Long] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum.toLong * list1.length\n            }\n            case list1 : List[Short] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum.toLong * list1.length\n            }\n            case list1 : List[Byte] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum.toLong * list1.length\n            }\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122512,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwm3mzppx.scala:48:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwm3mzppx.scala:49:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwm3mzppx.scala:50:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxgsm4ayp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxgsm4ayp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxgsm4ayp.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 to list.length - 1) {\n            sum += round(list(i))\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9taaunt1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        var list2 : List[Int] = List()\n        list1 match {\n            case list : List[Int] => {\n                for (i <- list) {\n                    list2 = list2 :+ round(i).toInt\n                }\n                for (i <- list2) {\n                    sum += i\n                }\n                sum * list2.length\n            }\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp15f4x8t0.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp15f4x8t0.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp15f4x8t0.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122486,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxgsm4ayp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxgsm4ayp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxgsm4ayp.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until list1.asInstanceOf[List[Int]].length) {\n            sum += round(list1.asInstanceOf[List[Int]](i))\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122512,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0cno80yp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0cno80yp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0cno80yp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for(i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122512,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qc_nynv.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qc_nynv.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1qc_nynv.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 : List[Int] = List()\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            list2 = list2 :+ round(i).toInt\n        }\n        return list2.sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122513,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6tlqu8a5.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6tlqu8a5.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6tlqu8a5.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122488,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5paz2het.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            sum += round(i)\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5paz2het.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5paz2het.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5paz2het.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        for (i <- 0 to list1.length - 1) {\n            sum += round(list1(i))\n        }\n        return sum.toLong * list1.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuj107i5q.scala:7:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to list1.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuj107i5q.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            sum += round(list1(i))\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value += is not a member of Double - did you mean Double.!=?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpuj107i5q.scala:8:25 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            sum += round(list1(i))\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         \u001b[33mparameter\u001b[0m \u001b[35mlist1\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuj107i5q.scala:10:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum.toLong * list1.length\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuj107i5q.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuj107i5q.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for (i <- list2) {\n            sum += round(i)\n        }\n        return sum.toLong * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122513,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1n7bxr_5.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1n7bxr_5.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1n7bxr_5.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (x <- list1.asInstanceOf[List[Double]]) {\n            sum += round(x)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122511,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfe_ryc_d.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfe_ryc_d.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfe_ryc_d.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmoo3e6_1.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmoo3e6_1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmoo3e6_1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        sum * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmjcrzxhm.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            sum += round(i)\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmjcrzxhm.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmjcrzxhm.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmjcrzxhm.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6fb851az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 until list.length) {\n            sum += round(list(i))\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2k_9pznl.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2k_9pznl.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2k_9pznl.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        list1 match {\n            case list1 : List[Int] => {\n                var sum : Long = 0\n                for (i <- list1) {\n                    sum += round(i)\n                }\n                sum * list1.length\n            }\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122512,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdfty37f6.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdfty37f6.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdfty37f6.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        val list = list1.asInstanceOf[List[Double]]\n        val roundedList = list.map(x => round(x))\n        roundedList.sum.toLong * roundedList.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122513,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbs91tym9.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbs91tym9.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbs91tym9.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        val list = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for (i <- list) {\n            sum += round(i)\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqi_61ru.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqi_61ru.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqi_61ru.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 = List[Long]()\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            list2 = list2 :+ round(i).toLong\n        }\n        return list2.sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122513,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpat06djqq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpat06djqq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpat06djqq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 = list1.asInstanceOf[List[Int]]\n        var sum = 0.0\n        for (i <- 0 to list2.length - 1) {\n            sum += round(list2(i))\n        }\n        return sum.toLong * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphlsh4tyz.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphlsh4tyz.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphlsh4tyz.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        var list2 : List[Int] = List()\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            list2 = list2 :+ round(i).toInt\n        }\n        for (i <- list2) {\n            sum += i\n        }\n        return sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3v_iftze.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3v_iftze.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3v_iftze.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list = list1.asInstanceOf[List[Int]]\n        var sum = 0\n        for (i <- 0 to list.length - 1) {\n            sum += round(list(i))\n        }\n        return sum * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxf5ar1jk.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            sum += round(list(i))\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxf5ar1jk.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxf5ar1jk.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxf5ar1jk.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for (i <- list) {\n            sum += round(i)\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8wv0g2i4.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8wv0g2i4.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8wv0g2i4.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        list1 match {\n            case list1 : List[Int] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n            }\n            case list1 : List[Double] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n            }\n            case list1 : List[Float] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n            }\n            case list1 : List[Long] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n            }\n            case list1 : List[Short] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n            }\n            case list1 : List[Byte] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n            }\n            case list1 : List[Char] => {\n                for (i <- list1) {\n                    sum += round(i)\n                }\n            }\n            case _ => {\n                println(\"Invalid input\")\n            }\n        }\n        return sum * list1.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptnnfnqlj.scala:47:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m        \u001b[33mreturn\u001b[0m sum * list1.length\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptnnfnqlj.scala:50:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptnnfnqlj.scala:51:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptnnfnqlj.scala:52:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpie3qvhe9.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- 0 to list1.asInstanceOf[List[Double]].length - 1) {\n            sum += round(list1.asInstanceOf[List[Double]](i))\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp38kdfvlb.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp38kdfvlb.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp38kdfvlb.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for (i <- list2) {\n            sum += round(i)\n        }\n        return sum.toLong * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122513,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1n7bxr_5.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1n7bxr_5.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1n7bxr_5.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        return sum * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122514,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpznmt8zt3.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpznmt8zt3.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpznmt8zt3.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- list) {\n            sum += round(i)\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8vhn9oh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        var list2 : List[Long] = List()\n        for (x <- list1.asInstanceOf[List[Double]]) {\n            list2 = list2 :+ round(x)\n        }\n        for (x <- list2) {\n            sum = sum + x\n        }\n        return sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27hq16vl.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27hq16vl.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27hq16vl.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx1ov8pjt.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            sum += round(i)\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1ov8pjt.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1ov8pjt.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1ov8pjt.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for(i <- 0 until list.length) {\n            sum += round(list(i))\n        }\n        return sum.toLong * list.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdv981zyy.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdv981zyy.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdv981zyy.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 = list1.asInstanceOf[List[Double]]\n        var sum : Long = 0\n        for (i <- list2) {\n            sum += round(i).toLong\n        }\n        sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7mj0lvj1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7mj0lvj1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7mj0lvj1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        var list2 : List[Int] = List()\n        for (i <- list1.asInstanceOf[List[Int]]) {\n            list2 = list2 :+ round(i).toInt\n        }\n        for (i <- list2) {\n            sum += i\n        }\n        sum * list2.length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyf4sh0pb.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyf4sh0pb.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyf4sh0pb.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- 0 until list1.asInstanceOf[List[Int]].length) {\n            sum += round(list1.asInstanceOf[List[Int]](i)).toLong\n        }\n        return sum * list1.asInstanceOf[List[Int]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpunvaxuc7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpunvaxuc7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpunvaxuc7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list2 = list1.asInstanceOf[List[Double]]\n        for (i <- 0 until list2.length) {\n            sum += round(list2(i))\n        }\n        return (sum * list2.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509875,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu8zyi9ho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu8zyi9ho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu8zyi9ho.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until list1.asInstanceOf[List[Double]].length) {\n            sum += round(list1.asInstanceOf[List[Double]](i))\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhhx8t1o.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhhx8t1o.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhhx8t1o.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var list2 = list1.asInstanceOf[List[Double]]\n        var sum = 0.0\n        for (i <- list2) {\n            sum += round(i)\n        }\n        return (sum * list2.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0l7jd36b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0l7jd36b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0l7jd36b.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0.0\n        var list = list1.asInstanceOf[List[Double]]\n        for (i <- 0 until list.length) {\n            sum += round(list(i))\n        }\n        return (sum * list.length).toLong\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1666122479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2k_9pznl.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2k_9pznl.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2k_9pznl.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk9l6tv8b.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum : Long = 0\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        return sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2276yhp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n    def roundAndSum(list1 : Any) : Long = {\n        var sum = 0L\n        for (i <- list1.asInstanceOf[List[Double]]) {\n            sum += round(i)\n        }\n        sum * list1.asInstanceOf[List[Double]].length\n    }\n    def main(args: Array[String]) = {\n    assert(roundAndSum((Any(22.4f.toFloat, 4.0f.toFloat, -16.22f.toFloat, -9.1f.toFloat, 11.0f.toFloat, -12.22f.toFloat, 14.2f.toFloat, -5.2f.toFloat, 17.5f.toFloat))) == (243l));\n    assert(roundAndSum((Any(5l.toLong, 2l.toLong, 9l.toLong, 24.3f.toLong, 29l.toLong))) == (345l));\n    assert(roundAndSum((Any(25.0f.toFloat, 56.7f.toFloat, 89.2f.toFloat))) == (513l));\n    }\n\n}\n",
      "timestamp": 1665509869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m22.4f\u001b[0m.toFloat, \u001b[31m4.0f\u001b[0m.toFloat, -\u001b[31m16.22f\u001b[0m.toFloat, -\u001b[31m9.1f\u001b[0m.toFloat, \u001b[31m11.0f\u001b[0m.toFloat, -\u001b[31m12.22f\u001b[0m.toFloat, \u001b[31m14.2f\u001b[0m.toFloat, -\u001b[31m5.2f\u001b[0m.toFloat, \u001b[31m17.5f\u001b[0m.toFloat))) == (\u001b[31m243l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m5l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m24.3f\u001b[0m.toLong, \u001b[31m29l\u001b[0m.toLong))) == (\u001b[31m345l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvdww3byq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(roundAndSum((Any(\u001b[31m25.0f\u001b[0m.toFloat, \u001b[31m56.7f\u001b[0m.toFloat, \u001b[31m89.2f\u001b[0m.toFloat))) == (\u001b[31m513l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
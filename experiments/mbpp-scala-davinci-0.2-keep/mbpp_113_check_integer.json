{
  "name": "mbpp_113_check_integer",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if a string represents an integer or not.\n    def checkInteger(text : String) : Boolean = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_113_check_integer.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checkInteger((\"python\")) == (false));\n    assert(checkInteger((\"1\")) == (true));\n    assert(checkInteger((\"12345\")) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (text.length == 0) return false\n        var i = 0\n        if (text(0) == '-') i = 1\n        while (i < text.length) {\n            if (text(i) < '0' || text(i) > '9') return false\n            i += 1\n        }\n        return true",
    "        if (text.length == 0) return false\n        var i = 0\n        if (text(0) == '-') i = 1\n        for (j <- i until text.length) {\n            if (text(j) < '0' || text(j) > '9') return false\n        }\n        return true",
    "        if (text.length == 0) return false\n        var i = 0\n        if (text(0) == '-') i = 1\n        for (j <- i until text.length) {\n            if (!(text(j) >= '0' && text(j) <= '9')) return false\n        }\n        return true",
    "        if (text.length == 0) return false\n        var i = 0\n        if (text(0) == '-') i = 1\n        for (j <- i until text.length) {\n            if (text(j) < '0' || text(j) > '9') return false\n        }\n        true",
    "        if (text == null || text.length == 0) return false\n        var i = 0\n        if (text(0) == '-') i = 1\n        for (j <- i until text.length) {\n            if (text(j) < '0' || text(j) > '9') return false\n        }\n        true",
    "        try {\n            text.toInt\n            true\n        } catch {\n            case e : Exception => false\n        }",
    "        try {\n            text.toInt\n            true\n        } catch {\n            case e : NumberFormatException => false\n        }",
    "        if (text.length == 0) return false\n        var i = 0\n        if (text(0) == '-') i = 1\n        for (j <- i until text.length) {\n            if (!text(j).isDigit) return false\n        }\n        return true",
    "        var result = true\n        if (text.length == 0) result = false\n        else {\n            for (i <- 0 until text.length) {\n                if (i == 0) {\n                    if (text(i) == '-' || text(i) == '+') {\n                        if (text.length == 1) result = false\n                    }\n                    else if (!text(i).isDigit) result = false\n                }\n                else if (!text(i).isDigit) result = false\n            }\n        }\n        result",
    "        if (text.length == 0) return false\n        var i = 0\n        if (text(0) == '-') i = 1\n        for (j <- i until text.length) {\n            if (!(text(j) >= '0' && text(j) <= '9')) return false\n        }\n        true",
    "        if (text.length == 0) return false\n        for (i <- 0 until text.length) {\n            if (!(text(i) >= '0' && text(i) <= '9')) return false\n        }\n        return true",
    "        if (text.length == 0) return false\n        var i = 0\n        if (text(0) == '-') i = 1\n        for (j <- i until text.length) {\n            if (!(text(j) >= '0' && text(j) <= '9')) return false\n        }\n        return true",
    "        if (text.length == 0) return false\n        var i = 0\n        if (text(0) == '-') i = 1\n        for (j <- i until text.length) {\n            if (text(j) < '0' || text(j) > '9') return false\n        }\n        return true",
    "        if (text.length == 0) return false\n        var i = 0\n        if (text(0) == '-') i = 1\n        while (i < text.length) {\n            if (text(i) < '0' || text(i) > '9') return false\n            i += 1\n        }\n        return true",
    "        try {\n            text.toInt\n            true\n        } catch {\n            case e : Exception => false\n        }",
    "        if (text == null || text.length == 0) return false\n        var i = 0\n        if (text(0) == '-') i = 1\n        for (j <- i until text.length) {\n            if (text(j) < '0' || text(j) > '9') return false\n        }\n        return true",
    "        if (text.length == 0) return false\n        var i = 0\n        if (text(0) == '-') i = 1\n        while (i < text.length) {\n            if (text(i) < '0' || text(i) > '9') return false\n            i += 1\n        }\n        return true",
    "        var isInteger = true\n        var i = 0\n        if (text.length == 0) isInteger = false\n        else if (text(0) == '-') i = 1\n        while (i < text.length && isInteger) {\n            if (!text(i).isDigit) isInteger = false\n            i += 1\n        }\n        isInteger",
    "        if (text.length == 0) return false\n        var i = 0\n        if (text(0) == '-') i = 1\n        for (j <- i until text.length) {\n            if (!text(j).isDigit) return false\n        }\n        return true",
    "        if (text.length == 0) return false\n        if (text.length == 1 && text(0) == '0') return true\n        if (text(0) == '0') return false\n        if (text(0) == '+' || text(0) == '-') return checkInteger(text.substring(1))\n        for (i <- 0 until text.length) {\n            if (text(i) < '0' || text(i) > '9') return false\n        }\n        true"
  ]
}
{
  "name": "mbpp_581_surface_Area",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the surface area of a square pyramid with a given base edge and height.\n    def surfaceArea(b : Long, s : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_581_surface_Area.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(surfaceArea((3l), (4l)) == (33l));\n    assert(surfaceArea((4l), (5l)) == (56l));\n    assert(surfaceArea((1l), (2l)) == (5l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val area = b * b + 2 * b * sqrt(s * s + b * b / 4)\n        return area.toLong",
    "        return b * b + 2 * b * s",
    "        val a = sqrt(s * s - (b / 2) * (b / 2))\n        val area = b * a + b * b\n        area.toLong",
    "        val area = b * b\n        val slant = sqrt(s * s + b * b / 4)\n        val lateral = 2 * area + 4 * slant * b / 2\n        val base = area\n        lateral + base",
    "        val a = sqrt(s * s - (b / 2) * (b / 2))\n        val area = b * a + b * b\n        area.toLong",
    "        val area = b * b + 2 * b * s\n        area",
    "        val a = sqrt(s * s - (b / 2) * (b / 2))\n        val h = sqrt(s * s - (a / 2) * (a / 2))\n        val area = b * b + 2 * b * a\n        area.toLong",
    "        val area = b * b + 2 * b * s\n        area",
    "        return b * b + 2 * b * s",
    "        return b * b + 2 * b * s",
    "        val area = b * b + 2 * b * sqrt(s * s + b * b / 4)\n        return area.toLong",
    "        b * b + 2 * b * s",
    "        return b * b + 2 * b * s",
    "        val a = sqrt(s * s - (b / 2) * (b / 2))\n        return (b * b + 4 * a * b)",
    "        return b * b + 2 * b * s",
    "        val area = b * b + 2 * b * s\n        area",
    "        val a = sqrt(s * s - (b / 2) * (b / 2))\n        val area = b * a + b * b\n        return area.toLong",
    "        return b * b + 2 * b * s",
    "        val area = b * b + 2 * b * s\n        area",
    "        val area = b * b + 2 * b * sqrt(s * s + (b / 2) * (b / 2))\n        area.toLong"
  ]
}
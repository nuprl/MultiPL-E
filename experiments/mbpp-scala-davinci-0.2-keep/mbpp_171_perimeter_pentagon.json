{
  "name": "mbpp_171_perimeter_pentagon",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the perimeter of a regular pentagon from the length of its sides.\n    def perimeterPentagon(a : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_171_perimeter_pentagon.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(perimeterPentagon((5l)) == (25l));\n    assert(perimeterPentagon((10l)) == (50l));\n    assert(perimeterPentagon((15l)) == (75l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        5 * a",
    "        5 * a",
    "        5 * a",
    "        5 * a",
    "        5 * a",
    "        5 * a",
    "        a * 5",
    "        5 * a",
    "        return 5 * a",
    "        return 5 * a",
    "        5 * a",
    "        a * 5",
    "        5 * a",
    "        5 * a",
    "        5 * a",
    "        5 * a",
    "        5 * a",
    "        a * 5",
    "        5 * a",
    "        a * 5"
  ]
}
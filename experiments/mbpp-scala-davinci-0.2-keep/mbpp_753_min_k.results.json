{
  "name": "mbpp_753_min_k",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_753_min_k.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        if (K > test_list.length) throw new Exception(\"K is greater than length of list\")\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u5d2qcm.scala:11:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u5d2qcm.scala:11:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u5d2qcm.scala:11:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.getOrElse(0))\n        sorted.slice(0, K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpcvwxk_gk.scala:6:59 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted\u001b[0m = test_list.sortBy(_.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                           ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcvwxk_gk.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcvwxk_gk.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.getOrElse(0))\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpnc45smzz.scala:6:59 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted\u001b[0m = test_list.sortBy(_.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                           ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnc45smzz.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnc45smzz.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        if (K > test_list.length) return test_list\n        val min_list = new ListBuffer[Either[String, Long]]\n        for (i <- 0 until K.toInt) {\n            var min_value = Long.MaxValue\n            var min_index = -1\n            for (j <- i until test_list.length) {\n                if (test_list(j).right.get < min_value) {\n                    min_value = test_list(j).right.get\n                    min_index = j\n                }\n            }\n            min_list += test_list(min_index)\n            val temp = test_list(i)\n            test_list(i) = test_list(min_index)\n            test_list(min_index) = temp\n        }\n        return min_list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsi_4u0n2.scala:19:12 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            test_list(i) = test_list(min_index)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue update is not a member of List[Either[String, Long]] - did you mean test_list.updated?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsi_4u0n2.scala:20:12 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m            test_list(min_index) = temp\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue update is not a member of List[Either[String, Long]] - did you mean test_list.updated?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsi_4u0n2.scala:25:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsi_4u0n2.scala:25:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith(_.right.get < _.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sqca38h.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sqca38h.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sqca38h.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x.right.get)\n        sorted.slice(0, K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdlkcr6n.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdlkcr6n.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdlkcr6n.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        if (K < 0) throw new IllegalArgumentException\n        if (K == 0) return List()\n        var min_list = new ListBuffer[Either[String, Long]]\n        var min_list_size = 0\n        for (i <- 0 until test_list.length) {\n            if (min_list_size < K) {\n                min_list += test_list(i)\n                min_list_size += 1\n            } else {\n                var max_index = 0\n                var max_value = min_list(0)\n                for (j <- 1 until min_list_size) {\n                    if (min_list(j) > max_value) {\n                        max_index = j\n                        max_value = min_list(j)\n                    }\n                }\n                if (test_list(i) < max_value) {\n                    min_list(max_index) = test_list(i)\n                }\n            }\n        }\n        return min_list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpplw8ots3.scala:18:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    \u001b[33mif\u001b[0m (min_list(j) > max_value) {\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue > is not a member of Either[String, Long], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Ordered.orderingToOrdered\n\u001b[31m   |\u001b[0m  import math.Ordering.Implicits.infixOrderingOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpplw8ots3.scala:23:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                \u001b[33mif\u001b[0m (test_list(i) < max_value) {\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue < is not a member of Either[String, Long], but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Ordered.orderingToOrdered\n\u001b[31m   |\u001b[0m  import math.Ordering.Implicits.infixOrderingOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpplw8ots3.scala:31:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-exp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val min_heap = new PriorityQueue[Either[String, Long]]()(Ordering.by((_ : Either[String, Long]).right.get))\n        for (i <- test_list) {\n            if (min_heap.size < K) min_heap.enqueue(i)\n            else {\n                if (min_heap.head.right.get > i.right.get) {\n                    min_heap.dequeue\n                    min_heap.enqueue(i)\n                }\n            }\n        }\n        min_heap.toList\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_17k_6oa.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_17k_6oa.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_17k_6oa.scala:19:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x.right.getOrElse(0))\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpuyimb57a.scala:6:64 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted\u001b[0m = test_list.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        var min_list = new ListBuffer[Either[String, Long]]()\n        for (i <- 0 until K.toInt) {\n            min_list += test_list(i)\n        }\n        for (i <- K.toInt until test_list.length) {\n            val max_val = min_list.maxBy(x => x.right.getOrElse(0))\n            if (test_list(i).right.getOrElse(0) < max_val.right.getOrElse(0)) {\n                min_list -= max_val\n                min_list += test_list(i)\n            }\n        }\n        min_list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp2x4vbr6e.scala:11:67 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmax_val\u001b[0m = min_list.maxBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m   |\u001b[0mI found:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m   |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m   |\u001b[0m    )\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2x4vbr6e.scala:12:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mif\u001b[0m (test_list(i).right.getOrElse(\u001b[31m0\u001b[0m) < max_val.right.getOrElse(\u001b[31m0\u001b[0m)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue < is not a member of AnyVal, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Ordered.orderingToOrdered\n\u001b[31m   |\u001b[0m  import math.Ordering.Implicits.infixOrderingOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2x4vbr6e.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted_list = test_list.sortBy(_.right.getOrElse(0))\n        sorted_list.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpzyj25cbi.scala:6:64 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted_list\u001b[0m = test_list.sortBy(_.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzyj25cbi.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzyj25cbi.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        test_list.sortWith((a, b) => a.right.get < b.right.get).take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjxigw3rq.scala:9:44 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjxigw3rq.scala:9:62 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjxigw3rq.scala:9:78 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.slice(0, K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmb8xrwie.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmb8xrwie.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmb8xrwie.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted_list = test_list.sortBy(_.right.get)\n        sorted_list.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmq0u49o.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmq0u49o.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmq0u49o.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(n) => n\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp98uiews6.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98uiews6.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98uiews6.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val minHeap = new MinHeap[Either[String, Long]](K.toInt)\n        for (i <- test_list) {\n            if (minHeap.size < K) {\n                minHeap.add(i)\n            } else {\n                if (i.isRight && minHeap.peek.isRight && i.right.get < minHeap.peek.right.get) {\n                    minHeap.pop\n                    minHeap.add(i)\n                }\n            }\n        }\n        minHeap.toList\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp41gwiqga.scala:6:26 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mminHeap\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mMinHeap\u001b[0m[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](K.toInt)\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          Not found: type MinHeap\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp41gwiqga.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp41gwiqga.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Requ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s.length\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptjd9q6qc.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptjd9q6qc.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptjd9q6qc.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.getOrElse(Long.MaxValue))\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaf0kqnmn.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaf0kqnmn.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaf0kqnmn.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted.slice(0, K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz886_kvw.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz886_kvw.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz886_kvw.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(x) => x\n            case Right(x) => x\n        })\n        val result = sorted.take(K.toInt)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpch6yn321.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpch6yn321.scala:14:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpch6yn321.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x.right.getOrElse(0))\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpuyimb57a.scala:6:64 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted\u001b[0m = test_list.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        test_list.sortWith((x, y) => x.right.get < y.right.get).take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqsg88k5x.scala:9:44 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqsg88k5x.scala:9:62 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqsg88k5x.scala:9:78 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted_list = test_list.sortBy(_.right.get)\n        sorted_list.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmq0u49o.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmq0u49o.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmq0u49o.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.slice(0, K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmb8xrwie.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmb8xrwie.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmb8xrwie.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted_list = test_list.sortBy(_.right.get)\n        sorted_list.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmq0u49o.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmq0u49o.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmq0u49o.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.slice(0, K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmb8xrwie.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmb8xrwie.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmb8xrwie.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x.right.getOrElse(0))\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpuyimb57a.scala:6:64 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted\u001b[0m = test_list.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted_list = test_list.sortBy(_.right.getOrElse(0))\n        sorted_list.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpzyj25cbi.scala:6:64 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted_list\u001b[0m = test_list.sortBy(_.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzyj25cbi.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzyj25cbi.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        }).take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx1n0fbcx.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        }).take(K.toInt)\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx1n0fbcx.scala:12:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx1n0fbcx.scala:12:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x.right.getOrElse(0))\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpuyimb57a.scala:6:64 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted\u001b[0m = test_list.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s.length\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptjd9q6qc.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptjd9q6qc.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptjd9q6qc.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted.slice(0, K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz886_kvw.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz886_kvw.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz886_kvw.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x.right.getOrElse(0))\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpuyimb57a.scala:6:64 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted\u001b[0m = test_list.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        if (test_list.length < K) throw new IllegalArgumentException(\"K must be less than or equal to the length of the list\")\n        val minHeap = new MinHeap(K)\n        for (elem <- test_list) {\n            if (minHeap.size < K) {\n                minHeap.insert(elem)\n            } else {\n                if (elem.right.get > minHeap.peek.right.get) {\n                    minHeap.extractMin\n                    minHeap.insert(elem)\n                }\n            }\n        }\n        minHeap.heap\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp77cvlw6r.scala:7:26 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mminHeap\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mMinHeap\u001b[0m(K)\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          Not found: type MinHeap\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp77cvlw6r.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp77cvlw6r.scala:21:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        var min_list = new ListBuffer[Either[String, Long]]()\n        var max_list = new ListBuffer[Either[String, Long]]()\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isLeft) {\n                if (min_list.length < K) {\n                    min_list += test_list(i)\n                } else {\n                    max_list += test_list(i)\n                }\n            } else {\n                if (max_list.length < K) {\n                    max_list += test_list(i)\n                } else {\n                    min_list += test_list(i)\n                }\n            }\n        }\n        min_list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefquimdr.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefquimdr.scala:26:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefquimdr.scala:26:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        test_list.sortWith((x, y) => x.right.get < y.right.get).take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqsg88k5x.scala:9:44 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqsg88k5x.scala:9:62 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqsg88k5x.scala:9:78 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => {\n            if (a.isLeft && b.isLeft) {\n                a.left.get.length < b.left.get.length\n            } else if (a.isLeft) {\n                true\n            } else if (b.isLeft) {\n                false\n            } else {\n                a.right.get < b.right.get\n            }\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6sh5r69z.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6sh5r69z.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6sh5r69z.scala:20:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s.toLong\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqdqlcqyy.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqdqlcqyy.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqdqlcqyy.scala:13:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.slice(0, K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmb8xrwie.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmb8xrwie.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmb8xrwie.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted_list = test_list.sortBy(x => x.right.getOrElse(0))\n        sorted_list.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9r7uyhtg.scala:6:69 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted_list\u001b[0m = test_list.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                     ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9r7uyhtg.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9r7uyhtg.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                         ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        }).take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx1n0fbcx.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        }).take(K.toInt)\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx1n0fbcx.scala:12:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx1n0fbcx.scala:12:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted_list = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted_list.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_e1s78l8.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_e1s78l8.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_e1s78l8.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted_list = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted_list.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_e1s78l8.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_e1s78l8.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_e1s78l8.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        }).take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx1n0fbcx.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        }).take(K.toInt)\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx1n0fbcx.scala:12:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx1n0fbcx.scala:12:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.getOrElse(0) < y.right.getOrElse(0))\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666124006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvtgyshkr.scala:6:71 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted\u001b[0m = test_list.sortWith((\u001b[36mx\u001b[0m, \u001b[36my\u001b[0m) => x.right.getOrElse(\u001b[31m0\u001b[0m) < y.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue < is not a member of AnyVal, but could be made available as an extension method.\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m  import math.Ordered.orderingToOrdered\n\u001b[31m  |\u001b[0m  import math.Ordering.Implicits.infixOrderingOps\n\u001b[31m  |\u001b[0m\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvtgyshkr.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvtgyshkr.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted_list = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted_list.slice(0, K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666124006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpd0lhde8l.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd0lhde8l.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd0lhde8l.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        if (K < 0) throw new IllegalArgumentException(\"K must be non-negative\")\n        if (K == 0) return List()\n        if (test_list.length < K) throw new IllegalArgumentException(\"K must be less than or equal to the length of the list\")\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666124007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikd8td_b.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikd8td_b.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikd8td_b.scala:13:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(x) => Long.MaxValue\n            case Right(x) => x\n        })\n        sorted.slice(0, K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666124007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2r8zy9su.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2r8zy9su.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2r8zy9su.scala:13:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x.right.getOrElse(0))\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpuyimb57a.scala:6:64 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted\u001b[0m = test_list.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.getOrElse(Long.MaxValue))\n        sorted.slice(0, K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666124007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptw0fszv0.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptw0fszv0.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptw0fszv0.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        var result : List[Either[String, Long]] = List()\n        var min : Long = Long.MaxValue\n        var min_index : Long = -1\n        for (i <- 0 until K) {\n            for (j <- i until test_list.length) {\n                if (test_list(j).isRight && test_list(j).right.get < min) {\n                    min = test_list(j).right.get\n                    min_index = j\n                }\n            }\n            result = result :+ test_list(min_index)\n            min = Long.MaxValue\n            min_index = -1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666124007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqeakrj4g.scala:9:26 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until K) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^\u001b[0m\n\u001b[31m  |\u001b[0m                          Found:    (K : Long)\n\u001b[31m  |\u001b[0m                          Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqeakrj4g.scala:16:41 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            result = result :+ test_list(min_index)\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                         Found:    (min_index : Long)\n\u001b[31m   |\u001b[0m                                         Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqeakrj4g.scala:23:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqeakrj4g.scala:23:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"N",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => Long.MaxValue\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666124007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehg6cbqu.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehg6cbqu.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehg6cbqu.scala:13:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        if (K < 0) throw new IllegalArgumentException(\"K must be non-negative\")\n        if (K == 0) return List()\n        var min_list = ListBuffer[Either[String, Long]]()\n        for (i <- 0 until K) {\n            var min_index = -1\n            var min_value = Long.MaxValue\n            for (j <- 0 until test_list.length) {\n                if (test_list(j).isRight && test_list(j).right.get < min_value && !min_list.contains(test_list(j))) {\n                    min_index = j\n                    min_value = test_list(j).right.get\n                }\n            }\n            if (min_index == -1) return min_list.toList\n            min_list += test_list(min_index)\n        }\n        min_list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666124008,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcqzq2egj.scala:9:26 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until K) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^\u001b[0m\n\u001b[31m  |\u001b[0m                          Found:    (K : Long)\n\u001b[31m  |\u001b[0m                          Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcqzq2egj.scala:24:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcqzq2egj.scala:24:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s.length\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptjd9q6qc.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptjd9q6qc.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptjd9q6qc.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        var min_list = List[Either[String, Long]]()\n        var max_list = List[Either[String, Long]]()\n        for (i <- 0 until K.toInt) {\n            min_list = min_list :+ test_list(i)\n        }\n        for (i <- K.toInt until test_list.length) {\n            var max_value = min_list.maxBy(_.right.get)\n            if (test_list(i).right.get < max_value.right.get) {\n                min_list = min_list.filter(_ != max_value)\n                min_list = min_list :+ test_list(i)\n            }\n        }\n        min_list\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666124007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1nk1_9vp.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1nk1_9vp.scala:21:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1nk1_9vp.scala:21:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        test_list.sortBy(_.right.get).take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666124007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7xoszkba.scala:9:44 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7xoszkba.scala:9:62 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7xoszkba.scala:9:78 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((x, y) => x.right.get < y.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwl_9o3qp.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(n) => n\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp98uiews6.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98uiews6.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98uiews6.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.getOrElse(0))\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpnc45smzz.scala:6:59 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted\u001b[0m = test_list.sortBy(_.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                           ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnc45smzz.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnc45smzz.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx01bo7r9.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx01bo7r9.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(_.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1665510576,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd67qekj9.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortWith((a, b) => a.right.get < b.right.get)\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsumt6fy2.scala:10:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\n    def minK(test_list : List[Either[String, Long]], K : Long) : List[Either[String, Long]] = {\n        val sorted = test_list.sortBy(x => x.right.getOrElse(0))\n        sorted.take(K.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(minK((List[Either[String, Long]]((\"Manjeet\", 10l), (\"Akshat\", 4l), (\"Akash\", 2l), (\"Nikhil\", 8l))), (2l)).equals((List[Either[String, Long]]((\"Akash\", 2l), (\"Akshat\", 4l)))));\n    assert(minK((List[Either[String, Long]]((\"Sanjeev\", 11l), (\"Angat\", 5l), (\"Akash\", 3l), (\"Nepin\", 9l))), (3l)).equals((List[Either[String, Long]]((\"Akash\", 3l), (\"Angat\", 5l), (\"Nepin\", 9l)))));\n    assert(minK((List[Either[String, Long]]((\"tanmay\", 14l), (\"Amer\", 11l), (\"Ayesha\", 9l), (\"SKD\", 16l))), (1l)).equals((List[Either[String, Long]]((\"Ayesha\", 9l)))));\n    }\n\n}\n",
      "timestamp": 1666123991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpuyimb57a.scala:6:64 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted\u001b[0m = test_list.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyimb57a.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minK((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Nikhil\"\u001b[0m, \u001b[31m8l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Akash\"\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m\"Akshat\"\u001b[0m, \u001b[31m4l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_294_max_val",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_294_max_val.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong > max) max = x.toLong\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpueul8_fw.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpueul8_fw.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpueul8_fw.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpueul8_fw.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(x => x.isRight).map(x => x.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucxipqcu.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucxipqcu.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucxipqcu.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucxipqcu.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n      var max : Long = 0\n      for (i <- listval) {\n        i match {\n          case Left(s) => {\n            val l = s.toLong\n            if (l > max) max = l\n          }\n          case Right(l) => {\n            if (l > max) max = l\n          }\n        }\n      }\n      max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv44eqzby.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv44eqzby.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv44eqzby.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv44eqzby.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        if (listval.isEmpty) 0\n        else {\n            val max = listval.map(x => x match {\n                case Left(s) => 0\n                case Right(l) => l\n            }).max\n            max\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqomd8l6m.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqomd8l6m.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqomd8l6m.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqomd8l6m.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (max < s.length) max = s.length\n                }\n                case Right(l) => {\n                    if (max < l) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvw07aye.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvw07aye.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvw07aye.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvw07aye.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => {\n            x match {\n                case Left(y) => {\n                    if (y.length > max) max = y.length\n                }\n                case Right(y) => {\n                    if (y > max) max = y\n                }\n            }\n        })\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm51z92ap.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm51z92ap.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm51z92ap.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm51z92ap.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv7iq8k0b.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv7iq8k0b.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv7iq8k0b.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv7iq8k0b.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.foldLeft(0L)((acc, x) => x match {\n            case Left(s) => acc\n            case Right(l) => max(acc, l)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuck8d3o2.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuck8d3o2.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuck8d3o2.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuck8d3o2.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    val num = x.toLong\n                    if (num > max) max = num\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr_l5j_sr.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr_l5j_sr.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr_l5j_sr.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr_l5j_sr.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (elem <- listval) {\n            elem match {\n                case Left(str) => {\n                    val num = str.toLong\n                    if (num > max) max = num\n                }\n                case Right(num) => {\n                    if (num > max) max = num\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x5wvxn_.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x5wvxn_.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x5wvxn_.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x5wvxn_.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    println(\"String\")\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68rs2e20.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68rs2e20.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68rs2e20.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68rs2e20.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => println(\"String value found\")\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx0qxqgrz.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx0qxqgrz.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx0qxqgrz.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx0qxqgrz.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(_.isRight).map(_.right.get)\n        list.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val n = s.toLong\n                    if (n > max) max = n\n                }\n                case Right(n) => {\n                    if (n > max) max = n\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_403w676.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_403w676.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_403w676.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_403w676.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(n) => {\n                    if (n > max) max = n\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvt_vd3xt.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvt_vd3xt.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvt_vd3xt.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvt_vd3xt.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(_.isRight).map(_.right.get)\n        if (list.isEmpty) 0 else list.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123626,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5hr_2a1.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5hr_2a1.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5hr_2a1.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5hr_2a1.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong > max) max = x.toLong\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => x match {\n            case Left(s) =>\n            case Right(l) => if (l > max) max = l\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk3or_b8f.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk3or_b8f.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk3or_b8f.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk3or_b8f.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val n = s.toLong\n                    if (n > max) max = n\n                }\n                case Right(n) => {\n                    if (n > max) max = n\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04lng83q.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04lng83q.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04lng83q.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04lng83q.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5uzk7wdr.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5uzk7wdr.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5uzk7wdr.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5uzk7wdr.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (max < s.length) max = s.length\n                }\n                case Right(l) => {\n                    if (max < l) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvw07aye.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvw07aye.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvw07aye.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvw07aye.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(x => x.isRight).map(x => x.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucxipqcu.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucxipqcu.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucxipqcu.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucxipqcu.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val x = s.toLong\n                    if (x > max) max = x\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcdehad_9.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcdehad_9.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcdehad_9.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcdehad_9.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.collect {\n            case Right(x) => x\n        }.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vwoy7q6.scala:11:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vwoy7q6.scala:11:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vwoy7q6.scala:11:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vwoy7q6.scala:11:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123592,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = Long.MinValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => max = max\n                case Right(l) => max = max(max, l)\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123626,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpg6ff1bvq.scala:10:39 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mcase\u001b[0m Right(l) => max = max(max, l)\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                   \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg6ff1bvq.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg6ff1bvq.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg6ff1bvq.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => max = max\n                case Right(l) => max = max(max, l)\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpwrytiebv.scala:10:39 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mcase\u001b[0m Right(l) => max = max(max, l)\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                   \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwrytiebv.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwrytiebv.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwrytiebv.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5v9tuhc8.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5v9tuhc8.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5v9tuhc8.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5v9tuhc8.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- 0 until listval.length) {\n            if (listval(i).isRight) {\n                if (listval(i).right.get > max) {\n                    max = listval(i).right.get\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0bt2rnhu.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0bt2rnhu.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0bt2rnhu.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0bt2rnhu.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = Long.MinValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjlt5uotn.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjlt5uotn.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjlt5uotn.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjlt5uotn.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => max = max\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    println(x)\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp3vttptx.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp3vttptx.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp3vttptx.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp3vttptx.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.foldLeft(0L)((a, b) => b match {\n            case Left(x) => a\n            case Right(x) => max(a, x)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123626,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp94eqsd2t.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp94eqsd2t.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp94eqsd2t.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp94eqsd2t.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get > max) max = i.right.get\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wagmn2s.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wagmn2s.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wagmn2s.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wagmn2s.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for(i <- listval) {\n            i match {\n                case Left(s) => {\n                    if(s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if(l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9_sk0gyk.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9_sk0gyk.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9_sk0gyk.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9_sk0gyk.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get > max) max = i.right.get\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo7gpwhbo.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo7gpwhbo.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo7gpwhbo.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo7gpwhbo.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => println(s)\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplc4z5ve8.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplc4z5ve8.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplc4z5ve8.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplc4z5ve8.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(num) => {\n                    if (num > max) max = num\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg38habdb.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg38habdb.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg38habdb.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg38habdb.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val v = s.toLong\n                    if (v > max) max = v\n                }\n                case Right(v) => {\n                    if (v > max) max = v\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp30owa7mm.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp30owa7mm.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp30owa7mm.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp30owa7mm.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (elem <- listval) {\n            elem match {\n                case Left(str) => {\n                    val num = str.toLong\n                    if (num > max) max = num\n                }\n                case Right(num) => {\n                    if (num > max) max = num\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x5wvxn_.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x5wvxn_.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x5wvxn_.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x5wvxn_.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        listval.foreach(x => x match {\n            case Left(s) =>\n            case Right(l) => if (l > max) max = l\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphu53t6qd.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphu53t6qd.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphu53t6qd.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphu53t6qd.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv7iq8k0b.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv7iq8k0b.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv7iq8k0b.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv7iq8k0b.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var maxVal = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > maxVal) maxVal = num\n                }\n                case Right(num) => {\n                    if (num > maxVal) maxVal = num\n                }\n            }\n        }\n        maxVal\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk7dwm_8w.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk7dwm_8w.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk7dwm_8w.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk7dwm_8w.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.foldLeft(0L)((max, e) => e match {\n            case Left(s) => max\n            case Right(l) => max max l\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123643,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps4sjd1dp.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps4sjd1dp.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps4sjd1dp.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps4sjd1dp.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.foldLeft(0L)((x, y) => y match {\n            case Left(s) => x\n            case Right(l) => max(x, l)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvdnmlgzq.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvdnmlgzq.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvdnmlgzq.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvdnmlgzq.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => s.toLong\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeb7u2xdw.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeb7u2xdw.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeb7u2xdw.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeb7u2xdw.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong > max) max = x.toLong\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => x match {\n            case Left(s) => {\n                val num = s.toLong\n                if (num > max) max = num\n            }\n            case Right(l) => {\n                if (l > max) max = l\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx16udcp_.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx16udcp_.scala:19:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx16udcp_.scala:19:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx16udcp_.scala:19:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    val v = x.toLong\n                    if (v > max) max = v\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123643,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9l647u7h.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9l647u7h.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9l647u7h.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9l647u7h.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => max = max\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvhsseotn.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (max < x.length) max = x.length\n                }\n                case Right(x) => {\n                    if (max < x) max = x\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsulc4h9j.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsulc4h9j.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsulc4h9j.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsulc4h9j.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var maxval = Long.MinValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > maxval) maxval = l\n                }\n                case Right(l) => {\n                    if (l > maxval) maxval = l\n                }\n            }\n        }\n        maxval\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbru531se.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbru531se.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbru531se.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbru531se.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    if (max < s.toLong) max = s.toLong\n                }\n                case Right(l) => {\n                    if (max < l) max = l\n                }\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgxsr1muy.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgxsr1muy.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgxsr1muy.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgxsr1muy.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(n) => {\n                    if (n > max) max = n\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510620,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv41bk6ox.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv41bk6ox.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv41bk6ox.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv41bk6ox.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => max = max\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ow59o9b.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = Long.MinValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wre7_wz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wre7_wz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wre7_wz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wre7_wz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) {\n                        max = s.toLong\n                    }\n                }\n                case Right(l) => {\n                    if (l > max) {\n                        max = l\n                    }\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppq56_ydl.scala:24:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppq56_ydl.scala:24:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppq56_ydl.scala:24:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppq56_ydl.scala:24:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(num) => {\n                    if (num > max) max = num\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg38habdb.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg38habdb.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg38habdb.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg38habdb.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(x => x.isRight)\n        list.map(x => x.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu450ivkz.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu450ivkz.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu450ivkz.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu450ivkz.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) =>\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppfb9iqmu.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppfb9iqmu.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppfb9iqmu.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppfb9iqmu.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    val num = x.toLong\n                    if (num > max) max = num\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphg_v8z7y.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphg_v8z7y.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphg_v8z7y.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphg_v8z7y.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    max = max\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3eox5utn.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3eox5utn.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3eox5utn.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3eox5utn.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123592,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(_.isRight).map(_.right.get)\n        list.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k593yph.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get > max) max = i.right.get\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wagmn2s.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wagmn2s.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wagmn2s.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wagmn2s.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmismvomy.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get > max) {\n                    max = i.right.get\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5u1zggf5.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5u1zggf5.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5u1zggf5.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5u1zggf5.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(num) => {\n                    if (num > max) max = num\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_91wezny.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_91wezny.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_91wezny.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_91wezny.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpem16xk0n.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpag_rln41.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        })\n        list.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsfa5yeva.scala:13:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsfa5yeva.scala:13:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsfa5yeva.scala:13:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsfa5yeva.scala:13:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123592,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps0i52eoo.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(num) => if (num > max) max = num\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb8ngaiy3.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb8ngaiy3.scala:19:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb8ngaiy3.scala:19:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb8ngaiy3.scala:19:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t7rwziy.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (value <- listval) {\n            value match {\n                case Left(x) => max = max\n                case Right(x) => max = max(max, x)\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpxbgydcak.scala:10:39 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mcase\u001b[0m Right(x) => max = max(max, x)\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                   \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxbgydcak.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxbgydcak.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxbgydcak.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(n) => {\n                    if (n > max) max = n\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvt_vd3xt.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvt_vd3xt.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvt_vd3xt.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvt_vd3xt.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.foldLeft(0L)((x, y) => {\n            y match {\n                case Left(s) => x\n                case Right(l) => max(x, l)\n            }\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpucyxhd.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpucyxhd.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpucyxhd.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcpucyxhd.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    println(\"String: \" + x)\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_8t2dog.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_8t2dog.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_8t2dog.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_8t2dog.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {}\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdrkb3ns5.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdrkb3ns5.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdrkb3ns5.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdrkb3ns5.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0lk6yvi_.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0lk6yvi_.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0lk6yvi_.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0lk6yvi_.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxutuzapo.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.length > max) max = x.length\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv6ad4mwq.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv6ad4mwq.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv6ad4mwq.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv6ad4mwq.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val v = s.toLong\n                    if (v > max) max = v\n                }\n                case Right(v) => {\n                    if (v > max) max = v\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwg3_9xli.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwg3_9xli.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwg3_9xli.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwg3_9xli.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        listval.foreach(x => {\n            if (x.isRight) {\n                if (x.right.get > max) max = x.right.get\n            }\n        })\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg3mglwcd.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg3mglwcd.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg3mglwcd.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg3mglwcd.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l : Long = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphkplow57.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphkplow57.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphkplow57.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphkplow57.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0lk6yvi_.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0lk6yvi_.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0lk6yvi_.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0lk6yvi_.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length > max) max = s.length\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph0q_ozup.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) =>\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe_ae88b5.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe_ae88b5.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe_ae88b5.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe_ae88b5.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(x => x.isRight).map(x => x.right.get)\n        list.max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqhgygcx6.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqhgygcx6.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqhgygcx6.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqhgygcx6.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong > max) max = x.toLong\n                }\n                case Right(x) => {\n                    if (x > max) max = x\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgn8g48c.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong > max) max = s.toLong\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv7iq8k0b.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv7iq8k0b.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv7iq8k0b.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv7iq8k0b.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max : Long = 0\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwq8vqsg.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num > max) max = num\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvljea97g.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l > max) max = l\n                }\n                case Right(l) => {\n                    if (l > max) max = l\n                }\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ydt5ox2.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptau7x1g5.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1665510621,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygvxwbt9.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        var max = 0L\n        for (i <- listval) {\n            i match {\n                case Left(s) =>\n                case Right(l) => if (l > max) max = l\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebxand9f.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebxand9f.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebxand9f.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebxand9f.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(max",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum value in a given heterogeneous list.\n    def maxVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).max\n    }\n    def main(args: Array[String]) = {\n    assert(maxVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (5l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (25l));\n    assert(maxVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (50l));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6xcln1w.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
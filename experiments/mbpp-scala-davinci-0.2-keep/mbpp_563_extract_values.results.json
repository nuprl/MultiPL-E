{
  "name": "mbpp_563_extract_values",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_563_extract_values.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var start = 0\n        var end = 0\n        var inQuotes = false\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (inQuotes) {\n                    end = i\n                    result = text.substring(start + 1, end) :: result\n                    inQuotes = false\n                } else {\n                    start = i\n                    inQuotes = true\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdju3n7bu.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdju3n7bu.scala:26:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdju3n7bu.scala:27:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\\\"(.*?)\\\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        for (m <- matches) {\n            result += m.substring(1, m.length - 1)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpswugzw31.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpswugzw31.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpswugzw31.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpp14rhzew.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpp14rhzew.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpp14rhzew.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var start = -1\n        var end = -1\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (start == -1) start = i\n                else {\n                    end = i\n                    result = result :+ text.substring(start + 1, end)\n                    start = -1\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpatz5qmuz.scala:22:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpatz5qmuz.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpatz5qmuz.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvchh9aem.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvchh9aem.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvchh9aem.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text).toList\n        matches\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4el6zpql.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4el6zpql.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4el6zpql.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        (pattern findAllIn text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpe1g4vmvm.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpe1g4vmvm.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpe1g4vmvm.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var start = -1\n        var end = -1\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (start == -1) start = i\n                else {\n                    end = i\n                    result = result :+ text.substring(start + 1, end)\n                    start = -1\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpatz5qmuz.scala:22:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpatz5qmuz.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpatz5qmuz.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\\\"(.*?)\\\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val list = new ListBuffer[String]\n        for (m <- matches) {\n            list += m.substring(1, m.length - 1)\n        }\n        list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg60l46xx.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg60l46xx.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg60l46xx.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.replace(\"\\\"\", \"\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6hnudneo.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6hnudneo.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6hnudneo.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text).matchData.toList\n        matches.map(m => m.group(1))\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpskizqujh.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpskizqujh.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpskizqujh.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"\"(.*?)\"\"\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqsxv436r.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqsxv436r.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqsxv436r.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList.map(x => x.substring(1, x.length - 1))\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6uczqpzt.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6uczqpzt.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6uczqpzt.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmply6de3r3.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmply6de3r3.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmply6de3r3.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]()\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt7aly7_f.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt7aly7_f.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt7aly7_f.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val list = new ListBuffer[String]\n        for (m <- matches) {\n            list += m.substring(1, m.length - 1)\n        }\n        list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg60l46xx.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg60l46xx.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpg60l46xx.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.substring(1, x.length - 1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var i = 0\n        while (i < text.length) {\n            if (text(i) == '\"') {\n                var j = i + 1\n                while (j < text.length && text(j) != '\"') j += 1\n                result = result :+ text.substring(i + 1, j)\n                i = j\n            }\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq_gowcab.scala:20:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq_gowcab.scala:21:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq_gowcab.scala:22:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        (for (pattern(value) <- pattern.findAllIn(text)) yield value).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9lgf7k_.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9lgf7k_.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9lgf7k_.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        while (matches.hasNext) {\n            result += matches.next\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw254jr1f.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw254jr1f.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw254jr1f.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.replace(\"\\\"\", \"\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_iannx3e.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_iannx3e.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_iannx3e.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var values = ListBuffer[String]()\n        var i = 0\n        while (i < text.length) {\n            if (text(i) == '\"') {\n                var j = i + 1\n                while (j < text.length && text(j) != '\"') j += 1\n                values += text.substring(i + 1, j)\n                i = j + 1\n            } else i += 1\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wjksfld.scala:19:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wjksfld.scala:20:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wjksfld.scala:21:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\\\"(.*?)\\\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val result = pattern.findAllIn(text).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2p2zf8oq.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2p2zf8oq.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2p2zf8oq.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var values = List[String]()\n        var start = text.indexOf(\"\\\"\")\n        var end = text.indexOf(\"\\\"\", start + 1)\n        while (start != -1 && end != -1) {\n            values = values :+ text.substring(start + 1, end)\n            start = text.indexOf(\"\\\"\", end + 1)\n            end = text.indexOf(\"\\\"\", start + 1)\n        }\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjnfgcqb0.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjnfgcqb0.scala:18:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjnfgcqb0.scala:19:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var values = List[String]()\n        var start = 0\n        var end = 0\n        var i = 0\n        while (i < text.length) {\n            if (text(i) == '\"') {\n                if (start == 0) {\n                    start = i + 1\n                } else {\n                    end = i\n                    values = values :+ text.substring(start, end)\n                    start = 0\n                }\n            }\n            i += 1\n        }\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzs7qn03h.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzs7qn03h.scala:26:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzs7qn03h.scala:27:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\\\"(.*?)\\\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) values += matches.next\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4jzz9i0q.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4jzz9i0q.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4jzz9i0q.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        while (matches.hasNext) {\n            result += matches.next\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6lcro66k.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6lcro66k.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6lcro66k.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        for (m <- matches) {\n            result += m.substring(1, m.length - 1)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxo3mab8.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxo3mab8.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxo3mab8.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val values = new ListBuffer[String]\n        var inQuotes = false\n        var currentValue = new StringBuilder\n        for (c <- text) {\n            if (c == '\"') {\n                if (inQuotes) {\n                    values += currentValue.toString\n                    currentValue = new StringBuilder\n                }\n                inQuotes = !inQuotes\n            } else if (inQuotes) {\n                currentValue += c\n            }\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsuitm7bp.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsuitm7bp.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsuitm7bp.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var start = -1\n        var end = -1\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (start == -1) start = i\n                else {\n                    end = i\n                    result = result :+ text.substring(start + 1, end)\n                    start = -1\n                    end = -1\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpimxltnom.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpimxltnom.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpimxltnom.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val values = pattern.findAllIn(text).toList\n        values.map(x => x.replace(\"\\\"\", \"\"))\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjlf1w4oj.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjlf1w4oj.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjlf1w4oj.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val values = new ListBuffer[String]\n        var start = text.indexOf(\"\\\"\")\n        while (start != -1) {\n            val end = text.indexOf(\"\\\"\", start + 1)\n            if (end != -1) {\n                values += text.substring(start + 1, end)\n                start = text.indexOf(\"\\\"\", end + 1)\n            }\n            else start = -1\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf4jclpck.scala:19:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf4jclpck.scala:20:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf4jclpck.scala:21:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\\\"(.*?)\\\"\".r\n        val matches = regex.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpct3adpoa.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpct3adpoa.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpct3adpoa.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var start = 0\n        var end = 0\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (start == 0) start = i + 1\n                else {\n                    end = i\n                    result = text.substring(start, end) :: result\n                    start = 0\n                    end = 0\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphkvci35t.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphkvci35t.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphkvci35t.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val list = matches.toList\n        list.map(x => x.substring(1, x.length - 1))\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwtwtogbu.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwtwtogbu.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwtwtogbu.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(_.replace(\"\\\"\", \"\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp87hwrq0x.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp87hwrq0x.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp87hwrq0x.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = regex.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr56ckt93.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr56ckt93.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr56ckt93.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyja6jdc.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val values = pattern.findAllIn(text).toList\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpob0buxv2.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpob0buxv2.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpob0buxv2.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val values = pattern.findAllIn(text).toList\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcd1dgmg1.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcd1dgmg1.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcd1dgmg1.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\").*?(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb_bwfxox.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb_bwfxox.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb_bwfxox.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\").*?(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp10kjifsh.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp10kjifsh.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp10kjifsh.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"\"(.*?)\"\"\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqsxv436r.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqsxv436r.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqsxv436r.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        for (m <- matches) result += m.substring(1, m.length - 1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnfp8rxwi.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnfp8rxwi.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnfp8rxwi.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"(?<=\").*?(?=\")\"\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqlnf4zyz.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqlnf4zyz.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqlnf4zyz.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        for (m <- matches) {\n            result += m.substring(1, m.length - 1)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxo3mab8.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxo3mab8.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxo3mab8.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"([^\"]*)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = matches.map(m => m.replace(\"\\\"\", \"\")).toList\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppmo2g_oh.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppmo2g_oh.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppmo2g_oh.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var start = -1\n        var end = -1\n        var values = List[String]()\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (start == -1) start = i\n                else {\n                    end = i\n                    values = values :+ text.substring(start + 1, end)\n                    start = -1\n                    end = -1\n                }\n            }\n        }\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdgceglxh.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdgceglxh.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdgceglxh.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        while (matches.hasNext) {\n            result += matches.group(1)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsudp06f6.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsudp06f6.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsudp06f6.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val values = pattern.findAllIn(text).toList\n        values.map(x => x.substring(1, x.length - 1))\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2h2gzcov.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2h2gzcov.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2h2gzcov.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) values += matches.next\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpe3taaxsj.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpe3taaxsj.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpe3taaxsj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuifkgcnb.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuifkgcnb.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuifkgcnb.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        while (matches.hasNext) {\n            values += matches.group(1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphnr86tdj.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        for (m <- matches) {\n            result += m.substring(1, m.length - 1)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxo3mab8.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxo3mab8.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyxo3mab8.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpla3skqte.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(_.substring(1, _.length - 1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsrhmtehd.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsrhmtehd.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsrhmtehd.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpsrhmtehd.scala:8:35 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        matches.map(_.substring(\u001b[31m1\u001b[0m, _.length - \u001b[31m1\u001b[0m)).toList\n\u001b[31m\u001b[31m  |\u001b[0m                                   ^\u001b[0m\n\u001b[31m  |\u001b[0m     Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m     I could not infer the type of the parameter _$2 of expanded function:\n\u001b[31m  |\u001b[0m     _$2 => _$2.length - 1.\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps0xtfx1j.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val result = pattern.findAllIn(text).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2p2zf8oq.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2p2zf8oq.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2p2zf8oq.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        while (matches.hasNext) {\n            result += matches.next\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6lcro66k.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6lcro66k.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6lcro66k.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = matches.toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5ws2syl0.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5ws2syl0.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5ws2syl0.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\\\"(.*?)\\\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.substring(1, x.length - 1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(_.replace(\"\\\"\", \"\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsabl96o8.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsabl96o8.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsabl96o8.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpslxjzeyc.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val values = new ListBuffer[String]()\n        var start = 0\n        var end = 0\n        var inQuotes = false\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (inQuotes) {\n                    end = i\n                    values += text.substring(start + 1, end)\n                    inQuotes = false\n                } else {\n                    start = i\n                    inQuotes = true\n                }\n            }\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbc41_ahq.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbc41_ahq.scala:26:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbc41_ahq.scala:27:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvchh9aem.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvchh9aem.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvchh9aem.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var result = List[String]()\n        var start = -1\n        var end = -1\n        for (i <- 0 until text.length) {\n            if (text(i) == '\"') {\n                if (start == -1) start = i\n                else {\n                    end = i\n                    result = result :+ text.substring(start + 1, end)\n                    start = -1\n                    end = -1\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpimxltnom.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpimxltnom.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpimxltnom.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\"\"(?<=\")[^\"]+(?=\")\"\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu2l7th0m.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu2l7th0m.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu2l7th0m.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.substring(1, x.length - 1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpai0n7c_7.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\"\"(?<=\")(.*?)(?=\")\"\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qrvyfiv.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        while (matches.hasNext) {\n            result += matches.next\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj5v83sh8.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj5v83sh8.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj5v83sh8.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwva72smx.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.map(x => x.replace(\"\\\"\", \"\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6hnudneo.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6hnudneo.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6hnudneo.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]()\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmv6zmyw5.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmv6zmyw5.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmv6zmyw5.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]()\n        for (m <- matches) {\n            result += m.substring(1, m.length - 1)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpy20c0iep.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpy20c0iep.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpy20c0iep.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwuzn9b9v.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = matches.toList\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6k35y1pp.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6k35y1pp.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6k35y1pp.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val regex = \"\\\"(.*?)\\\"\".r\n        regex.findAllIn(text).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:10:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6gmafyg6.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]()\n        for (m <- matches) {\n            values += m.substring(1, m.length - 1)\n        }\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123041,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmv6zmyw5.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmv6zmyw5.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmv6zmyw5.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val values = new ListBuffer[String]\n        for (m <- matches) values += m.substring(1, m.length - 1)\n        values.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:14:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8tcdjfxz.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76a1vmqa.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val values = pattern.findAllIn(text).toList\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpob0buxv2.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpob0buxv2.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpob0buxv2.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1665517389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:11:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:12:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1faqrt_h.scala:13:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text)\n        val result = new ListBuffer[String]\n        while (matches.hasNext) {\n            result += matches.group(1)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsudp06f6.scala:15:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsudp06f6.scala:16:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsudp06f6.scala:17:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks from a string.\n    def extractValues(text : String) : List[String] = {\n        var values = List[String]()\n        var inQuote = false\n        var currentValue = \"\"\n        for (c <- text) {\n            if (c == '\"') {\n                if (inQuote) {\n                    values = values :+ currentValue\n                    currentValue = \"\"\n                }\n                inQuote = !inQuote\n            } else if (inQuote) {\n                currentValue += c\n            }\n        }\n        values\n    }\n    def main(args: Array[String]) = {\n    assert(extractValues((\"\"Python\", \"PHP\", \"Java\"\")).equals((List[String](\"Python\", \"PHP\", \"Java\"))));\n    assert(extractValues((\"\"python\",\"program\",\"language\"\")).equals((List[String](\"python\", \"program\", \"language\"))));\n    assert(extractValues((\"\"red\",\"blue\",\"green\",\"yellow\"\")).equals((List[String](\"red\", \"blue\", \"green\", \"yellow\"))));\n    }\n\n}\n",
      "timestamp": 1666123056,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmple33nw5p.scala:23:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractValues((\u001b[31m\"\"Python\", \"PHP\", \"Java\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"Python\"\u001b[0m, \u001b[31m\"PHP\"\u001b[0m, \u001b[31m\"Java\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmple33nw5p.scala:24:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractValues((\u001b[31m\"\"python\",\"program\",\"language\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"python\"\u001b[0m, \u001b[31m\"program\"\u001b[0m, \u001b[31m\"language\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmple33nw5p.scala:25:28 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractValues((\u001b[31m\"\"red\",\"blue\",\"green\",\"yellow\"\"\u001b[0m)).equals((List[\u001b[35mString\u001b[0m](\u001b[31m\"red\"\u001b[0m, \u001b[31m\"blue\"\u001b[0m, \u001b[31m\"green\"\u001b[0m, \u001b[31m\"yellow\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            ')' expected, but string interpolator found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
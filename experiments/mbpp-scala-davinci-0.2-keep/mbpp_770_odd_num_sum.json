{
  "name": "mbpp_770_odd_num_sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the sum of fourth power of first n odd natural numbers.\n    def oddNumSum(n : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_770_odd_num_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(oddNumSum((2l)) == (82l));\n    assert(oddNumSum((3l)) == (707l));\n    assert(oddNumSum((4l)) == (3108l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i - 1, 4).toLong\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1L to n) {\n            if (i % 2 == 1) {\n                sum += pow(i, 4).toLong\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(2 * i - 1, 4).toLong\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i - 1, 4).toLong\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            if (i % 2 != 0) {\n                sum += pow(i, 4).toLong\n            }\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            if (i % 2 != 0) {\n                sum += pow(i, 4).toLong\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt by 2) {\n            sum += pow(i, 4).toLong\n        }\n        return sum"
  ]
}
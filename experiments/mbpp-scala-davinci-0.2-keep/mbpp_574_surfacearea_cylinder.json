{
  "name": "mbpp_574_surfacearea_cylinder",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the surface area of a cylinder.\n    def surfaceareaCylinder(r : Long, h : Long) : Float = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_574_surfacearea_cylinder.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(surfaceareaCylinder((10l), (5l)) == (942.45f));\n    assert(surfaceareaCylinder((4l), (5l)) == (226.18800000000002f));\n    assert(surfaceareaCylinder((4l), (10l)) == (351.848f));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return (2 * Pi * r * h) + (2 * Pi * r * r)",
    "        2 * Pi.toFloat * r * (r + h)",
    "        val pi = 3.14f\n        2 * pi * r * (r + h)",
    "        val pi = 3.14f\n        val area = 2 * pi * r * (r + h)\n        return area",
    "        val pi = 3.14f\n        val area = 2 * pi * r * (r + h)\n        return area",
    "        val pi = 3.14f\n        2 * pi * r * (r + h)",
    "        2 * Pi.toFloat * r * (r + h)",
    "        2 * Pi * r * (r + h)",
    "        return (2 * Pi * r * h + 2 * Pi * r * r).toFloat",
    "        2 * Pi.toFloat * r * (r + h)",
    "        val pi = 3.14f\n        val area = 2 * pi * r * (r + h)\n        area",
    "        val pi = 3.14f\n        2 * pi * r * (r + h)",
    "        2 * Pi * r * (r + h)",
    "        val pi = 3.14f\n        val area = 2 * pi * r * (r + h)\n        return area",
    "        val pi = 3.14f\n        val area = 2 * pi * r * (r + h)\n        area",
    "        val pi = 3.14\n        val area = 2 * pi * r * (r + h)\n        return area.toFloat",
    "        return (2 * Pi * r * h).toFloat + (2 * Pi * r * r).toFloat",
    "        2 * Pi * r * (r + h)",
    "        val pi = 3.14f\n        val area = 2 * pi * r * (r + h)\n        return area",
    "        val pi : Float = 3.14f\n        val area : Float = (2 * pi * r * h) + (2 * pi * r * r)\n        return area"
  ]
}
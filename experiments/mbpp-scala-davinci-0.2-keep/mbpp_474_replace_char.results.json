{
  "name": "mbpp_474_replace_char",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_474_replace_char.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 : String = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510051,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        val str2 = str1.replace(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i).toString\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510051,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replaceAll(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        val str2 = str1.replace(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replace(ch, newch)\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (c <- str1) {\n            if (c.toString == ch) {\n                str2 += newch\n            } else {\n                str2 += c\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 = str2.substring(0, i) + newch + str2.substring(i + 1, str2.length)\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str = str1\n        while(str.contains(ch)) {\n            str = str.replace(ch, newch)\n        }\n        str\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 to str1.length - 1) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 to str1.length - 1) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i).toString\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replaceAll(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replace(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replaceAll(ch, newch)\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replaceAll(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 to str1.length - 1) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replace(ch, newch)\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (c <- str1) {\n            if (c.toString == ch) str2 += newch\n            else str2 += c\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replaceAll(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replaceAll(ch, newch)\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replaceAll(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replaceAll(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replace(ch, newch)\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str = str1\n        for (i <- 0 until str.length) {\n            if (str(i) == ch(0)) {\n                str = str.substring(0, i) + newch + str.substring(i + 1)\n            }\n        }\n        str\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str = str1\n        var i = 0\n        while (i < str.length) {\n            if (str(i) == ch(0)) {\n                str = str.substring(0, i) + newch + str.substring(i + 1)\n            }\n            i += 1\n        }\n        return str\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replaceAll(ch, newch)\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replace(ch, newch)\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replace(ch, newch)\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1.charAt(i) == ch.charAt(0)) str2 += newch\n            else str2 += str1.charAt(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 to str1.length - 1) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i).toString\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str = str1\n        for (i <- 0 until str.length) {\n            if (str(i) == ch(0)) {\n                str = str.substring(0, i) + newch + str.substring(i + 1)\n            }\n        }\n        str\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        if (str1.length == 0) return \"\"\n        if (str1.head == ch(0)) return newch + replaceChar(str1.tail, ch, newch)\n        return str1.head + replaceChar(str1.tail, ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i).toString\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510051,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i).toString\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1.charAt(i).toString == ch) str2 += newch\n            else str2 += str1.charAt(i).toString\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 to str1.length - 1) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str = str1\n        for (i <- 0 until str.length) {\n            if (str(i) == ch(0)) {\n                str = str.substring(0, i) + newch + str.substring(i + 1)\n            }\n        }\n        str\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replaceAll(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replaceAll(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        if (str1.length == 0)\n            return str1\n        if (str1.charAt(0) == ch.charAt(0))\n            return newch + replaceChar(str1.substring(1), ch, newch)\n        return str1.charAt(0) + replaceChar(str1.substring(1), ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replaceAll(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i).toString\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        if (str1.length == 0) return \"\"\n        if (str1.charAt(0) == ch.charAt(0)) return newch + replaceChar(str1.substring(1), ch, newch)\n        return str1.charAt(0) + replaceChar(str1.substring(1), ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i).toString\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i).toString\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str = str1\n        for (i <- 0 until str.length) {\n            if (str(i) == ch(0)) str = str.updated(i, newch(0))\n        }\n        str\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122417,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i).toString\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510051,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 to str1.length - 1) {\n            if (str1(i).toString == ch)\n                str2 += newch\n            else\n                str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 = str2.substring(0, i) + newch + str2.substring(i + 1)\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 = str2.substring(0, i) + newch + str2.substring(i + 1)\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        if (str1.length == 0) return \"\"\n        if (str1.length == 1) {\n            if (str1 == ch) return newch\n            else return str1\n        }\n        if (str1.substring(0, 1) == ch) return newch + replaceChar(str1.substring(1), ch, newch)\n        else return str1.substring(0, 1) + replaceChar(str1.substring(1), ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        val str2 = str1.replace(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i).toString\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replaceAll(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replace(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replace(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 to str1.length - 1) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replace(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i).toString\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510051,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replace(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replace(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1.charAt(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1.charAt(i).toString\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str = str1\n        var index = str.indexOf(ch)\n        while (index != -1) {\n            str = str.substring(0, index) + newch + str.substring(index + 1)\n            index = str.indexOf(ch)\n        }\n        str\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str = str1\n        var i = 0\n        while (i < str.length) {\n            if (str(i) == ch(0)) {\n                str = str.substring(0, i) + newch + str.substring(i + 1)\n            }\n            i += 1\n        }\n        str\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 to str1.length - 1) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 to str1.length - 1) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1\n        for (i <- 0 to str1.length - 1) {\n            if (str1.charAt(i) == ch.charAt(0)) {\n                str2 = str2.substring(0, i) + newch + str2.substring(i + 1)\n            }\n        }\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replace(ch, newch)\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replace(ch, newch)\n        return str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        str1.replace(ch, newch)\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510047,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        val str2 = str1.replaceAll(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n        var str2 = str1.replaceAll(ch, newch)\n        str2\n    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_438_count_bidirectional",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_438_count_bidirectional.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var count = 0L\n        for (i <- test_map.keys) {\n            if (test_map.contains(-i)) count += test_map(i) * test_map(-i)\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509887,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8n8h_yav.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8n8h_yav.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8n8h_yav.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            val reverse = BigInt(i).toString.reverse.toLong\n            if (test_set.contains(reverse)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509887,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfaftyd2m.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfaftyd2m.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfaftyd2m.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (x <- test_set) {\n            if (test_set.contains(x.toLong * x.toLong)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509887,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvihsnfe.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvihsnfe.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvihsnfe.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val sorted_list = test_list.sorted\n        var count = 0L\n        for (i <- 0 until sorted_list.length) {\n            val a = sorted_list(i)\n            val b = sorted_list(sorted_list.length - 1 - i)\n            if (a == b) count += 1\n            else if (a < b) return count\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgy5kft07.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgy5kft07.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgy5kft07.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        test_list.map(x => test_set.count(_ > x)).sum\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v30zxxm.scala:10:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v30zxxm.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v30zxxm.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val sorted_list = test_list.sortWith(_ < _)\n        val count = new HashMap[Long, Long]\n        for (i <- sorted_list) {\n            if (count.contains(i)) count(i) += 1\n            else count(i) = 1\n        }\n        var result = 0L\n        for (i <- count.keys) {\n            if (count(i) > 1) result += count(i) * (count(i) - 1)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfs_jk1_o.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfs_jk1_o.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfs_jk1_o.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            if (map.contains(-i)) count += map(i) * map(-i)\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6yk9oy0q.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6yk9oy0q.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6yk9oy0q.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            }\n            else {\n                test_map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea63h2hl.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea63h2hl.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea63h2hl.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            } else {\n                test_map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2vcypo4h.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2vcypo4h.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2vcypo4h.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i * 2)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpog159s7v.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpog159s7v.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpog159s7v.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map += (i -> 1)\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509887,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph5i7yah2.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph5i7yah2.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph5i7yah2.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong * 2)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509887,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpft_wma_g.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpft_wma_g.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpft_wma_g.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n                test_set.remove(i)\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpohwo8sv0.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                test_set.remove(i)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue remove is not a member of Set[Long] - did you mean test_set.reduce?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpohwo8sv0.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpohwo8sv0.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpohwo8sv0.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong * 2)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509887,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmgtimg5t.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmgtimg5t.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmgtimg5t.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var count = 0L\n        for (i <- test_map.keys) {\n            if (test_map.contains(-i)) count += test_map(i) * test_map(-i)\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxbhwahdj.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxbhwahdj.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxbhwahdj.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val sorted_list = test_list.sorted\n        var count = 0L\n        for (i <- 0 until sorted_list.length - 1) {\n            val a = sorted_list(i)\n            val b = sorted_list(i + 1)\n            if (a * b > 0) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphjuh1zxq.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphjuh1zxq.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphjuh1zxq.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i * 2)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpog159s7v.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpog159s7v.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpog159s7v.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) == test_list(j)) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmxzy17y.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmxzy17y.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmxzy17y.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i + 1) && test_set.contains(i - 1)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124146,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm3qd4i91.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm3qd4i91.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm3qd4i91.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * 2)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwja7gz9.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwja7gz9.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwja7gz9.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokwlp_rv.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokwlp_rv.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokwlp_rv.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwfd8fbla.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwfd8fbla.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwfd8fbla.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) {\n                count += map(x)\n            }\n            for (j <- i + 1 until test_list.length) {\n                val y = test_list(j)\n                if (map.contains(y)) {\n                    map(y) += 1\n                }\n                else {\n                    map(y) = 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4acbfdpb.scala:26:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4acbfdpb.scala:26:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4acbfdpb.scala:26:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (x <- test_list) {\n            if (map.contains(x)) {\n                map(x) += 1\n            } else {\n                map(x) = 1\n            }\n        }\n        var count = 0L\n        for (x <- map.keys) {\n            count += map(x) * (map(x) - 1) / 2\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy9z8rohd.scala:21:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy9z8rohd.scala:21:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy9z8rohd.scala:21:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i - 1)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp030jyqpy.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp030jyqpy.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp030jyqpy.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- 0 until test_list.length) {\n            val current = test_list(i)\n            if (test_map.contains(current)) {\n                test_map(current) += 1\n            } else {\n                test_map(current) = 1\n            }\n        }\n        var result = 0L\n        for (i <- 0 until test_list.length) {\n            val current = test_list(i)\n            if (test_map.contains(current)) {\n                result += test_map(current)\n                test_map(current) = 0\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpon4rwtnf.scala:26:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpon4rwtnf.scala:26:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpon4rwtnf.scala:26:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) {\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpppumm1wb.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpppumm1wb.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpppumm1wb.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) % (test_list(i) + test_list(j)) == 0) {\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdb_z96hl.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdb_z96hl.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdb_z96hl.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            count += map(i) * (map(i) - 1) / 2\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124145,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6al8qhv_.scala:21:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6al8qhv_.scala:21:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6al8qhv_.scala:21:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- 0 until test_list.length) {\n                if (test_list(i) == test_list(j) && i != j) {\n                    count += 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkexk_iah.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkexk_iah.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkexk_iah.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var result = 0L\n        for (i <- test_map.keys) {\n            if (test_map.contains(-i)) result += test_map(i) * test_map(-i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoofwqavd.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoofwqavd.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoofwqavd.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) {\n                count += map(x)\n                map(x) += 1\n            } else {\n                map(x) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8tvynhw5.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8tvynhw5.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8tvynhw5.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) % 1000000007 == 1) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxiyoazkm.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxiyoazkm.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxiyoazkm.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i.toString.reverse.toLong)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124146,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy5d3xwlx.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy5d3xwlx.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy5d3xwlx.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0\n        for (i <- 0 until test_list_sorted.length - 1) {\n            val x = test_list_sorted(i)\n            val y = test_list_sorted(i + 1)\n            if (x == y) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5w3nkkxp.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5w3nkkxp.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5w3nkkxp.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length; j <- i + 1 until test_list.length) {\n            if (test_list(i) + test_list(j) == 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gnuslxy.scala:13:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gnuslxy.scala:13:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gnuslxy.scala:13:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i + 1)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp288dxxlq.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp288dxxlq.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp288dxxlq.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Int]\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            count += map(i) * (map(i) - 1) / 2\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe4jyfsoz.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe4jyfsoz.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe4jyfsoz.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            for (j <- test_set) {\n                if (i != j) {\n                    if (test_set.contains(i + j)) {\n                        count += 1\n                    }\n                }\n            }\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3ai3am7.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3ai3am7.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3ai3am7.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            if (map.contains(test_list(i))) {\n                count += map(test_list(i))\n                map(test_list(i)) += 1\n            } else {\n                map(test_list(i)) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3s1y7d2w.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3s1y7d2w.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3s1y7d2w.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (x <- test_set) {\n            if (test_set.contains(x.toString.reverse.toLong)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9w5pl781.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9w5pl781.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9w5pl781.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map += (i -> 1)\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            val v = map(i)\n            count += v * (v - 1) / 2\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6ndequ_c.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6ndequ_c.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6ndequ_c.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzzfdnqu.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzzfdnqu.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzzfdnqu.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            } else {\n                test_map += (i -> 1)\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqsm6yadv.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqsm6yadv.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqsm6yadv.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val sorted_list = test_list.sorted\n        var count = 0\n        for (i <- 0 until sorted_list.length - 1) {\n            val x = sorted_list(i)\n            val y = sorted_list(i + 1)\n            if (x * y > 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124165,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp91u1n7_y.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp91u1n7_y.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp91u1n7_y.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = Map[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            } else {\n                test_map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaoiva4ev.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaoiva4ev.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaoiva4ev.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124089,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqqof06z.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqqof06z.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqqof06z.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * 2)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwja7gz9.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwja7gz9.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwja7gz9.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count : Long = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmof0milj.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmof0milj.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmof0milj.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var result = 0L\n        for (i <- test_map.keys) {\n            if (test_map.contains(-i)) result += test_map(i) * test_map(-i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpke00f8ee.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpke00f8ee.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpke00f8ee.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplsgavvs6.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplsgavvs6.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplsgavvs6.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val sorted_list = test_list.sorted\n        var count = 0\n        for (i <- 0 until sorted_list.length - 1) {\n            val x = sorted_list(i)\n            val y = sorted_list(i + 1)\n            if (x == y) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpllec5gde.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpllec5gde.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpllec5gde.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (x <- test_set) {\n            if (test_set.contains(x.toLong * x.toLong)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509887,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvihsnfe.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvihsnfe.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvihsnfe.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (x <- test_set) {\n            val y = x * x\n            if (test_set.contains(y)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpatim5jmd.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpatim5jmd.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpatim5jmd.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            if (map(i) > 1) count += map(i) * (map(i) - 1) / 2\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppjctec56.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppjctec56.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppjctec56.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        val test_map = test_list.groupBy(x => x).mapValues(_.length)\n        var count = 0L\n        for (x <- test_set) {\n            val y = x * x\n            if (test_set.contains(y)) {\n                val x_count = test_map(x)\n                val y_count = test_map(y)\n                count += x_count * y_count\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnt5hbiy3.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnt5hbiy3.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnt5hbiy3.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Int]()\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) map(x) += 1\n            else map(x) = 1\n        }\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            val y = x * x\n            if (map.contains(y)) {\n                val n = map(y)\n                count += n\n                map(y) = 0\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprykpx2pc.scala:25:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprykpx2pc.scala:25:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprykpx2pc.scala:25:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdc68jkb1.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdc68jkb1.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdc68jkb1.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (x <- test_list) {\n            if (map.contains(x)) {\n                count += map(x)\n                map(x) += 1\n            }\n            else map(x) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpko0g_ay9.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpko0g_ay9.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpko0g_ay9.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) % 1000000007 == 1) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxiyoazkm.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxiyoazkm.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxiyoazkm.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            }\n            else map(i) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oiv9yal.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oiv9yal.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oiv9yal.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            for (j <- test_set) {\n                if (i * j <= 1000000000) {\n                    if (test_set.contains(i * j)) {\n                        count += 1\n                    }\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk3ej3avb.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk3ej3avb.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk3ej3avb.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Int]\n        var count = 0\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            }\n            else test_map += (i -> 1)\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfey2fzbp.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfey2fzbp.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfey2fzbp.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd6avkiwc.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd6avkiwc.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd6avkiwc.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        val map = new HashMap[Long, Long]\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) {\n                count += map(x)\n                map(x) += 1\n            } else {\n                map(x) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ig57jhg.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ig57jhg.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ig57jhg.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            val x = map(i)\n            if (x > 1) count += x * (x - 1) / 2\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb8zu8rju.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb8zu8rju.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb8zu8rju.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var count = 0L\n        for (i <- test_map.keys) {\n            if (test_map(i) > 1) {\n                count += test_map(i) * (test_map(i) - 1) / 2\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124165,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmahgk47g.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmahgk47g.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmahgk47g.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val list = test_list.sorted\n        var count = 0\n        for (i <- 0 until list.length - 1) {\n            val x = list(i)\n            val y = list(i + 1)\n            if (x == y) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkv119r9l.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkv119r9l.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkv119r9l.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) map(x) += 1\n            else map(x) = 1\n        }\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) {\n                val n = map(x)\n                count += n * (n - 1) / 2\n                map.remove(x)\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmllicj2n.scala:24:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmllicj2n.scala:24:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmllicj2n.scala:24:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- 0 until test_list.length) {\n                if (test_list(i) == test_list(j) && i != j) {\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp908oz_2h.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp908oz_2h.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp908oz_2h.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]()\n        for (i <- 0 until test_list.length) {\n            if (test_map.contains(test_list(i))) {\n                test_map(test_list(i)) += 1\n            } else {\n                test_map(test_list(i)) = 1\n            }\n        }\n        var result = 0L\n        for (i <- 0 until test_list.length) {\n            if (test_map.contains(test_list(i))) {\n                result += test_map(test_list(i))\n                test_map(test_list(i)) = 0\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5oj957sp.scala:24:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5oj957sp.scala:24:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5oj957sp.scala:24:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val list = test_list.sorted\n        var count = 0\n        for (i <- 0 until list.length - 1) {\n            val a = list(i)\n            val b = list(i + 1)\n            if (a * b > 0) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphrnyhnp7.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphrnyhnp7.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphrnyhnp7.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (x <- test_set) {\n            if (test_set.contains(x * x)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124165,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmputiplv42.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmputiplv42.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmputiplv42.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) {\n                count += map(x)\n                map(x) += 1\n            } else {\n                map(x) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124147,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8tvynhw5.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8tvynhw5.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8tvynhw5.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) + test_list(j) == 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124128,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplg2cgvf5.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplg2cgvf5.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplg2cgvf5.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i.toLong * i.toLong)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0n2yuuby.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0n2yuuby.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0n2yuuby.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpndah50fu.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpndah50fu.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpndah50fu.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0\n        for (i <- 0 until test_list_sorted.length) {\n            for (j <- i + 1 until test_list_sorted.length) {\n                if (test_list_sorted(i) * test_list_sorted(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxsatpyxv.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxsatpyxv.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxsatpyxv.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0\n        for (i <- 0 until test_list_sorted.length) {\n            for (j <- i + 1 until test_list_sorted.length) {\n                if (test_list_sorted(i) * test_list_sorted(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1nlcug6d.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1nlcug6d.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1nlcug6d.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        var set = Set[Long]()\n        for (i <- 0 until test_list.length) {\n            if (set.contains(test_list(i))) count += 1\n            set += test_list(i)\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7qcivc4u.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7qcivc4u.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7qcivc4u.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0\n        for (i <- 0 until test_list_sorted.length) {\n            val a = test_list_sorted(i)\n            for (j <- i + 1 until test_list_sorted.length) {\n                val b = test_list_sorted(j)\n                if (a * b <= 1000000) {\n                    count += 1\n                } else {\n                    return count\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3_qd4xgd.scala:22:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3_qd4xgd.scala:22:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3_qd4xgd.scala:22:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var result = 0L\n        for (i <- test_map.keys) {\n            if (test_map.contains(-i)) result += test_map(i) * test_map(-i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpke00f8ee.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpke00f8ee.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpke00f8ee.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            } else {\n                test_map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2vcypo4h.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2vcypo4h.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2vcypo4h.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i.toLong * i.toLong)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4037ol57.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4037ol57.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4037ol57.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        val test_map = test_list.groupBy(x => x)\n        var count = 0L\n        for ((k, v) <- test_map) {\n            if (test_set.contains(k + 1)) count += v.length\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1joonxyv.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1joonxyv.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1joonxyv.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var result : Long = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) result += 1\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4l_oj0ve.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4l_oj0ve.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4l_oj0ve.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzzfdnqu.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzzfdnqu.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzzfdnqu.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong * -1)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqchmc6e2.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqchmc6e2.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqchmc6e2.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) == test_list(j) * test_list(j)) count += 1\n                if (test_list(j) == test_list(i) * test_list(i)) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3y3_dij.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3y3_dij.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3y3_dij.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdc68jkb1.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdc68jkb1.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdc68jkb1.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) {\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_pd6_s0.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_pd6_s0.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_pd6_s0.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzzfdnqu.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzzfdnqu.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzzfdnqu.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i * 2)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpog159s7v.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpog159s7v.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpog159s7v.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        val test_map = test_list.groupBy(x => x)\n        var count = 0L\n        for (x <- test_map) {\n            val y = x._1\n            val z = test_map(y).length\n            if (test_set.contains(y + y)) count += z * (z - 1) / 2\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5o7ksgvf.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5o7ksgvf.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5o7ksgvf.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_set = test_list.toSet\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            val a = test_list(i)\n            val b = test_list(i) - 1\n            if (test_list_set.contains(b)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfw0mpuw_.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfw0mpuw_.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfw0mpuw_.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        val map = new HashMap[Long, Long]\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) {\n                count += map(x)\n                map(x) += 1\n            } else {\n                map(x) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpar5n01rb.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                count += map(x)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpar5n01rb.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpar5n01rb.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpar5n01rb.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokwlp_rv.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokwlp_rv.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokwlp_rv.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsgdwc0n5.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsgdwc0n5.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsgdwc0n5.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            val y = test_list(test_list.length - i - 1)\n            if (x != y) {\n                val count = map.getOrElse(x, 0)\n                map.put(x, count + 1)\n                val count2 = map.getOrElse(y, 0)\n                map.put(y, count2 + 1)\n            }\n        }\n        var result = 0L\n        for (x <- map.keySet) {\n            val count = map(x)\n            result += count * (count - 1) / 2\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9mjgd_81.scala:12:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                map.put(x, count + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of AnyVal, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9mjgd_81.scala:14:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                map.put(y, count2 + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of AnyVal, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9mjgd_81.scala:25:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9mjgd_81.scala:25:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0L\n        for (i <- 0 until test_list_sorted.length) {\n            for (j <- i + 1 until test_list_sorted.length) {\n                if (test_list_sorted(i) * test_list_sorted(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6i85jhet.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6i85jhet.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6i85jhet.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val count = new HashMap[Long, Int]\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (count.contains(x)) count(x) += 1\n            else count(x) = 1\n        }\n        var result = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (count.contains(x)) {\n                result += count(x)\n                count(x) = 0\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124186,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj1r7cq3_.scala:23:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj1r7cq3_.scala:23:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj1r7cq3_.scala:23:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            } else {\n                test_map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphtlqpksw.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphtlqpksw.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphtlqpksw.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppl3n0opb.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppl3n0opb.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppl3n0opb.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            }\n            else test_map(i) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj522qrr8.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj522qrr8.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj522qrr8.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        val test_list_sorted = test_list.sorted\n        var count = 0L\n        for (i <- 0 until test_list_sorted.length) {\n            for (j <- i + 1 until test_list_sorted.length) {\n                if (test_set.contains(test_list_sorted(i) + test_list_sorted(j))) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf71pmp2v.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf71pmp2v.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf71pmp2v.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) {\n                count += map(x)\n                map(x) += 1\n            } else map(x) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprgir8f4e.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprgir8f4e.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprgir8f4e.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0\n        for (i <- 0 to test_list_sorted.length - 1) {\n            for (j <- i + 1 to test_list_sorted.length - 1) {\n                if (test_list_sorted(i) * test_list_sorted(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz3g5p695.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz3g5p695.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz3g5p695.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i - 1)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy71gklhn.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy71gklhn.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy71gklhn.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i.toString.reverse.toLong)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124146,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy5d3xwlx.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy5d3xwlx.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy5d3xwlx.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val hash_map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (hash_map.contains(i)) {\n                count += hash_map(i)\n            }\n            if (hash_map.contains(-i)) {\n                hash_map(i) = hash_map(-i) + 1\n            } else {\n                hash_map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuka847rx.scala:21:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuka847rx.scala:21:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuka847rx.scala:21:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) == test_list(j)) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmxzy17y.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmxzy17y.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmxzy17y.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.values) {\n            count += i * (i - 1) / 2\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgci9ok57.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgci9ok57.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgci9ok57.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) + test_list(j) == 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6lkrlpsq.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6lkrlpsq.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6lkrlpsq.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var result = 0L\n        for (i <- map.values) result += i * (i - 1) / 2\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbfg063oz.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbfg063oz.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbfg063oz.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (x <- test_set) {\n            val y = (x * 3) / 2\n            if (test_set.contains(y)) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphl2osysa.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphl2osysa.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphl2osysa.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124186,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuvo0_g8h.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuvo0_g8h.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuvo0_g8h.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val counts = new HashMap[Long, Long]()\n        for (i <- 0 until test_list.length) {\n            val count = counts.getOrElse(test_list(i), 0)\n            counts(test_list(i)) = count + 1\n        }\n        var result = 0L\n        for (i <- 0 until test_list.length) {\n            val count = counts.getOrElse(test_list(i), 0)\n            if (count > 1) {\n                result += count * (count - 1) / 2\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpngfu_a6v.scala:9:41 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            counts(test_list(i)) = count + \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m                                   ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue + is not a member of AnyVal, but could be made available as an extension method.\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m  |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m  |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m  |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpngfu_a6v.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mif\u001b[0m (count > \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue > is not a member of AnyVal, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Ordered.orderingToOrdered\n\u001b[31m   |\u001b[0m  import math.Ordering.Implicits.infixOrderingOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpngfu_a6v.scala:15:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                result += count * (count - \u001b[31m1\u001b[0m) / \u001b[31m2\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpngfu_a6v.scala:15:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                result += count * (count - \u001b[31m1\u001b[0m) / \u001b[31m2\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue * is not a member of AnyVal, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  i",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            val value = map(i)\n            if (value > 1) count += value * (value - 1)\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124202,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp73014nlx.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp73014nlx.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp73014nlx.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var count = 0L\n        for (i <- test_map.keys) {\n            if (test_map.contains(-i)) {\n                count += test_map(i) * test_map(-i)\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn_4z8bdd.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn_4z8bdd.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn_4z8bdd.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        val test_list_sorted = test_list.sorted\n        var count = 0\n        for (i <- 0 until test_list_sorted.length) {\n            val x = test_list_sorted(i)\n            val y = test_list_sorted(i)\n            if (test_set.contains(x + y)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124202,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpimma1oe7.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpimma1oe7.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpimma1oe7.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            val v = map(i)\n            if (v > 1) count += v * (v - 1) / 2\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjx9clzx.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjx9clzx.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjx9clzx.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val sorted_list = test_list.sorted\n        var count = 0\n        for (i <- 0 until sorted_list.length) {\n            val x = sorted_list(i)\n            val y = x * x\n            val index = sorted_list.indexOf(y)\n            if (index != -1) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_pd6y4i.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_pd6y4i.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_pd6y4i.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy386w747.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n                test_set.remove(i)\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpohwo8sv0.scala:11:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                test_set.remove(i)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue remove is not a member of Set[Long] - did you mean test_set.reduce?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpohwo8sv0.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpohwo8sv0.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpohwo8sv0.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        var count = 0L\n        for (i <- map.values) {\n            count += i * (i - 1) / 2\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124202,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5qxvzakx.scala:21:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5qxvzakx.scala:21:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5qxvzakx.scala:21:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        val test_set_size = test_set.size\n        val test_list_size = test_list.size\n        if (test_set_size == test_list_size) {\n            return test_list_size * (test_list_size - 1) / 2\n        }\n        var count = 0\n        for (i <- 0 until test_list_size) {\n            for (j <- i + 1 until test_list_size) {\n                if (test_list(i) == test_list(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124202,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpar67scop.scala:23:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpar67scop.scala:23:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpar67scop.scala:23:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcm859skb.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcm859skb.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcm859skb.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i + 1)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124202,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9mi5jk_u.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9mi5jk_u.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9mi5jk_u.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val list = test_list.sorted\n        var count = 0\n        for (i <- 0 until list.length) {\n            for (j <- i + 1 until list.length) {\n                if (list(i) * list(j) > 0) {\n                    val k = list.indexOf(list(i) * list(j))\n                    if (k != -1 && k > j) {\n                        count += 1\n                    }\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvtst13wh.scala:21:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvtst13wh.scala:21:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvtst13wh.scala:21:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) + test_list(j) == 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6lkrlpsq.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6lkrlpsq.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6lkrlpsq.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) == test_list(j) * 2) count += 1\n                if (test_list(j) == test_list(i) * 2) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpodlrcls1.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpodlrcls1.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpodlrcls1.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptb24hd5u.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) {\n                    count += 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphcnv5f72.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphcnv5f72.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphcnv5f72.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val sorted_list = test_list.sorted\n        var count = 0\n        for (i <- 0 until sorted_list.length) {\n            val x = sorted_list(i)\n            val y = sorted_list(i)\n            val index = sorted_list.indexOf(y)\n            if (index != -1 && index != i) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc_k7e11a.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc_k7e11a.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc_k7e11a.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaa338l0w.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaa338l0w.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaa338l0w.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- 0 until test_list.length) {\n            if (test_map.contains(test_list(i))) test_map(test_list(i)) += 1\n            else test_map(test_list(i)) = 1\n        }\n        var result = 0L\n        for (i <- 0 until test_list.length) {\n            if (test_map(test_list(i)) > 1) {\n                result += test_map(test_list(i)) - 1\n                test_map(test_list(i)) = 1\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpftrd9qfd.scala:21:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpftrd9qfd.scala:21:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpftrd9qfd.scala:21:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val list = test_list.sorted\n        var count = 0L\n        for (i <- 0 until list.length - 1) {\n            val a = list(i)\n            val b = list(i + 1)\n            if (a == b) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9rbyspmw.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9rbyspmw.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9rbyspmw.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) {\n                count += map(x)\n                map(x) += 1\n            }\n            else map(x) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqlf5v6y3.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqlf5v6y3.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqlf5v6y3.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                test_map(i) += 1\n            } else {\n                test_map(i) = 1\n            }\n        }\n        var result = 0L\n        for (i <- test_map.values) {\n            result += i * (i - 1) / 2\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4sjex_ok.scala:21:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4sjex_ok.scala:21:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4sjex_ok.scala:21:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0\n        for (i <- 0 until test_list_sorted.length) {\n            val a = test_list_sorted(i)\n            for (j <- i + 1 until test_list_sorted.length) {\n                val b = test_list_sorted(j)\n                if (a * b <= 1000000) count += 1\n                else break\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124203,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfcwkb4h1.scala:13:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                \u001b[33melse\u001b[0m break\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfcwkb4h1.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfcwkb4h1.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfcwkb4h1.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val sorted_list = test_list.sorted\n        var count = 0\n        for (i <- 0 until sorted_list.length) {\n            var j = i + 1\n            while (j < sorted_list.length && sorted_list(j) <= sorted_list(i) * 2) {\n                if (sorted_list(j) == sorted_list(i) * 2) count += 1\n                j += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124202,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv2rnb376.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv2rnb376.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv2rnb376.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
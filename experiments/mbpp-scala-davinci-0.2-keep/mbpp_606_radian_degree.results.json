{
  "name": "mbpp_606_radian_degree",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_606_radian_degree.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_yc2zxzb.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        degree * Pi / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * (Pi / 180)\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcw7_hlr3.scala:6:15 ---------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mreturn\u001b[0m degree * (Pi / \u001b[31m180\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m               Found:    Double\n\u001b[31m  |\u001b[0m               Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return (degree * Pi / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp01d0pp8a.scala:6:15 ---------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mreturn\u001b[0m degree * Pi / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m               Found:    Double\n\u001b[31m  |\u001b[0m               Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_yc2zxzb.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        degree * Pi / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180.0f\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return (degree * Pi / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_yc2zxzb.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        degree * Pi / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return (degree * Pi / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return (degree * Pi / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * (Pi / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510330,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * (Pi / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return (degree * Pi.toFloat / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1666123137,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return (degree * Pi / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return (degree * Pi / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_yc2zxzb.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        degree * Pi / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return (degree * Pi / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_yc2zxzb.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        degree * Pi / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_yc2zxzb.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        degree * Pi / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return (degree * Pi / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        val pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632788659361533818279682303019520353018529689957736225994138912497217752834791315155748572424541506959508295331168617278558890750983817546374649393192550604009277016711\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1666123137,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9k6argl.scala:7:5 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m    }\n\u001b[31m\u001b[31m  |\u001b[0m     ^\u001b[0m\n\u001b[31m  |\u001b[0m     Found:    Unit\n\u001b[31m  |\u001b[0m     Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_yc2zxzb.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        degree * Pi / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp01d0pp8a.scala:6:15 ---------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mreturn\u001b[0m degree * Pi / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m               Found:    Double\n\u001b[31m  |\u001b[0m               Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_yc2zxzb.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        degree * Pi / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_yc2zxzb.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        degree * Pi / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_yc2zxzb.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        degree * Pi / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        val pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632788659361533818279682303019520353018529689957736225994138912497217752834791315155748572424541506959508295331168617278558890750983817546374649393192550604009277016711\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1666123137,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9k6argl.scala:7:5 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m    }\n\u001b[31m\u001b[31m  |\u001b[0m     ^\u001b[0m\n\u001b[31m  |\u001b[0m     Found:    Unit\n\u001b[31m  |\u001b[0m     Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        (degree * Pi) / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpph3o_uaz.scala:6:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        (degree * Pi) / \u001b[31m180\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    Double\n\u001b[31m  |\u001b[0m        Required: Float\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return (degree * Pi / 180).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        return degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert degrees to radians.\n    def radianDegree(degree : Long) : Float = {\n        degree * Pi.toFloat / 180\n    }\n    def main(args: Array[String]) = {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_106_add_lists",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_106_add_lists.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        test_list.foldLeft(test_tup)((a, b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpccz3yj2r.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpccz3yj2r.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpccz3yj2r.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i)\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        return test_list.foldLeft(test_tup)((x, y) => x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0zyvqohr.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0zyvqohr.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0zyvqohr.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * test_tup\n            test_tup *= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4zu5fjyq.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup *= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value *= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zu5fjyq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zu5fjyq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zu5fjyq.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i)\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * test_tup\n            test_tup *= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4zu5fjyq.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup *= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value *= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zu5fjyq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zu5fjyq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zu5fjyq.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to test_list.length - 1) {\n            sum += test_list(i) * test_tup\n            test_tup *= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_u1qzn6.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup *= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value *= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * test_tup\n            test_tup *= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpddpi14jj.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup *= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value *= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpddpi14jj.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpddpi14jj.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpddpi14jj.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum += test_tup\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2eer94xx.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2eer94xx.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2eer94xx.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var result : Long = 0\n        for (i <- test_list) {\n            result += i\n        }\n        result + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybw04645.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybw04645.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybw04645.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * test_tup\n            test_tup /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpaj_pstoh.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaj_pstoh.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaj_pstoh.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaj_pstoh.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        test_list.foldLeft(test_tup)((x, y) => x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplovdfusj.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplovdfusj.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplovdfusj.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i)\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * test_tup\n            test_tup *= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpddpi14jj.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup *= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value *= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpddpi14jj.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpddpi14jj.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpddpi14jj.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var result : Long = 0\n        for (i <- test_list) {\n            result += i\n        }\n        result + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybw04645.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybw04645.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybw04645.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to test_list.length - 1) {\n            sum += test_list(i) * test_tup\n            test_tup *= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_u1qzn6.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup *= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value *= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum += test_tup\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2eer94xx.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2eer94xx.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2eer94xx.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        test_list.foldLeft(test_tup)((acc, x) => acc + x)\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvlhtcot1.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvlhtcot1.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvlhtcot1.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * pow(10, test_list.length - i - 1).toLong\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprkg17764.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprkg17764.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprkg17764.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * test_tup\n            test_tup *= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4zu5fjyq.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup *= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value *= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zu5fjyq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zu5fjyq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zu5fjyq.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * pow(10, test_list.length - i - 1).toLong\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_d0wlq42.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_d0wlq42.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_d0wlq42.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * test_tup\n            test_tup /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpaj_pstoh.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value /= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaj_pstoh.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaj_pstoh.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaj_pstoh.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var result : Long = 0\n        for (i <- test_list) {\n            result += i\n        }\n        result + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybw04645.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybw04645.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybw04645.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * test_tup\n            test_tup *= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4zu5fjyq.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup *= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value *= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zu5fjyq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zu5fjyq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zu5fjyq.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to test_list.length - 1) {\n            sum += test_list(i) * test_tup\n            test_tup *= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_u1qzn6.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup *= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value *= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        test_list.foldLeft(test_tup)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgi6phr9k.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgi6phr9k.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgi6phr9k.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        val sum = test_list.foldLeft(0L)((sum, x) => sum + x)\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu4k4j8g1.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu4k4j8g1.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu4k4j8g1.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to test_list.length - 1) {\n            sum += test_list(i) * test_tup\n            test_tup *= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_u1qzn6.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup *= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value *= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        return test_list.foldLeft(test_tup)((a,b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyyn7u9et.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyyn7u9et.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyyn7u9et.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i)\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i)\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplm__wejq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        test_list.foldLeft(test_tup)((a, b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpccz3yj2r.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpccz3yj2r.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpccz3yj2r.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        test_list.foldLeft(test_tup)((x, y) => x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplovdfusj.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplovdfusj.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplovdfusj.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum += test_tup\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2eer94xx.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2eer94xx.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2eer94xx.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        test_list.foldLeft(test_tup)((x, y) => x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplovdfusj.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplovdfusj.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplovdfusj.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i)\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt8zjvugo.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt8zjvugo.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt8zjvugo.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * pow(test_tup, i).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78pjzszk.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78pjzszk.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78pjzszk.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * pow(test_tup, i).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78pjzszk.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78pjzszk.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78pjzszk.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        test_list.foldLeft(test_tup)((a, b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpccz3yj2r.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpccz3yj2r.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpccz3yj2r.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum = sum + i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxmxem4ko.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxmxem4ko.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxmxem4ko.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to test_list.length - 1) {\n            sum += test_list(i) * test_tup\n            test_tup *= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4_u1qzn6.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup *= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value *= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_u1qzn6.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1vfqupw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * pow(10, test_list.length - i - 1).toLong\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyuojhc3h.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyuojhc3h.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyuojhc3h.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i) * test_tup\n            test_tup *= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpddpi14jj.scala:9:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            test_tup *= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value *= is not a member of Long - did you mean test_tup.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpddpi14jj.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpddpi14jj.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpddpi14jj.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8mvc7jq.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var result : Long = 0\n        for (i <- test_list) {\n            result += i\n        }\n        result += test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptget2reb.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptget2reb.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptget2reb.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        test_list.foldLeft(test_tup)((x, y) => x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplovdfusj.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplovdfusj.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplovdfusj.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbv1l1pt9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to append the given list to the given tuples.\n    def addLists(test_list : List[Long], test_tup : Long) : Long = {\n        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        sum + test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addLists((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)) == (9l, 10l, 5l, 6l, 7l));\n    assert(addLists((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)) == (10l, 11l, 6l, 7l, 8l));\n    assert(addLists((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)) == (11l, 12l, 7l, 8l, 9l));\n    }\n\n}\n",
      "timestamp": 1665510315,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)) == (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7bhynvp.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addLists((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)) == (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
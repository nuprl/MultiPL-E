{
  "name": "mbpp_427_change_date_format",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_427_change_date_format.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val d = dt.split(\"-\")\n        d(2) + \"-\" + d(1) + \"-\" + d(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val tokens = dt.split(\"-\")\n        tokens(2) + \"-\" + tokens(1) + \"-\" + tokens(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123448,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        return dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val parts = dt.split(\"-\")\n        parts(2) + \"-\" + parts(1) + \"-\" + parts(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        return dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArray = dt.split(\"-\")\n        dtArray(2) + \"-\" + dtArray(1) + \"-\" + dtArray(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val parts = dt.split(\"-\")\n        return parts(2) + \"-\" + parts(1) + \"-\" + parts(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        return dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        return dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArray = dt.split(\"-\")\n        dtArray(2) + \"-\" + dtArray(1) + \"-\" + dtArray(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        return dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArray = dt.split(\"-\")\n        dtArray(2) + \"-\" + dtArray(1) + \"-\" + dtArray(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        return dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val Array(year, month, day) = dt.split(\"-\")\n        return day + \"-\" + month + \"-\" + year\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        return dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val split = dt.split(\"-\")\n        return split(2) + \"-\" + split(1) + \"-\" + split(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val s = dt.split(\"-\")\n        s(2) + \"-\" + s(1) + \"-\" + s(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val parts = dt.split(\"-\")\n        parts(2) + \"-\" + parts(1) + \"-\" + parts(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dt_arr = dt.split(\"-\")\n        dt_arr(2) + \"-\" + dt_arr(1) + \"-\" + dt_arr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1666123451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        return date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val dtArr = dt.split(\"-\")\n        dtArr(2) + \"-\" + dtArr(1) + \"-\" + dtArr(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\n    def changeDateFormat(dt : String) : String = {\n        val date = dt.split(\"-\")\n        date(2) + \"-\" + date(1) + \"-\" + date(0)\n    }\n    def main(args: Array[String]) = {\n    assert(changeDateFormat((\"2026-01-02\")).equals((\"02-01-2026\")));\n    assert(changeDateFormat((\"2020-11-13\")).equals((\"13-11-2020\")));\n    assert(changeDateFormat((\"2021-04-26\")).equals((\"26-04-2021\")));\n    }\n\n}\n",
      "timestamp": 1665517564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
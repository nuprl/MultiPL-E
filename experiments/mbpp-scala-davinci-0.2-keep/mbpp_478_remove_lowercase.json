{
  "name": "mbpp_478_remove_lowercase",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to remove lowercase substrings from a given string.\n    def removeLowercase(str1 : String) : String = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_478_remove_lowercase.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(removeLowercase((\"PYTHon\")).equals((\"PYTH\")));\n    assert(removeLowercase((\"FInD\")).equals((\"FID\")));\n    assert(removeLowercase((\"STRinG\")).equals((\"STRG\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var str2 = \"\"\n        for (c <- str1) {\n            if (c.isUpper) {\n                str2 += c\n            }\n        }\n        str2",
    "        str1.filter(c => c.isUpper)",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).isUpper) str2 += str1(i)\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).isUpper) str2 += str1(i)\n        }\n        str2",
    "        str1.filter(x => x.isUpper)",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).isUpper) str2 += str1(i)\n        }\n        return str2",
    "        val str2 = str1.filter(x => x.isUpper)\n        str2",
    "        str1.filter(c => c.isUpper)",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).isUpper) str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).isUpper) str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) >= 'A' && str1(i) <= 'Z') {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        str1.filter(c => c.isUpper)",
    "        str1.filter(c => c.isUpper)",
    "        str1.replaceAll(\"[a-z]\", \"\")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).isUpper) str2 += str1(i)\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).isUpper) str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (c <- str1) {\n            if (c.isUpper) str2 += c\n        }\n        str2",
    "        str1.replaceAll(\"[a-z]\", \"\")",
    "        str1.replaceAll(\"[a-z]\", \"\")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).isUpper) str2 += str1(i)\n        }\n        str2"
  ]
}
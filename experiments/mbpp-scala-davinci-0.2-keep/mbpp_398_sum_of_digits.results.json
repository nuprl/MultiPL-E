{
  "name": "mbpp_398_sum_of_digits",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_398_sum_of_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1y0jpqqa.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1y0jpqqa.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1y0jpqqa.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case x : Int => sum += x\n            case x : List[Int] => sum += x.sum\n            case x : Array[Int] => sum += x.sum\n            case x : Array[Long] => sum += x.sum\n            case x : Array[Double] => sum += x.sum.toLong\n            case x : Array[Float] => sum += x.sum.toLong\n            case x : Array[BigInt] => sum += x.sum.toLong\n            case x : Array[BigDecimal] => sum += x.sum.toLong\n            case _ =>\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzswtpzve.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzswtpzve.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzswtpzve.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : Int => nums.toString.map(_.asDigit).sum\n            case nums : List[Int] => nums.map(sumOfDigits(_)).sum\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5abbmdn.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5abbmdn.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5abbmdn.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Boolean] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Any] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Big\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaamx5_lx.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ']' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaamx5_lx.scala:31:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaamx5_lx.scala:22:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            \u001b[33mcase\u001b[0m nums : Array[Big\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Not found: type Big\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaamx5_lx.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaamx5_lx.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaamx5_lx.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when comp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case x : Int => sum = x.toString.map(_.asDigit).sum\n            case x : List[Int] => sum = x.map(_.toString.map(_.asDigit).sum).sum\n            case _ => sum = 0\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp97szsnn6.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp97szsnn6.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp97szsnn6.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : List[Int] => x.map(sumOfDigits(_)).sum\n            case x : List[List[Int]] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoal3htx4.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoal3htx4.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoal3htx4.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- 0 until nums.toString.length) {\n            sum += nums.toString.charAt(i).toString.toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9ehr6xgp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9ehr6xgp.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9ehr6xgp.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwzle1ej0.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwzle1ej0.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwzle1ej0.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdjcadcr9.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdjcadcr9.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdjcadcr9.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case n : Int => n.toString.map(_.asDigit).sum\n            case n : Long => n.toString.map(_.asDigit).sum\n            case n : BigInt => n.toString.map(_.asDigit).sum\n            case n : List[Any] => n.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg5o6vpuv.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg5o6vpuv.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg5o6vpuv.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- 0 to nums.toString.length - 1) {\n            sum += nums.toString.charAt(i).asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcrurnr36.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcrurnr36.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcrurnr36.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_bnnll1p.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_bnnll1p.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_bnnll1p.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case nums : List[Any] => nums.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4lr7m6_w.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4lr7m6_w.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4lr7m6_w.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInteger] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case num\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcas5lxlg.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcas5lxlg.scala:31:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcas5lxlg.scala:19:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mcase\u001b[0m nums : List[BigInteger] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             Not found: type BigInteger\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpcas5lxlg.scala:19:92 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mcase\u001b[0m nums : List[BigInteger] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                            ^\u001b[0m\n\u001b[31m   |\u001b[0mambiguous given instances: both \u001b[33mobject\u001b[0m \u001b[35mBigIntIsIntegral\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mNumeric\u001b[0m and \u001b[33mobject\u001b[0m \u001b[35mLongIsIntegral\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mNumeric\u001b[0m match type Numeric[B] of parameter num of \u001b[33mmethod\u001b[0m \u001b[35msum\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mIterableOnceOps\u001b[0m\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcas5lxlg.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcas5lxlg.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case num : Int => sum = num.toString.map(_.asDigit).sum\n            case num : Long => sum = num.toString.map(_.asDigit).sum\n            case num : BigInt => sum = num.toString.map(_.asDigit).sum\n            case num : BigDecimal => sum = num.toString.map(_.asDigit).sum\n            case num : List[Int] => sum = num.map(_.toString.map(_.asDigit).sum).sum\n            case num : List[Long] => sum = num.map(_.toString.map(_.asDigit).sum).sum\n            case num : List[BigInt] => sum = num.map(_.toString.map(_.asDigit).sum).sum\n            case num : List[BigDecimal] => sum = num.map(_.toString.map(_.asDigit).sum).sum\n            case _ => sum = 0\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp8k0v0z4.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp8k0v0z4.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp8k0v0z4.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case num : Int => {\n                var n = num\n                while (n > 0) {\n                    sum += n % 10\n                    n /= 10\n                }\n            }\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510617,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxb401tqn.scala:28:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxb401tqn.scala:29:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxb401tqn.scala:30:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val list = nums.asInstanceOf[List[Int]]\n        list.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa589dpuw.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa589dpuw.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa589dpuw.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Boolean] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Unit] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Any] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[AnyRef] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Nothing] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Null\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123746,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwc00h2w3.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ']' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwc00h2w3.scala:31:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwc00h2w3.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwc00h2w3.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwc00h2w3.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwc00h2w3.scala:30:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpwc00h2w3.scala:24:4 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- 0 to nums.toString.length - 1) {\n            sum += nums.toString.charAt(i).asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9ujvsccu.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9ujvsccu.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9ujvsccu.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg2od5ww2.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg2od5ww2.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg2od5ww2.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case nums : List[Int] => nums.map(sumOfDigits(_)).sum\n            case nums : List[Long] => nums.map(sumOfDigits(_)).sum\n            case nums : List[BigInt] => nums.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp534797zs.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp534797zs.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp534797zs.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Any] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbau9dhx.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbau9dhx.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbau9dhx.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        var sum = 0L\n        for (num <- numsList) {\n            var n = num\n            while (n > 0) {\n                sum += n % 10\n                n /= 10\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123741,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl_besth9.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl_besth9.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl_besth9.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case num : BigDecimal => num.toString.map(_.asDigit).sum\n            case num : String => num.map(_.asDigit).sum\n            case num : List[Int] => num.map(sumOfDigits(_)).sum\n            case num : List[Long] => num.map(sumOfDigits(_)).sum\n            case num : List[BigInt] => num.map(sumOfDigits(_)).sum\n            case num : List[BigDecimal] => num.map(sumOfDigits(_)).sum\n            case num : List[String] => num.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfenor075.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfenor075.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfenor075.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp31encfwu.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp31encfwu.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp31encfwu.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case nums : List[Any] => nums.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4lr7m6_w.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4lr7m6_w.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4lr7m6_w.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvh5a0nix.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvh5a0nix.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvh5a0nix.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Long]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmposxvokco.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmposxvokco.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmposxvokco.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdjcadcr9.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdjcadcr9.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdjcadcr9.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Int] => x.map(sumOfDigits(_)).sum\n            case x : List[Long] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case _ => {\n                println(\"Invalid input\")\n                return -1\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2f_f0o_g.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2f_f0o_g.scala:43:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2f_f0o_g.scala:44:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2f_f0o_g.scala:45:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyybqj5ao.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyybqj5ao.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyybqj5ao.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ixq8061.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ixq8061.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ixq8061.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case _ => {\n                println(\"Invalid input\")\n                return -1\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2f_f0o_g.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2f_f0o_g.scala:43:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2f_f0o_g.scala:44:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2f_f0o_g.scala:45:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += (i.asDigit)\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123741,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphq748nn_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphq748nn_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphq748nn_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.toString.toLong\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqs92lztn.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqs92lztn.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqs92lztn.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case num : Int => sum = num.toString.map(_.asDigit).sum\n            case num : Long => sum = num.toString.map(_.asDigit).sum\n            case num : String => sum = num.toString.map(_.asDigit).sum\n            case num : Double => sum = num.toString.map(_.asDigit).sum\n            case num : Float => sum = num.toString.map(_.asDigit).sum\n            case num : BigInt => sum = num.toString.map(_.asDigit).sum\n            case num : BigDecimal => sum = num.toString.map(_.asDigit).sum\n            case num : List[Any] => sum = num.map(sumOfDigits(_)).sum\n            case num : Array[Any] => sum = num.map(sumOfDigits(_)).sum\n            case num : Set[Any] => sum = num.map(sumOfDigits(_)).sum\n            case num : Map[Any, Any] => sum = num.map(sumOfDigits(_)).sum\n            case _ => sum = 0\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqo6yks7y.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqo6yks7y.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqo6yks7y.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpquv6vxa4.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpquv6vxa4.scala:28:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpquv6vxa4.scala:29:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x :: xs => x.toString.map(_.asDigit).sum + sumOfDigits(xs)\n            case Nil => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12i1jm_k.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12i1jm_k.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12i1jm_k.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptanil2je.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptanil2je.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptanil2je.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz_hky1ph.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz_hky1ph.scala:28:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz_hky1ph.scala:29:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7q1cytnm.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7q1cytnm.scala:39:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7q1cytnm.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7q1cytnm.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(sumOfDigits(_)).sum\n            case nums : Int => nums.toString.map(_.asDigit).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpit7vy5du.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpit7vy5du.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpit7vy5du.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_bnnll1p.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_bnnll1p.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_bnnll1p.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case num : Int => sum += num\n            case num : Long => sum += num\n            case num : Double => sum += num.toLong\n            case num : BigInt => sum += num.toLong\n            case num : BigDecimal => sum += num.toLong\n            case num : List[Any] => num.foreach(sum += sumOfDigits(_))\n            case num : Array[Any] => num.foreach(sum += sumOfDigits(_))\n            case num : Set[Any] => num.foreach(sum += sumOfDigits(_))\n            case num : Map[Any, Any] => num.foreach(sum += sumOfDigits(_._2))\n            case _ => println(\"Invalid input\")\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvwqit7l7.scala:16:56 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mcase\u001b[0m num : Map[Any, Any] => num.foreach(sum += sumOfDigits(_._2))\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpvwqit7l7.scala:16:71 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mcase\u001b[0m num : Map[Any, Any] => num.foreach(sum += sumOfDigits(_._2))\n\u001b[31m\u001b[31m   |\u001b[0m                                                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$4 of expanded function:\n\u001b[31m   |\u001b[0m   _$4 => _$4._2.\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvwqit7l7.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvwqit7l7.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvwqit7l7.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case num : BigDecimal => num.toString.map(_.asDigit).sum\n            case num : String => num.map(_.asDigit).sum\n            case nums : List[Any] => nums.map(sumOfDigits).sum\n            case nums : Array[Any] => nums.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp775v2dv2.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp775v2dv2.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp775v2dv2.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7afqah0e.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7afqah0e.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7afqah0e.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkov9dib6.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkov9dib6.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkov9dib6.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) sum += i.toString.toLong\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn19p3zxy.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn19p3zxy.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn19p3zxy.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj78rvrg1.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj78rvrg1.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj78rvrg1.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val list = nums.asInstanceOf[List[Int]]\n        var sum = 0\n        for (i <- list) {\n            var num = i\n            while (num > 0) {\n                sum += num % 10\n                num /= 10\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4ll9fvnn.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4ll9fvnn.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4ll9fvnn.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        var sum = 0L\n        for (num <- numsList) {\n            var numStr = num.toString\n            for (i <- 0 until numStr.length) {\n                sum += numStr(i).toString.toInt\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp39iw0o7k.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp39iw0o7k.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp39iw0o7k.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Boolean] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Unit] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Any] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj5wpka4l.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj5wpka4l.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj5wpka4l.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case x : Int => sum = x.toString.map(_.asDigit).sum\n            case x : Long => sum = x.toString.map(_.asDigit).sum\n            case x : Array[Int] => x.foreach(y => sum += y.toString.map(_.asDigit).sum)\n            case x : Array[Long] => x.foreach(y => sum += y.toString.map(_.asDigit).sum)\n            case x : List[Int] => x.foreach(y => sum += y.toString.map(_.asDigit).sum)\n            case x : List[Long] => x.foreach(y => sum += y.toString.map(_.asDigit).sum)\n            case _ => println(\"Invalid input\")\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123756,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn_dv4nhy.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn_dv4nhy.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn_dv4nhy.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        var num = nums.toString\n        for (i <- 0 until num.length) {\n            sum += num(i).asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsaopwpe8.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsaopwpe8.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsaopwpe8.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123755,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfu__ks5d.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfu__ks5d.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfu__ks5d.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdozgc2b_.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdozgc2b_.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdozgc2b_.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums match {\n            case x: List[Int] => x\n            case x: List[Long] => x\n            case x: List[Double] => x\n            case x: List[Float] => x\n            case x: List[BigInt] => x\n            case x: List[BigDecimal] => x\n            case x: List[String] => x.map(_.toInt)\n            case _ => throw new Exception(\"Invalid input\")\n        }\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123756,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm8gb_q_q.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm8gb_q_q.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm8gb_q_q.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case num : Int => {\n                var n = num\n                while (n != 0) {\n                    sum += n % 10\n                    n /= 10\n                }\n            }\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n != 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case _ => {\n                println(\"Invalid input\")\n                return -1\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123755,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprvq4jrzk.scala:32:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprvq4jrzk.scala:33:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprvq4jrzk.scala:34:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Any] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : Array[Any] =>\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpni9ev51q.scala:31:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpni9ev51q.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpni9ev51q.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpni9ev51q.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpni9ev51q.scala:30:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpni9ev51q.scala:24:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m24 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line i",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkov9dib6.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkov9dib6.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkov9dib6.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr8ca2w90.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr8ca2w90.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr8ca2w90.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123756,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvj82efd3.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvj82efd3.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvj82efd3.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(x => x.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8k2b7g5l.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8k2b7g5l.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8k2b7g5l.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Int] => x.map(sumOfDigits).sum\n            case x : List[Long] => x.map(sumOfDigits).sum\n            case x : Array[Int] => x.map(sumOfDigits).sum\n            case x : Array[Long] => x.map(sumOfDigits).sum\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc2i9ll78.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc2i9ll78.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc2i9ll78.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case x : Int => sum = x.toString.map(_.asDigit).sum\n            case x : List[Int] => sum = x.map(_.toString.map(_.asDigit).sum).sum\n            case x : Array[Int] => sum = x.map(_.toString.map(_.asDigit).sum).sum\n            case x : Set[Int] => sum = x.map(_.toString.map(_.asDigit).sum).sum\n            case x : Map[Int, Int] => sum = x.map(_._1.toString.map(_.asDigit).sum).sum\n            case _ => println(\"Invalid input\")\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbbouxq5f.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbbouxq5f.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbbouxq5f.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ebj_0cg.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ebj_0cg.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ebj_0cg.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1q983fq2.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1q983fq2.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1q983fq2.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : List[Int] => x.map(sumOfDigits(_)).sum\n            case x : Array[Int] => x.map(sumOfDigits(_)).sum\n            case x : Set[Int] => x.map(sumOfDigits(_)).sum\n            case x : HashSet[Int] => x.map(sumOfDigits(_)).sum\n            case x : Map[Int, Int] => x.map(sumOfDigits(_)).sum\n            case x : HashMap[Int, Int] => x.map(sumOfDigits(_)).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Long] => x.map(sumOfDigits(_)).sum\n            case x : Array[Long] => x.map(sumOfDigits(_)).sum\n            case x : Set[Long] => x.map(sumOfDigits(_)).sum\n            case x : HashSet[Long] => x.map(sumOfDigits(_)).sum\n            case x : Map[Long, Long] => x.map(sumOfDigits(_)).sum\n            case x : HashMap[Long, Long] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7mg17hs4.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7mg17hs4.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7mg17hs4.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Int] => x.map(_.toString.map(_.asDigit).sum).sum\n            case x : List[Long] => x.map(_.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsvmu90lr.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsvmu90lr.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsvmu90lr.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case num : Int => sum = num.toString.map(x => x.asDigit).sum\n            case num : Long => sum = num.toString.map(x => x.asDigit).sum\n            case num : Double => sum = num.toString.map(x => x.asDigit).sum\n            case num : Float => sum = num.toString.map(x => x.asDigit).sum\n            case num : BigInt => sum = num.toString.map(x => x.asDigit).sum\n            case num : BigDecimal => sum = num.toString.map(x => x.asDigit).sum\n            case nums : List[Int] => sum = nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => sum = nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => sum = nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => sum = nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => sum = nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => sum = nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case _ => sum = 0\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdcz2m4ga.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdcz2m4ga.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdcz2m4ga.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInteger] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpax5osbq7.scala:11:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mcase\u001b[0m nums : List[BigInteger] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             Not found: type BigInteger\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpax5osbq7.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpax5osbq7.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpax5osbq7.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Double] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Float] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[String] => {\n                for (num <- nums) {\n                    sum += num.map(_.asDigit).sum\n                }\n            }\n            case _ => {\n                println(\"Invalid input\")\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5xhoy0mx.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5xhoy0mx.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5xhoy0mx.scala:42:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        var num = nums.toString.toList\n        for (i <- num) {\n            sum += i.toString.toInt\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt1gqha85.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt1gqha85.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt1gqha85.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz_hky1ph.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz_hky1ph.scala:28:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz_hky1ph.scala:29:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Vector[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Set[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Map[Int, Int] => nums.map(x => x._1.toString.map(_.asDigit).sum + x._2.toString.map(_.asDigit).sum).sum\n            case nums : Int => nums.toString.map(_.asDigit).sum\n            case nums : Long => nums.toString.map(_.asDigit).sum\n            case nums : Double => nums.toString.map(_.asDigit).sum\n            case nums : Float => nums.toString.map(_.asDigit).sum\n            case nums : String => nums.map(_.asDigit).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4e97iey1.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4e97iey1.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4e97iey1.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val nums2 = nums.asInstanceOf[List[Int]]\n        nums2.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6p7g0hec.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6p7g0hec.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6p7g0hec.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr8ca2w90.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr8ca2w90.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr8ca2w90.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfdtj_iw1.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += temp % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:39:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.toString.toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3__pcqx3.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3__pcqx3.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3__pcqx3.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Int] => x.map(sumOfDigits(_)).sum\n            case x : List[Long] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case n : Int => n.toString.map(_.asDigit).sum\n            case n : Long => n.toString.map(_.asDigit).sum\n            case n : BigInt => n.toString.map(_.asDigit).sum\n            case n : BigDecimal => n.toString.map(_.asDigit).sum\n            case n : List[Any] => n.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3x_8xqza.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3x_8xqza.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3x_8xqza.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1y0jpqqa.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1y0jpqqa.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1y0jpqqa.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case num : Int => {\n                var temp = num\n                while (temp > 0) {\n                    sum += temp % 10\n                    temp /= 10\n                }\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123757,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyhoqzj7.scala:28:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyhoqzj7.scala:29:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsyhoqzj7.scala:30:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(x => x.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8k2b7g5l.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8k2b7g5l.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8k2b7g5l.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case num : Int => sum = num.toString.map(_.asDigit).sum\n            case num : Long => sum = num.toString.map(_.asDigit).sum\n            case num : Double => sum = num.toString.map(_.asDigit).sum\n            case num : String => sum = num.toString.map(_.asDigit).sum\n            case num : List[Any] => sum = num.map(sumOfDigits).sum\n            case _ => sum = 0\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9_v1d1j6.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9_v1d1j6.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9_v1d1j6.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_woak4gx.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_woak4gx.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_woak4gx.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Int] => x.map(sumOfDigits(_)).sum\n            case x : List[Long] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7q1cytnm.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7q1cytnm.scala:39:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7q1cytnm.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7q1cytnm.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Long]]\n        numsList.map(x => x.toString.map(x => x.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8rtcpa39.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8rtcpa39.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8rtcpa39.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n != 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n != 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n != 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case _ => {\n                println(\"Invalid input\")\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp040yi0pv.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp040yi0pv.scala:42:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp040yi0pv.scala:43:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp040yi0pv.scala:44:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case nums : List[Any] => {\n                for (num <- nums) {\n                    num match {\n                        case num : Int => sum += num\n                        case num : Long => sum += num\n                        case num : String => sum += num.toLong\n                        case _ => sum += 0\n                    }\n                }\n            }\n            case nums : Array[Any] => {\n                for (num <- nums) {\n                    num match {\n                        case num : Int => sum += num\n                        case num : Long => sum += num\n                        case num : String => sum += num.toLong\n                        case _ => sum += 0\n                    }\n                }\n            }\n            case _ => sum += 0\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkpyvb9ik.scala:33:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkpyvb9ik.scala:34:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkpyvb9ik.scala:35:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(x => x.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8k2b7g5l.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8k2b7g5l.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8k2b7g5l.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numbers = nums.asInstanceOf[List[Int]]\n        var sum = 0\n        for (i <- numbers) {\n            var number = i\n            while (number > 0) {\n                sum += number % 10\n                number /= 10\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123768,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_mqfd_51.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_mqfd_51.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_mqfd_51.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwzle1ej0.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwzle1ej0.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwzle1ej0.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val lst = nums.asInstanceOf[List[Int]]\n        lst.map(x => x.toString.map(x => x.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbmq5_sa2.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbmq5_sa2.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbmq5_sa2.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.asDigit).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.asDigit).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmi9mcf5p.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmi9mcf5p.scala:31:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmi9mcf5p.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmi9mcf5p.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmi9mcf5p.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi9mcf5p.scala:30:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpmi9mcf5p.scala:24:4 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        var num = nums.toString\n        for (i <- 0 until num.length) {\n            sum += num(i).asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy65w51rh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy65w51rh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy65w51rh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        var sum = 0L\n        for (num <- numsList) {\n            var temp = num\n            while (temp > 0) {\n                sum += temp % 10\n                temp /= 10\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123769,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1x5m4mnw.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1x5m4mnw.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1x5m4mnw.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[BigDecimal] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[String] => {\n                for (num <- nums) {\n                    sum += num.map(_.asDigit).sum\n                }\n            }\n            case _ => {\n                println(\"Invalid input\")\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg5pfz64d.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg5pfz64d.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg5pfz64d.scala:42:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(num => num.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpom6jqtz2.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpom6jqtz2.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpom6jqtz2.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2z356z7y.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2z356z7y.scala:31:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2z356z7y.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2z356z7y.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2z356z7y.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2z356z7y.scala:30:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp2z356z7y.scala:24:4 ----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : Double => num.toString.map(_.asDigit).sum\n            case num : Float => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case num : BigDecimal => num.toString.map(_.asDigit).sum\n            case num : String => num.map(_.asDigit).sum\n            case nums : List[Int] => nums.map(sumOfDigits).sum\n            case nums : List[Long] => nums.map(sumOfDigits).sum\n            case nums : List[Double] => nums.map(sumOfDigits).sum\n            case nums : List[Float] => nums.map(sumOfDigits).sum\n            case nums : List[BigInt] => nums.map(sumOfDigits).sum\n            case nums : List[BigDecimal] => nums.map(sumOfDigits).sum\n            case nums : List[String] => nums.map(sumOfDigits).sum\n            case _ => throw new Exception(\"Invalid input\")\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqrtf3yrm.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqrtf3yrm.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqrtf3yrm.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : Array[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv5oyumvy.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv5oyumvy.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv5oyumvy.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case num : Int => sum = num.toString.map(_.asDigit).sum\n            case num : Long => sum = num.toString.map(_.asDigit).sum\n            case num : BigInt => sum = num.toString.map(_.asDigit).sum\n            case num : List[Int] => sum = num.map(_.toString.map(_.asDigit).sum).sum\n            case num : List[Long] => sum = num.map(_.toString.map(_.asDigit).sum).sum\n            case num : List[BigInt] => sum = num.map(_.toString.map(_.asDigit).sum).sum\n            case _ => sum = 0\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp59yjo8kv.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp59yjo8kv.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp59yjo8kv.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyd8_8yt5.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyd8_8yt5.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyd8_8yt5.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => throw new Exception(\"Unsupported type\")\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0glrlmpq.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0glrlmpq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0glrlmpq.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_kefd9yv.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case x : Int => sum = x.toString.map(_.asDigit).sum\n            case x : Long => sum = x.toString.map(_.asDigit).sum\n            case x : List[Int] => sum = x.map(_.toString.map(_.asDigit).sum).sum\n            case x : List[Long] => sum = x.map(_.toString.map(_.asDigit).sum).sum\n            case x : Array[Int] => sum = x.map(_.toString.map(_.asDigit).sum).sum\n            case x : Array[Long] => sum = x.map(_.toString.map(_.asDigit).sum).sum\n            case _ => sum = 0\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdwudxv4s.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdwudxv4s.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdwudxv4s.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyybqj5ao.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyybqj5ao.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyybqj5ao.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        val sumOfDigitsList = numsList.map(x => x.toString.map(_.asDigit).sum)\n        sumOfDigitsList.sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc_e0f1ep.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc_e0f1ep.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc_e0f1ep.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        var sum = 0\n        for (num <- numsList) {\n            var n = num\n            while (n > 0) {\n                sum += n % 10\n                n /= 10\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt39ss62u.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt39ss62u.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt39ss62u.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(y => y.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(y => y.asDigit).sum).\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj74g0j1n.scala:21:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj74g0j1n.scala:29:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj74g0j1n.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj74g0j1n.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj74g0j1n.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj74g0j1n.scala:28:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpj74g0j1n.scala:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Boolean] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Any] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Big\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpp0froud4.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ']' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpp0froud4.scala:31:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp0froud4.scala:22:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            \u001b[33mcase\u001b[0m nums : Array[Big\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Not found: type Big\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp0froud4.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp0froud4.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp0froud4.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when comp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(y => y.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(y => y.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_6s26d3y.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_6s26d3y.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_6s26d3y.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toInt - 48\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpczi97o69.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpczi97o69.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpczi97o69.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Set[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Vector[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Seq[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Int => nums.toString.map(_.asDigit).sum\n            case nums : Long => nums.toString.map(_.asDigit).sum\n            case nums : Double => nums.toString.map(_.asDigit).sum\n            case nums : Float => nums.toString.map(_.asDigit).sum\n            case nums : String => nums.map(_.asDigit).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjm2gxk84.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjm2gxk84.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjm2gxk84.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwzle1ej0.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwzle1ej0.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwzle1ej0.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm2i8wusl.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm2i8wusl.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm2i8wusl.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27ih5cho.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Long]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmposxvokco.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmposxvokco.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmposxvokco.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- 0 until nums.toString.length) {\n            sum += nums.toString.charAt(i).toString.toInt\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuo8a5wwz.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuo8a5wwz.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuo8a5wwz.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        var num = nums.toString\n        for (i <- 0 until num.length) {\n            sum += num(i).asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy65w51rh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy65w51rh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy65w51rh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDec\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123778,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzf0jsyup.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ']' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzf0jsyup.scala:31:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzf0jsyup.scala:22:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            \u001b[33mcase\u001b[0m nums : List[BigDec\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             Not found: type BigDec\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzf0jsyup.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzf0jsyup.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzf0jsyup.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available whe",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case num : BigDecimal => num.toString.map(_.asDigit).sum\n            case num : List[Any] => num.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123777,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwekbxask.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwekbxask.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwekbxask.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123777,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqo8iqwr8.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqo8iqwr8.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqo8iqwr8.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Any] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Int => nums.toString.map(_.asDigit).sum\n            case nums : Long => nums.toString.map(_.asDigit).sum\n            case nums : BigInt => nums.toString.map(_.asDigit).sum\n            case nums : BigDecimal => nums.toString.map(_.asDigit).sum\n            case nums : Double => nums.toString.map(_.asDigit).sum\n            case nums : Float => nums.toString.map(_.asDigit).sum\n            case nums : String => nums.map(_.asDigit).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123778,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa58zuh28.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa58zuh28.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa58zuh28.scala:28:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsuwzgpzx.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += temp % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsuwzgpzx.scala:39:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsuwzgpzx.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsuwzgpzx.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123778,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk73ql8fl.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk73ql8fl.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk73ql8fl.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfdtj_iw1.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += temp % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:39:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}